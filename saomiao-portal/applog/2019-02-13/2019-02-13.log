2019-02-13 10:02:30 -Starting BootdoApplication on DESKTOP-8PLG398 with PID 11972 (D:\zhenjiu\dingshi-portal\target\classes started by EDZ in D:\zhenjiu\dingshi-portal)
2019-02-13 10:02:30 -Running with Spring Boot v1.5.9.RELEASE, Spring v4.3.13.RELEASE
2019-02-13 10:02:30 -The following profiles are active: dev
2019-02-13 10:02:30 -Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@31fa1761: startup date [Wed Feb 13 10:02:30 CST 2019]; root of context hierarchy
2019-02-13 10:02:30 -HV000001: Hibernate Validator 5.3.6.Final
2019-02-13 10:02:32 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-02-13 10:02:34 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$3dbe0e8c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-02-13 10:02:34 -Bean 'shiroConfig' of type [com.dingshi.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$a6daf4d2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-02-13 10:02:34 -Bean 'userRealm' of type [com.dingshi.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-02-13 10:02:35 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-02-13 10:02:35 -Cache with name 'com.dingshi.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-02-13 10:02:35 -Added EhCache named [com.dingshi.system.shiro.UserRealm.authorizationCache]
2019-02-13 10:02:35 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-02-13 10:02:35 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-02-13 10:02:35 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-02-13 10:02:35 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-02-13 10:02:36 -Tomcat initialized with port(s): 8087 (http)
2019-02-13 10:02:36 -Starting service [Tomcat]
2019-02-13 10:02:36 -Starting Servlet Engine: Apache Tomcat/8.5.23
2019-02-13 10:02:36 -Initializing Spring embedded WebApplicationContext
2019-02-13 10:02:36 -Root WebApplicationContext: initialization completed in 5788 ms
2019-02-13 10:02:37 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-02-13 10:02:37 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-02-13 10:02:37 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-02-13 10:02:37 -Mapping filter: 'requestContextFilter' to: [/*]
2019-02-13 10:02:37 -Mapping filter: 'springSecurityFilterChain' to: [/*]
2019-02-13 10:02:37 -Filter xssFilter was not registered (disabled)
2019-02-13 10:02:37 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-02-13 10:02:37 -Mapping filter: 'com.dingshi.system.filter.CorsFilter' to: [/*]
2019-02-13 10:02:37 -Mapping filter: 'remoteIpFilter' to: [/*]
2019-02-13 10:02:37 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-02-13 10:02:37 -Mapping servlet: 'statViewServlet' to [/druid/*]
2019-02-13 10:02:37 -Mapping servlet: 'dispatcherServlet' to [/]
2019-02-13 10:02:38 -init datasource error, url: jdbc:mysql://rm-2ze78w428x14i3zroo.mysql.rds.aliyuncs.com:3306/dingshi?useUnicode=true&characterEncoding=utf8
java.sql.SQLException: The MySQL server is running with the --rds-deny-access option so it cannot execute this statement
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:964)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3973)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3909)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2527)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2680)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2483)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2441)
	at com.mysql.jdbc.StatementImpl.executeQuery(StatementImpl.java:1381)
	at com.mysql.jdbc.ConnectionImpl.loadServerVariables(ConnectionImpl.java:3790)
	at com.mysql.jdbc.ConnectionImpl.initializePropsFromServer(ConnectionImpl.java:3227)
	at com.mysql.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:2235)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2017)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:779)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:47)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:389)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:330)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:148)
	at com.alibaba.druid.filter.FilterAdapter.connection_connect(FilterAdapter.java:785)
	at com.alibaba.druid.filter.FilterEventAdapter.connection_connect(FilterEventAdapter.java:38)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:142)
	at com.alibaba.druid.filter.FilterAdapter.connection_connect(FilterAdapter.java:785)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:142)
	at com.alibaba.druid.filter.stat.StatFilter.connection_connect(StatFilter.java:211)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:142)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1454)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1516)
	at com.alibaba.druid.pool.DruidDataSource.init(DruidDataSource.java:734)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeCustomInitMethod(AbstractAutowireCapableBeanFactory.java:1758)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1695)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1624)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1066)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:835)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:741)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:467)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1173)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1067)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:513)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1066)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1342)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1249)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:553)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1066)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:585)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:88)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1264)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:553)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1066)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:585)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:88)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1264)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:553)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:761)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:867)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:543)
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.refresh(EmbeddedWebApplicationContext.java:122)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:693)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:360)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:303)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1118)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1107)
	at com.dingshi.BootdoApplication.main(BootdoApplication.java:23)
2019-02-13 10:02:38 -{dataSource-1} init error
java.sql.SQLException: The MySQL server is running with the --rds-deny-access option so it cannot execute this statement
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:964)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3973)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3909)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2527)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2680)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2483)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2441)
	at com.mysql.jdbc.StatementImpl.executeQuery(StatementImpl.java:1381)
	at com.mysql.jdbc.ConnectionImpl.loadServerVariables(ConnectionImpl.java:3790)
	at com.mysql.jdbc.ConnectionImpl.initializePropsFromServer(ConnectionImpl.java:3227)
	at com.mysql.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:2235)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2017)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:779)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:47)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:389)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:330)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:148)
	at com.alibaba.druid.filter.FilterAdapter.connection_connect(FilterAdapter.java:785)
	at com.alibaba.druid.filter.FilterEventAdapter.connection_connect(FilterEventAdapter.java:38)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:142)
	at com.alibaba.druid.filter.FilterAdapter.connection_connect(FilterAdapter.java:785)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:142)
	at com.alibaba.druid.filter.stat.StatFilter.connection_connect(StatFilter.java:211)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:142)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1454)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1516)
	at com.alibaba.druid.pool.DruidDataSource.init(DruidDataSource.java:734)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeCustomInitMethod(AbstractAutowireCapableBeanFactory.java:1758)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1695)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1624)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1066)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:835)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:741)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:467)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1173)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1067)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:513)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1066)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1342)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1249)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:553)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1066)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:585)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:88)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1264)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:553)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1066)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:585)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:88)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1264)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:553)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:761)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:867)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:543)
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.refresh(EmbeddedWebApplicationContext.java:122)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:693)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:360)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:303)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1118)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1107)
	at com.dingshi.BootdoApplication.main(BootdoApplication.java:23)
2019-02-13 10:02:38 -{dataSource-1} inited
2019-02-13 10:02:38 -Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'logAspect': Unsatisfied dependency expressed through field 'logService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'logServiceImpl': Unsatisfied dependency expressed through field 'logMapper'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'logDao' defined in file [D:\zhenjiu\dingshi-portal\target\classes\com\dingshi\common\dao\LogDao.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Unsatisfied dependency expressed through method 'sqlSessionFactory' parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSource' defined in class path resource [com/dingshi/common/config/DruidDBConfig.class]: Invocation of init method failed; nested exception is java.sql.SQLException: The MySQL server is running with the --rds-deny-access option so it cannot execute this statement
2019-02-13 10:02:38 -Stopping service [Tomcat]
2019-02-13 10:02:38 -

Error starting ApplicationContext. To display the auto-configuration report re-run your application with 'debug' enabled.
2019-02-13 10:02:38 -Application startup failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'logAspect': Unsatisfied dependency expressed through field 'logService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'logServiceImpl': Unsatisfied dependency expressed through field 'logMapper'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'logDao' defined in file [D:\zhenjiu\dingshi-portal\target\classes\com\dingshi\common\dao\LogDao.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Unsatisfied dependency expressed through method 'sqlSessionFactory' parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSource' defined in class path resource [com/dingshi/common/config/DruidDBConfig.class]: Invocation of init method failed; nested exception is java.sql.SQLException: The MySQL server is running with the --rds-deny-access option so it cannot execute this statement
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:588)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:88)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1264)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:553)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:761)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:867)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:543)
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.refresh(EmbeddedWebApplicationContext.java:122)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:693)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:360)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:303)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1118)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1107)
	at com.dingshi.BootdoApplication.main(BootdoApplication.java:23)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'logServiceImpl': Unsatisfied dependency expressed through field 'logMapper'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'logDao' defined in file [D:\zhenjiu\dingshi-portal\target\classes\com\dingshi\common\dao\LogDao.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Unsatisfied dependency expressed through method 'sqlSessionFactory' parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSource' defined in class path resource [com/dingshi/common/config/DruidDBConfig.class]: Invocation of init method failed; nested exception is java.sql.SQLException: The MySQL server is running with the --rds-deny-access option so it cannot execute this statement
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:588)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:88)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1264)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:553)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1066)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:585)
	... 19 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'logDao' defined in file [D:\zhenjiu\dingshi-portal\target\classes\com\dingshi\common\dao\LogDao.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Unsatisfied dependency expressed through method 'sqlSessionFactory' parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSource' defined in class path resource [com/dingshi/common/config/DruidDBConfig.class]: Invocation of init method failed; nested exception is java.sql.SQLException: The MySQL server is running with the --rds-deny-access option so it cannot execute this statement
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1357)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1249)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:553)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1066)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:585)
	... 32 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Unsatisfied dependency expressed through method 'sqlSessionFactory' parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSource' defined in class path resource [com/dingshi/common/config/DruidDBConfig.class]: Invocation of init method failed; nested exception is java.sql.SQLException: The MySQL server is running with the --rds-deny-access option so it cannot execute this statement
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:749)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:467)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1173)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1067)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:513)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1066)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1342)
	... 43 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSource' defined in class path resource [com/dingshi/common/config/DruidDBConfig.class]: Invocation of init method failed; nested exception is java.sql.SQLException: The MySQL server is running with the --rds-deny-access option so it cannot execute this statement
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1628)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1066)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:835)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:741)
	... 56 common frames omitted
Caused by: java.sql.SQLException: The MySQL server is running with the --rds-deny-access option so it cannot execute this statement
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:964)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3973)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3909)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2527)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2680)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2483)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2441)
	at com.mysql.jdbc.StatementImpl.executeQuery(StatementImpl.java:1381)
	at com.mysql.jdbc.ConnectionImpl.loadServerVariables(ConnectionImpl.java:3790)
	at com.mysql.jdbc.ConnectionImpl.initializePropsFromServer(ConnectionImpl.java:3227)
	at com.mysql.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:2235)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2017)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:779)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:47)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:389)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:330)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:148)
	at com.alibaba.druid.filter.FilterAdapter.connection_connect(FilterAdapter.java:785)
	at com.alibaba.druid.filter.FilterEventAdapter.connection_connect(FilterEventAdapter.java:38)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:142)
	at com.alibaba.druid.filter.FilterAdapter.connection_connect(FilterAdapter.java:785)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:142)
	at com.alibaba.druid.filter.stat.StatFilter.connection_connect(StatFilter.java:211)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:142)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1454)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1516)
	at com.alibaba.druid.pool.DruidDataSource.init(DruidDataSource.java:734)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeCustomInitMethod(AbstractAutowireCapableBeanFactory.java:1758)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1695)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1624)
	... 67 common frames omitted
2019-02-13 10:08:31 -Starting BootdoApplication on DESKTOP-8PLG398 with PID 10480 (D:\zhenjiu\dingshi-portal\target\classes started by EDZ in D:\zhenjiu\dingshi-portal)
2019-02-13 10:08:31 -Running with Spring Boot v1.5.9.RELEASE, Spring v4.3.13.RELEASE
2019-02-13 10:08:31 -The following profiles are active: dev
2019-02-13 10:08:31 -HV000001: Hibernate Validator 5.3.6.Final
2019-02-13 10:08:31 -Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@31fa1761: startup date [Wed Feb 13 10:08:31 CST 2019]; root of context hierarchy
2019-02-13 10:08:32 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-02-13 10:08:33 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$3dbe0e8c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-02-13 10:08:33 -Bean 'shiroConfig' of type [com.dingshi.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$a6daf4d2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-02-13 10:08:34 -Bean 'userRealm' of type [com.dingshi.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-02-13 10:08:34 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-02-13 10:08:34 -Cache with name 'com.dingshi.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-02-13 10:08:34 -Added EhCache named [com.dingshi.system.shiro.UserRealm.authorizationCache]
2019-02-13 10:08:34 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-02-13 10:08:34 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-02-13 10:08:34 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-02-13 10:08:34 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-02-13 10:08:34 -Tomcat initialized with port(s): 8087 (http)
2019-02-13 10:08:34 -Starting service [Tomcat]
2019-02-13 10:08:34 -Starting Servlet Engine: Apache Tomcat/8.5.23
2019-02-13 10:08:35 -Initializing Spring embedded WebApplicationContext
2019-02-13 10:08:35 -Root WebApplicationContext: initialization completed in 3559 ms
2019-02-13 10:08:35 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-02-13 10:08:35 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-02-13 10:08:35 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-02-13 10:08:35 -Mapping filter: 'requestContextFilter' to: [/*]
2019-02-13 10:08:35 -Mapping filter: 'springSecurityFilterChain' to: [/*]
2019-02-13 10:08:35 -Filter xssFilter was not registered (disabled)
2019-02-13 10:08:35 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-02-13 10:08:35 -Mapping filter: 'com.dingshi.system.filter.CorsFilter' to: [/*]
2019-02-13 10:08:35 -Mapping filter: 'remoteIpFilter' to: [/*]
2019-02-13 10:08:35 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-02-13 10:08:35 -Mapping servlet: 'statViewServlet' to [/druid/*]
2019-02-13 10:08:35 -Mapping servlet: 'dispatcherServlet' to [/]
2019-02-13 10:08:36 -{dataSource-1} inited
2019-02-13 10:08:36 -ApplicationContext registed-->org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@31fa1761: startup date [Wed Feb 13 10:08:31 CST 2019]; root of context hierarchy
2019-02-13 10:08:37 -Using default implementation for ThreadExecutor
2019-02-13 10:08:37 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-02-13 10:08:37 -Quartz Scheduler v.2.2.1 created.
2019-02-13 10:08:37 -RAMJobStore initialized.
2019-02-13 10:08:37 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-02-13 10:08:37 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-02-13 10:08:37 -Quartz scheduler version: 2.2.1
2019-02-13 10:08:37 -JobFactory set to: com.dingshi.common.quartz.factory.JobFactory@230232b0
2019-02-13 10:08:38 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.dingshi.common.controller.DictController.add()
2019-02-13 10:08:38 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.dingshi.common.utils.R com.dingshi.common.controller.DictController.remove(java.lang.Long)
2019-02-13 10:08:38 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.dingshi.common.utils.R com.dingshi.common.controller.DictController.remove(java.lang.Long[])
2019-02-13 10:08:38 -Mapped "{[/common/dict/update]}" onto public com.dingshi.common.utils.R com.dingshi.common.controller.DictController.update(com.dingshi.common.domain.DictDO)
2019-02-13 10:08:38 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.dingshi.common.utils.PageUtils com.dingshi.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-02-13 10:08:38 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.dingshi.common.utils.R com.dingshi.common.controller.DictController.save(com.dingshi.common.domain.DictDO)
2019-02-13 10:08:38 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.dingshi.common.domain.DictDO> com.dingshi.common.controller.DictController.listType()
2019-02-13 10:08:38 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.dingshi.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-02-13 10:08:38 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.dingshi.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-02-13 10:08:38 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.dingshi.common.controller.DictController.dict()
2019-02-13 10:08:38 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.dingshi.common.domain.DictDO> com.dingshi.common.controller.DictController.listByType(java.lang.String)
2019-02-13 10:08:38 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.dingshi.common.controller.FileController.add()
2019-02-13 10:08:38 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.dingshi.common.utils.R com.dingshi.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-02-13 10:08:38 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.dingshi.common.utils.R com.dingshi.common.controller.FileController.remove(java.lang.Long[])
2019-02-13 10:08:38 -Mapped "{[/common/sysFile/update]}" onto public com.dingshi.common.utils.R com.dingshi.common.controller.FileController.update(com.dingshi.common.domain.FileDO)
2019-02-13 10:08:38 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.dingshi.common.utils.PageUtils com.dingshi.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-02-13 10:08:38 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.dingshi.common.utils.R com.dingshi.common.controller.FileController.save(com.dingshi.common.domain.FileDO)
2019-02-13 10:08:38 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.dingshi.common.utils.R com.dingshi.common.controller.FileController.info(java.lang.Long)
2019-02-13 10:08:38 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.dingshi.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-02-13 10:08:38 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.dingshi.common.utils.R com.dingshi.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-02-13 10:08:38 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.dingshi.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-02-13 10:08:38 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.dingshi.common.utils.R com.dingshi.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-02-13 10:08:38 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.dingshi.common.controller.GeneratorController.list()
2019-02-13 10:08:38 -Mapped "{[/common/generator/batchCode]}" onto public void com.dingshi.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-02-13 10:08:38 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.dingshi.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-02-13 10:08:38 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.dingshi.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-02-13 10:08:38 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.dingshi.common.controller.GeneratorController.generator()
2019-02-13 10:08:38 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.dingshi.common.controller.JobController.add()
2019-02-13 10:08:38 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.dingshi.common.utils.R com.dingshi.common.controller.JobController.remove(java.lang.Long)
2019-02-13 10:08:38 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.dingshi.common.utils.R com.dingshi.common.controller.JobController.remove(java.lang.Long[])
2019-02-13 10:08:38 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.dingshi.common.utils.R com.dingshi.common.controller.JobController.update(com.dingshi.common.domain.TaskDO)
2019-02-13 10:08:38 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.dingshi.common.utils.PageUtils com.dingshi.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-02-13 10:08:38 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.dingshi.common.utils.R com.dingshi.common.controller.JobController.save(com.dingshi.common.domain.TaskDO)
2019-02-13 10:08:38 -Mapped "{[/common/job/info/{id}]}" onto public com.dingshi.common.utils.R com.dingshi.common.controller.JobController.info(java.lang.Long)
2019-02-13 10:08:38 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.dingshi.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-02-13 10:08:38 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.dingshi.common.utils.R com.dingshi.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-02-13 10:08:38 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.dingshi.common.controller.JobController.taskScheduleJob()
2019-02-13 10:08:38 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.dingshi.common.utils.R com.dingshi.common.controller.LogController.remove(java.lang.Long)
2019-02-13 10:08:38 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.dingshi.common.controller.LogController.log()
2019-02-13 10:08:38 -Mapped "{[/common/log/list],methods=[GET]}" onto com.dingshi.common.domain.PageDO<com.dingshi.common.domain.LogDO> com.dingshi.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-02-13 10:08:38 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.dingshi.common.utils.R com.dingshi.common.controller.LogController.batchRemove(java.lang.Long[])
2019-02-13 10:08:38 -Mapped "{[/error]}" onto public com.dingshi.common.utils.R com.dingshi.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-02-13 10:08:38 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.dingshi.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-02-13 10:08:38 -Mapped "{[/information/complaint/save],methods=[POST]}" onto public com.dingshi.common.utils.R com.dingshi.information.controller.ComplaintController.save(com.dingshi.information.domain.ComplaintDO)
2019-02-13 10:08:38 -Mapped "{[/information/complaint],methods=[GET]}" onto java.lang.String com.dingshi.information.controller.ComplaintController.Complaint(org.springframework.ui.Model)
2019-02-13 10:08:38 -Mapped "{[/information/complaint/getPlotPhone],methods=[POST]}" onto public com.dingshi.common.utils.R com.dingshi.information.controller.ComplaintController.getPlotPhone(java.lang.Long)
2019-02-13 10:08:38 -Mapped "{[/information/consult/msgList],methods=[GET]}" onto java.util.Map<java.lang.String, java.lang.Object> com.dingshi.information.controller.ConsultController.msgList(java.util.Map<java.lang.String, java.lang.Object>)
2019-02-13 10:08:38 -Mapped "{[/information/consult/editMsg],methods=[POST]}" onto java.util.Map<java.lang.String, java.lang.Object> com.dingshi.information.controller.ConsultController.editMsg(java.lang.Integer)
2019-02-13 10:08:38 -Mapped "{[/information/msg],methods=[GET]}" onto java.lang.String com.dingshi.information.controller.MsgController.Msg(org.springframework.ui.Model)
2019-02-13 10:08:38 -Mapped "{[/information/msg/queryMsgDetails],methods=[GET]}" onto java.lang.String com.dingshi.information.controller.MsgController.queryMsgDetails(java.lang.Long,java.lang.Long,org.springframework.ui.Model)
2019-02-13 10:08:38 -Mapped "{[/information/notice/{id}],methods=[GET]}" onto java.lang.String com.dingshi.information.controller.NoticeController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-02-13 10:08:38 -Mapped "{[/order/list],methods=[GET]}" onto java.util.Map<java.lang.String, java.lang.Object> com.dingshi.information.controller.OrderController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-02-13 10:08:38 -Mapped "{[/order/listById],methods=[GET]}" onto java.util.Map<java.lang.String, java.lang.Object> com.dingshi.information.controller.OrderController.msgList(java.util.Map<java.lang.String, java.lang.Object>)
2019-02-13 10:08:38 -Mapped "{[/order/deatil],methods=[GET]}" onto java.util.Map<java.lang.String, java.lang.Object> com.dingshi.information.controller.OrderController.deatil(java.lang.Integer)
2019-02-13 10:08:38 -Mapped "{[/register],methods=[POST]}" onto java.util.Map<java.lang.String, java.lang.String> com.dingshi.owneruser.controller.LoginController.register(java.lang.String,java.lang.String)
2019-02-13 10:08:38 -Mapped "{[/captcha],methods=[POST]}" onto java.util.Map<java.lang.String, java.lang.String> com.dingshi.owneruser.controller.LoginController.captcha(java.lang.String,java.lang.String)
2019-02-13 10:08:38 -Mapped "{[/logout],methods=[GET]}" onto java.util.Map<java.lang.String, java.lang.String> com.dingshi.owneruser.controller.LoginController.logout()
2019-02-13 10:08:38 -Mapped "{[/login],methods=[POST]}" onto java.util.Map<java.lang.String, java.lang.Object> com.dingshi.owneruser.controller.LoginController.login(java.lang.String,java.lang.String,java.lang.String)
2019-02-13 10:08:38 -Mapped "{[/owner/userInfo],methods=[GET]}" onto java.util.Map<java.lang.String, java.lang.Object> com.dingshi.owneruser.controller.OwnerUserController.user()
2019-02-13 10:08:38 -Mapped "{[/owner/editHeadUrl],methods=[POST]}" onto java.util.Map<java.lang.String, java.lang.Object> com.dingshi.owneruser.controller.OwnerUserController.editHeadUrl(com.dingshi.owneruser.domain.OwnerUserDO)
2019-02-13 10:08:38 -Mapped "{[/owner/editInfo],methods=[POST]}" onto java.util.Map<java.lang.String, java.lang.Object> com.dingshi.owneruser.controller.OwnerUserController.editInfo(com.dingshi.owneruser.domain.OwnerUserDO)
2019-02-13 10:08:38 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.dingshi.system.domain.UserOnline> com.dingshi.system.controller.SessionController.list()
2019-02-13 10:08:38 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.dingshi.common.utils.R com.dingshi.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-02-13 10:08:38 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.dingshi.system.controller.SessionController.online()
2019-02-13 10:08:38 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.dingshi.system.controller.SessionController.sessionList()
2019-02-13 10:08:38 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-02-13 10:08:38 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-02-13 10:08:38 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-02-13 10:08:38 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-02-13 10:08:38 -Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@31fa1761: startup date [Wed Feb 13 10:08:31 CST 2019]; root of context hierarchy
2019-02-13 10:08:38 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-02-13 10:08:38 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-02-13 10:08:38 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-02-13 10:08:38 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-02-13 10:08:38 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-02-13 10:08:40 -

Using default security password: 804b66fa-00c2-418a-ba54-e9a70fdc4aef

2019-02-13 10:08:40 -Creating filter chain: OrRequestMatcher [requestMatchers=[Ant [pattern='/css/**'], Ant [pattern='/js/**'], Ant [pattern='/images/**'], Ant [pattern='/webjars/**'], Ant [pattern='/**/favicon.ico'], Ant [pattern='/error']]], []
2019-02-13 10:08:40 -Creating filter chain: org.springframework.boot.autoconfigure.security.SpringBootWebSecurityConfiguration$ApplicationNoWebSecurityConfigurerAdapter$1@14d81f2c, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@5dd3727c, org.springframework.security.web.context.SecurityContextPersistenceFilter@54a6ef6, org.springframework.security.web.header.HeaderWriterFilter@45e69324, org.springframework.security.web.csrf.CsrfFilter@653e7b, org.springframework.security.web.authentication.logout.LogoutFilter@36638b59, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@5b59c3d, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@4af7ac25, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@774013dc, org.springframework.security.web.session.SessionManagementFilter@5cb8580, org.springframework.security.web.access.ExceptionTranslationFilter@1e7cfd49]
2019-02-13 10:08:40 -Registering beans for JMX exposure on startup
2019-02-13 10:08:40 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-02-13 10:08:40 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-02-13 10:08:40 -Starting beans in phase 2147483647
2019-02-13 10:08:40 -Context refreshed
2019-02-13 10:08:40 -Found 1 custom documentation plugin(s)
2019-02-13 10:08:40 -Scanning for api listing references
2019-02-13 10:08:41 -Generating unique operation named: removeUsingPOST_1
2019-02-13 10:08:41 -Generating unique operation named: saveUsingPOST_1
2019-02-13 10:08:41 -Generating unique operation named: addUsingGET_1
2019-02-13 10:08:41 -Generating unique operation named: editUsingGET_1
2019-02-13 10:08:41 -Generating unique operation named: listUsingGET_1
2019-02-13 10:08:41 -Generating unique operation named: removeUsingPOST_2
2019-02-13 10:08:41 -Generating unique operation named: removeUsingPOST_3
2019-02-13 10:08:41 -Generating unique operation named: saveUsingPOST_2
2019-02-13 10:08:41 -Generating unique operation named: updateUsingGET_1
2019-02-13 10:08:41 -Generating unique operation named: updateUsingHEAD_1
2019-02-13 10:08:41 -Generating unique operation named: updateUsingPOST_1
2019-02-13 10:08:41 -Generating unique operation named: updateUsingPUT_1
2019-02-13 10:08:41 -Generating unique operation named: updateUsingPATCH_1
2019-02-13 10:08:41 -Generating unique operation named: updateUsingDELETE_1
2019-02-13 10:08:41 -Generating unique operation named: updateUsingOPTIONS_1
2019-02-13 10:08:41 -Generating unique operation named: updateUsingTRACE_1
2019-02-13 10:08:41 -Generating unique operation named: editUsingGET_2
2019-02-13 10:08:41 -Generating unique operation named: listUsingGET_2
2019-02-13 10:08:41 -Generating unique operation named: updateUsingPOST_2
2019-02-13 10:08:41 -Generating unique operation named: addUsingGET_2
2019-02-13 10:08:41 -Generating unique operation named: editUsingGET_3
2019-02-13 10:08:41 -Generating unique operation named: infoUsingGET_1
2019-02-13 10:08:41 -Generating unique operation named: infoUsingHEAD_1
2019-02-13 10:08:41 -Generating unique operation named: infoUsingPOST_1
2019-02-13 10:08:41 -Generating unique operation named: infoUsingPUT_1
2019-02-13 10:08:41 -Generating unique operation named: infoUsingPATCH_1
2019-02-13 10:08:41 -Generating unique operation named: infoUsingDELETE_1
2019-02-13 10:08:41 -Generating unique operation named: infoUsingOPTIONS_1
2019-02-13 10:08:41 -Generating unique operation named: infoUsingTRACE_1
2019-02-13 10:08:41 -Generating unique operation named: listUsingGET_3
2019-02-13 10:08:41 -Generating unique operation named: removeUsingPOST_4
2019-02-13 10:08:41 -Generating unique operation named: removeUsingPOST_5
2019-02-13 10:08:41 -Generating unique operation named: saveUsingPOST_3
2019-02-13 10:08:41 -Generating unique operation named: updateUsingPOST_3
2019-02-13 10:08:41 -Generating unique operation named: listUsingGET_4
2019-02-13 10:08:41 -Generating unique operation named: removeUsingPOST_6
2019-02-13 10:08:41 -Generating unique operation named: editUsingGET_4
2019-02-13 10:08:41 -Generating unique operation named: listUsingGET_5
2019-02-13 10:08:41 -Generating unique operation named: msgListUsingGET_1
2019-02-13 10:08:41 -Generating unique operation named: listUsingGET_6
2019-02-13 10:08:41 -Starting Quartz Scheduler now
2019-02-13 10:08:41 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-02-13 10:08:41 -Initializing ProtocolHandler ["http-nio-8087"]
2019-02-13 10:08:41 -Starting ProtocolHandler ["http-nio-8087"]
2019-02-13 10:08:41 -Using a shared selector for servlet write/read
2019-02-13 10:08:41 -Tomcat started on port(s): 8087 (http)
2019-02-13 10:08:42 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-02-13 10:08:42 -==> Parameters: 
2019-02-13 10:08:42 -<==      Total: 1
2019-02-13 10:08:42 -Started BootdoApplication in 11.455 seconds (JVM running for 12.008)
2019-02-13 10:09:03 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-02-13 10:09:03 -FrameworkServlet 'dispatcherServlet': initialization started
2019-02-13 10:09:03 -FrameworkServlet 'dispatcherServlet': initialization completed in 47 ms
2019-02-13 10:09:03 -Enabling session validation scheduler...
2019-02-13 10:09:03 -[THYMELEAF] INITIALIZING TEMPLATE ENGINE
2019-02-13 10:09:03 -[THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
2019-02-13 10:09:03 -[THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
2019-02-13 10:09:03 -[THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
2019-02-13 10:09:03 -[THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
2019-02-13 10:09:04 -[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * VALIDXML
[THYMELEAF]     * HTML5
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF]     * VALIDXHTML
[THYMELEAF]     * XML
[THYMELEAF]     * XHTML
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 3]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 3]: at.pollux.thymeleaf.shiro.dialect.ShiroDialect
[THYMELEAF]     * Prefix: "shiro"
[THYMELEAF] * Dialect [3 of 3]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2019-02-13 10:09:04 -[THYMELEAF] TEMPLATE ENGINE INITIALIZED
2019-02-13 10:09:04 -No task executor bean found for async processing: no bean of type TaskExecutor and no bean named 'taskExecutor' either
2019-02-13 10:09:04 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-02-13 10:09:04 -Request method 'GET' not supported
org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'GET' not supported
	at org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.handleNoMatch(RequestMappingInfoHandlerMapping.java:207)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.lookupHandlerMethod(AbstractHandlerMethodMapping.java:374)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.getHandlerInternal(AbstractHandlerMethodMapping.java:314)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.getHandlerInternal(AbstractHandlerMethodMapping.java:61)
	at org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:352)
	at org.springframework.web.servlet.DispatcherServlet.getHandler(DispatcherServlet.java:1160)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:940)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.dingshi.system.filter.CorsFilter.doFilter(CorsFilter.java:38)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.dingshi.system.filter.CorsFilter.doFilter(CorsFilter.java:38)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:208)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:347)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:263)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-02-13 10:09:04 -==> Parameters: null, null, error(String), null, http://localhost:8087/login;JSESSIONID=f8d7b2fa-329f-4fa2-8d0b-a664bca78da6(String), org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'GET' not supported(String), null, 2019-02-13 10:09:04.703(Timestamp)
2019-02-13 10:09:04 -<==    Updates: 1
2019-02-13 10:27:19 -Starting BootdoApplication on DESKTOP-8PLG398 with PID 5244 (D:\zhenjiu\dingshi-portal\target\classes started by EDZ in D:\zhenjiu\dingshi-portal)
2019-02-13 10:27:20 -Running with Spring Boot v1.5.9.RELEASE, Spring v4.3.13.RELEASE
2019-02-13 10:27:20 -The following profiles are active: dev
2019-02-13 10:27:20 -Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@31fa1761: startup date [Wed Feb 13 10:27:20 CST 2019]; root of context hierarchy
2019-02-13 10:27:20 -HV000001: Hibernate Validator 5.3.6.Final
2019-02-13 10:27:22 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-02-13 10:27:22 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$1428e98e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-02-13 10:27:23 -Bean 'shiroConfig' of type [com.dingshi.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$7d45cfd4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-02-13 10:27:23 -Bean 'userRealm' of type [com.dingshi.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-02-13 10:27:24 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-02-13 10:27:24 -Cache with name 'com.dingshi.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-02-13 10:27:24 -Added EhCache named [com.dingshi.system.shiro.UserRealm.authorizationCache]
2019-02-13 10:27:24 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-02-13 10:27:24 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-02-13 10:27:24 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-02-13 10:27:24 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-02-13 10:27:24 -Tomcat initialized with port(s): 8087 (http)
2019-02-13 10:27:24 -Starting service [Tomcat]
2019-02-13 10:27:24 -Starting Servlet Engine: Apache Tomcat/8.5.23
2019-02-13 10:27:24 -Initializing Spring embedded WebApplicationContext
2019-02-13 10:27:24 -Root WebApplicationContext: initialization completed in 4381 ms
2019-02-13 10:27:25 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-02-13 10:27:25 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-02-13 10:27:25 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-02-13 10:27:25 -Mapping filter: 'requestContextFilter' to: [/*]
2019-02-13 10:27:25 -Mapping filter: 'springSecurityFilterChain' to: [/*]
2019-02-13 10:27:25 -Filter xssFilter was not registered (disabled)
2019-02-13 10:27:25 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-02-13 10:27:25 -Mapping filter: 'com.dingshi.system.filter.CorsFilter' to: [/*]
2019-02-13 10:27:25 -Mapping filter: 'remoteIpFilter' to: [/*]
2019-02-13 10:27:25 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-02-13 10:27:25 -Mapping servlet: 'statViewServlet' to [/druid/*]
2019-02-13 10:27:25 -Mapping servlet: 'dispatcherServlet' to [/]
2019-02-13 10:27:26 -{dataSource-1} inited
2019-02-13 10:27:26 -ApplicationContext registed-->org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@31fa1761: startup date [Wed Feb 13 10:27:20 CST 2019]; root of context hierarchy
2019-02-13 10:27:27 -Using default implementation for ThreadExecutor
2019-02-13 10:27:27 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-02-13 10:27:27 -Quartz Scheduler v.2.2.1 created.
2019-02-13 10:27:27 -RAMJobStore initialized.
2019-02-13 10:27:27 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-02-13 10:27:27 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-02-13 10:27:27 -Quartz scheduler version: 2.2.1
2019-02-13 10:27:27 -JobFactory set to: com.dingshi.common.quartz.factory.JobFactory@5fe46d52
2019-02-13 10:27:28 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.dingshi.common.controller.DictController.add()
2019-02-13 10:27:28 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.dingshi.common.utils.R com.dingshi.common.controller.DictController.remove(java.lang.Long)
2019-02-13 10:27:28 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.dingshi.common.utils.R com.dingshi.common.controller.DictController.remove(java.lang.Long[])
2019-02-13 10:27:28 -Mapped "{[/common/dict/update]}" onto public com.dingshi.common.utils.R com.dingshi.common.controller.DictController.update(com.dingshi.common.domain.DictDO)
2019-02-13 10:27:28 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.dingshi.common.utils.PageUtils com.dingshi.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-02-13 10:27:28 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.dingshi.common.utils.R com.dingshi.common.controller.DictController.save(com.dingshi.common.domain.DictDO)
2019-02-13 10:27:28 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.dingshi.common.domain.DictDO> com.dingshi.common.controller.DictController.listType()
2019-02-13 10:27:28 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.dingshi.common.controller.DictController.dict()
2019-02-13 10:27:28 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.dingshi.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-02-13 10:27:28 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.dingshi.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-02-13 10:27:28 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.dingshi.common.domain.DictDO> com.dingshi.common.controller.DictController.listByType(java.lang.String)
2019-02-13 10:27:28 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.dingshi.common.controller.FileController.add()
2019-02-13 10:27:28 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.dingshi.common.utils.R com.dingshi.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-02-13 10:27:28 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.dingshi.common.utils.R com.dingshi.common.controller.FileController.remove(java.lang.Long[])
2019-02-13 10:27:28 -Mapped "{[/common/sysFile/update]}" onto public com.dingshi.common.utils.R com.dingshi.common.controller.FileController.update(com.dingshi.common.domain.FileDO)
2019-02-13 10:27:28 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.dingshi.common.utils.PageUtils com.dingshi.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-02-13 10:27:28 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.dingshi.common.utils.R com.dingshi.common.controller.FileController.save(com.dingshi.common.domain.FileDO)
2019-02-13 10:27:28 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.dingshi.common.utils.R com.dingshi.common.controller.FileController.info(java.lang.Long)
2019-02-13 10:27:28 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.dingshi.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-02-13 10:27:28 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.dingshi.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-02-13 10:27:28 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.dingshi.common.utils.R com.dingshi.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-02-13 10:27:28 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.dingshi.common.utils.R com.dingshi.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-02-13 10:27:28 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.dingshi.common.controller.GeneratorController.list()
2019-02-13 10:27:28 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.dingshi.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-02-13 10:27:28 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.dingshi.common.controller.GeneratorController.generator()
2019-02-13 10:27:28 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.dingshi.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-02-13 10:27:28 -Mapped "{[/common/generator/batchCode]}" onto public void com.dingshi.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-02-13 10:27:28 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.dingshi.common.controller.JobController.add()
2019-02-13 10:27:28 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.dingshi.common.utils.R com.dingshi.common.controller.JobController.remove(java.lang.Long)
2019-02-13 10:27:28 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.dingshi.common.utils.R com.dingshi.common.controller.JobController.remove(java.lang.Long[])
2019-02-13 10:27:28 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.dingshi.common.utils.R com.dingshi.common.controller.JobController.update(com.dingshi.common.domain.TaskDO)
2019-02-13 10:27:28 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.dingshi.common.utils.PageUtils com.dingshi.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-02-13 10:27:28 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.dingshi.common.utils.R com.dingshi.common.controller.JobController.save(com.dingshi.common.domain.TaskDO)
2019-02-13 10:27:28 -Mapped "{[/common/job/info/{id}]}" onto public com.dingshi.common.utils.R com.dingshi.common.controller.JobController.info(java.lang.Long)
2019-02-13 10:27:28 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.dingshi.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-02-13 10:27:28 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.dingshi.common.controller.JobController.taskScheduleJob()
2019-02-13 10:27:28 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.dingshi.common.utils.R com.dingshi.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-02-13 10:27:28 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.dingshi.common.utils.R com.dingshi.common.controller.LogController.remove(java.lang.Long)
2019-02-13 10:27:28 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.dingshi.common.controller.LogController.log()
2019-02-13 10:27:28 -Mapped "{[/common/log/list],methods=[GET]}" onto com.dingshi.common.domain.PageDO<com.dingshi.common.domain.LogDO> com.dingshi.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-02-13 10:27:28 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.dingshi.common.utils.R com.dingshi.common.controller.LogController.batchRemove(java.lang.Long[])
2019-02-13 10:27:28 -Mapped "{[/error]}" onto public com.dingshi.common.utils.R com.dingshi.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-02-13 10:27:28 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.dingshi.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-02-13 10:27:28 -Mapped "{[/information/complaint/save],methods=[POST]}" onto public com.dingshi.common.utils.R com.dingshi.information.controller.ComplaintController.save(com.dingshi.information.domain.ComplaintDO)
2019-02-13 10:27:28 -Mapped "{[/information/complaint],methods=[GET]}" onto java.lang.String com.dingshi.information.controller.ComplaintController.Complaint(org.springframework.ui.Model)
2019-02-13 10:27:28 -Mapped "{[/information/complaint/getPlotPhone],methods=[POST]}" onto public com.dingshi.common.utils.R com.dingshi.information.controller.ComplaintController.getPlotPhone(java.lang.Long)
2019-02-13 10:27:28 -Mapped "{[/information/consult/msgList],methods=[GET]}" onto java.util.Map<java.lang.String, java.lang.Object> com.dingshi.information.controller.ConsultController.msgList(java.util.Map<java.lang.String, java.lang.Object>)
2019-02-13 10:27:28 -Mapped "{[/information/consult/editMsg],methods=[POST]}" onto java.util.Map<java.lang.String, java.lang.Object> com.dingshi.information.controller.ConsultController.editMsg(java.lang.Integer)
2019-02-13 10:27:28 -Mapped "{[/information/msg],methods=[GET]}" onto java.lang.String com.dingshi.information.controller.MsgController.Msg(org.springframework.ui.Model)
2019-02-13 10:27:28 -Mapped "{[/information/msg/queryMsgDetails],methods=[GET]}" onto java.lang.String com.dingshi.information.controller.MsgController.queryMsgDetails(java.lang.Long,java.lang.Long,org.springframework.ui.Model)
2019-02-13 10:27:28 -Mapped "{[/information/notice/{id}],methods=[GET]}" onto java.lang.String com.dingshi.information.controller.NoticeController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-02-13 10:27:28 -Mapped "{[/order/list],methods=[GET]}" onto java.util.Map<java.lang.String, java.lang.Object> com.dingshi.information.controller.OrderController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-02-13 10:27:28 -Mapped "{[/order/listById],methods=[GET]}" onto java.util.Map<java.lang.String, java.lang.Object> com.dingshi.information.controller.OrderController.msgList(java.util.Map<java.lang.String, java.lang.Object>)
2019-02-13 10:27:28 -Mapped "{[/order/deatil],methods=[GET]}" onto java.util.Map<java.lang.String, java.lang.Object> com.dingshi.information.controller.OrderController.deatil(java.lang.Integer)
2019-02-13 10:27:28 -Mapped "{[/register],methods=[POST]}" onto java.util.Map<java.lang.String, java.lang.String> com.dingshi.owneruser.controller.LoginController.register(java.lang.String,java.lang.String)
2019-02-13 10:27:28 -Mapped "{[/login],methods=[POST]}" onto java.util.Map<java.lang.String, java.lang.Object> com.dingshi.owneruser.controller.LoginController.login(java.lang.String,java.lang.String,java.lang.String)
2019-02-13 10:27:28 -Mapped "{[/logout],methods=[GET]}" onto java.util.Map<java.lang.String, java.lang.String> com.dingshi.owneruser.controller.LoginController.logout()
2019-02-13 10:27:28 -Mapped "{[/captcha],methods=[POST]}" onto java.util.Map<java.lang.String, java.lang.String> com.dingshi.owneruser.controller.LoginController.captcha(java.lang.String,java.lang.String)
2019-02-13 10:27:28 -Mapped "{[/owner/userInfo],methods=[GET]}" onto java.util.Map<java.lang.String, java.lang.Object> com.dingshi.owneruser.controller.OwnerUserController.user()
2019-02-13 10:27:28 -Mapped "{[/owner/editInfo],methods=[POST]}" onto java.util.Map<java.lang.String, java.lang.Object> com.dingshi.owneruser.controller.OwnerUserController.editInfo(com.dingshi.owneruser.domain.OwnerUserDO)
2019-02-13 10:27:28 -Mapped "{[/owner/editHeadUrl],methods=[POST]}" onto java.util.Map<java.lang.String, java.lang.Object> com.dingshi.owneruser.controller.OwnerUserController.editHeadUrl(com.dingshi.owneruser.domain.OwnerUserDO)
2019-02-13 10:27:28 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.dingshi.system.domain.UserOnline> com.dingshi.system.controller.SessionController.list()
2019-02-13 10:27:28 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.dingshi.system.controller.SessionController.online()
2019-02-13 10:27:28 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.dingshi.system.controller.SessionController.sessionList()
2019-02-13 10:27:28 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.dingshi.common.utils.R com.dingshi.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-02-13 10:27:28 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-02-13 10:27:28 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-02-13 10:27:28 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-02-13 10:27:28 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-02-13 10:27:28 -Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@31fa1761: startup date [Wed Feb 13 10:27:20 CST 2019]; root of context hierarchy
2019-02-13 10:27:28 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-02-13 10:27:28 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-02-13 10:27:28 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-02-13 10:27:28 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-02-13 10:27:28 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-02-13 10:27:30 -

Using default security password: a53e8769-0742-4116-9ea8-387f93339773

2019-02-13 10:27:30 -Creating filter chain: OrRequestMatcher [requestMatchers=[Ant [pattern='/css/**'], Ant [pattern='/js/**'], Ant [pattern='/images/**'], Ant [pattern='/webjars/**'], Ant [pattern='/**/favicon.ico'], Ant [pattern='/error']]], []
2019-02-13 10:27:30 -Creating filter chain: org.springframework.boot.autoconfigure.security.SpringBootWebSecurityConfiguration$ApplicationNoWebSecurityConfigurerAdapter$1@405603b6, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@3c3cd13a, org.springframework.security.web.context.SecurityContextPersistenceFilter@64544ee4, org.springframework.security.web.header.HeaderWriterFilter@398694a6, org.springframework.security.web.csrf.CsrfFilter@26d24d7a, org.springframework.security.web.authentication.logout.LogoutFilter@7fd2a67a, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@539ee811, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@30a62a5b, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@56b751b1, org.springframework.security.web.session.SessionManagementFilter@5c25daad, org.springframework.security.web.access.ExceptionTranslationFilter@2862271a]
2019-02-13 10:27:30 -Registering beans for JMX exposure on startup
2019-02-13 10:27:30 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-02-13 10:27:30 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-02-13 10:27:30 -Starting beans in phase 2147483647
2019-02-13 10:27:30 -Context refreshed
2019-02-13 10:27:30 -Found 1 custom documentation plugin(s)
2019-02-13 10:27:30 -Scanning for api listing references
2019-02-13 10:27:31 -Generating unique operation named: removeUsingPOST_1
2019-02-13 10:27:31 -Generating unique operation named: saveUsingPOST_1
2019-02-13 10:27:31 -Generating unique operation named: addUsingGET_1
2019-02-13 10:27:31 -Generating unique operation named: editUsingGET_1
2019-02-13 10:27:31 -Generating unique operation named: listUsingGET_1
2019-02-13 10:27:31 -Generating unique operation named: removeUsingPOST_2
2019-02-13 10:27:31 -Generating unique operation named: removeUsingPOST_3
2019-02-13 10:27:31 -Generating unique operation named: saveUsingPOST_2
2019-02-13 10:27:31 -Generating unique operation named: updateUsingGET_1
2019-02-13 10:27:31 -Generating unique operation named: updateUsingHEAD_1
2019-02-13 10:27:31 -Generating unique operation named: updateUsingPOST_1
2019-02-13 10:27:31 -Generating unique operation named: updateUsingPUT_1
2019-02-13 10:27:31 -Generating unique operation named: updateUsingPATCH_1
2019-02-13 10:27:31 -Generating unique operation named: updateUsingDELETE_1
2019-02-13 10:27:31 -Generating unique operation named: updateUsingOPTIONS_1
2019-02-13 10:27:31 -Generating unique operation named: updateUsingTRACE_1
2019-02-13 10:27:31 -Generating unique operation named: editUsingGET_2
2019-02-13 10:27:31 -Generating unique operation named: listUsingGET_2
2019-02-13 10:27:31 -Generating unique operation named: updateUsingPOST_2
2019-02-13 10:27:31 -Generating unique operation named: addUsingGET_2
2019-02-13 10:27:31 -Generating unique operation named: editUsingGET_3
2019-02-13 10:27:31 -Generating unique operation named: infoUsingGET_1
2019-02-13 10:27:31 -Generating unique operation named: infoUsingHEAD_1
2019-02-13 10:27:32 -Generating unique operation named: infoUsingPOST_1
2019-02-13 10:27:32 -Generating unique operation named: infoUsingPUT_1
2019-02-13 10:27:32 -Generating unique operation named: infoUsingPATCH_1
2019-02-13 10:27:32 -Generating unique operation named: infoUsingDELETE_1
2019-02-13 10:27:32 -Generating unique operation named: infoUsingOPTIONS_1
2019-02-13 10:27:32 -Generating unique operation named: infoUsingTRACE_1
2019-02-13 10:27:32 -Generating unique operation named: listUsingGET_3
2019-02-13 10:27:32 -Generating unique operation named: removeUsingPOST_4
2019-02-13 10:27:32 -Generating unique operation named: removeUsingPOST_5
2019-02-13 10:27:32 -Generating unique operation named: saveUsingPOST_3
2019-02-13 10:27:32 -Generating unique operation named: updateUsingPOST_3
2019-02-13 10:27:32 -Generating unique operation named: listUsingGET_4
2019-02-13 10:27:32 -Generating unique operation named: removeUsingPOST_6
2019-02-13 10:27:32 -Generating unique operation named: editUsingGET_4
2019-02-13 10:27:32 -Generating unique operation named: listUsingGET_5
2019-02-13 10:27:32 -Generating unique operation named: msgListUsingGET_1
2019-02-13 10:27:32 -Generating unique operation named: listUsingGET_6
2019-02-13 10:27:32 -Starting Quartz Scheduler now
2019-02-13 10:27:32 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-02-13 10:27:32 -Initializing ProtocolHandler ["http-nio-8087"]
2019-02-13 10:27:32 -Starting ProtocolHandler ["http-nio-8087"]
2019-02-13 10:27:32 -Using a shared selector for servlet write/read
2019-02-13 10:27:32 -Tomcat started on port(s): 8087 (http)
2019-02-13 10:27:32 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-02-13 10:27:32 -==> Parameters: 
2019-02-13 10:27:32 -<==      Total: 1
2019-02-13 10:27:32 -Started BootdoApplication in 13.198 seconds (JVM running for 13.696)
2019-02-13 10:27:52 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-02-13 10:27:52 -FrameworkServlet 'dispatcherServlet': initialization started
2019-02-13 10:27:52 -FrameworkServlet 'dispatcherServlet': initialization completed in 35 ms
2019-02-13 10:27:52 -Enabling session validation scheduler...
2019-02-13 10:27:52 -[THYMELEAF] INITIALIZING TEMPLATE ENGINE
2019-02-13 10:27:52 -[THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
2019-02-13 10:27:52 -[THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
2019-02-13 10:27:52 -[THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
2019-02-13 10:27:52 -[THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
2019-02-13 10:27:52 -[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF]     * HTML5
[THYMELEAF]     * XML
[THYMELEAF]     * VALIDXHTML
[THYMELEAF]     * VALIDXML
[THYMELEAF]     * XHTML
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 3]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 3]: at.pollux.thymeleaf.shiro.dialect.ShiroDialect
[THYMELEAF]     * Prefix: "shiro"
[THYMELEAF] * Dialect [3 of 3]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2019-02-13 10:27:52 -[THYMELEAF] TEMPLATE ENGINE INITIALIZED
2019-02-13 10:27:52 -No task executor bean found for async processing: no bean of type TaskExecutor and no bean named 'taskExecutor' either
2019-02-13 10:27:52 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-02-13 10:27:52 -Request method 'GET' not supported
org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'GET' not supported
	at org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.handleNoMatch(RequestMappingInfoHandlerMapping.java:207)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.lookupHandlerMethod(AbstractHandlerMethodMapping.java:374)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.getHandlerInternal(AbstractHandlerMethodMapping.java:314)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.getHandlerInternal(AbstractHandlerMethodMapping.java:61)
	at org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:352)
	at org.springframework.web.servlet.DispatcherServlet.getHandler(DispatcherServlet.java:1160)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:940)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.dingshi.system.filter.CorsFilter.doFilter(CorsFilter.java:38)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.dingshi.system.filter.CorsFilter.doFilter(CorsFilter.java:38)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:208)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:347)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:263)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-02-13 10:27:52 -==> Parameters: null, null, error(String), null, http://localhost:8087/login;JSESSIONID=6231c71c-4aed-4e34-9ef3-54622760c22c(String), org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'GET' not supported(String), null, 2019-02-13 10:27:52.806(Timestamp)
2019-02-13 10:27:52 -<==    Updates: 1
2019-02-13 10:32:52 -Starting BootdoApplication on DESKTOP-8PLG398 with PID 13184 (D:\zhenjiu\dingshi-portal\target\classes started by EDZ in D:\zhenjiu\dingshi-portal)
2019-02-13 10:32:52 -Running with Spring Boot v1.5.9.RELEASE, Spring v4.3.13.RELEASE
2019-02-13 10:32:52 -The following profiles are active: dev
2019-02-13 10:32:52 -Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@31fa1761: startup date [Wed Feb 13 10:32:52 CST 2019]; root of context hierarchy
2019-02-13 10:32:52 -HV000001: Hibernate Validator 5.3.6.Final
2019-02-13 10:32:53 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-02-13 10:32:54 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$d32ac156] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-02-13 10:32:54 -Bean 'shiroConfig' of type [com.dingshi.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$3c47a79c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-02-13 10:32:55 -Bean 'userRealm' of type [com.dingshi.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-02-13 10:32:55 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-02-13 10:32:55 -Cache with name 'com.dingshi.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-02-13 10:32:55 -Added EhCache named [com.dingshi.system.shiro.UserRealm.authorizationCache]
2019-02-13 10:32:55 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-02-13 10:32:55 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-02-13 10:32:55 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-02-13 10:32:55 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-02-13 10:32:55 -Tomcat initialized with port(s): 8087 (http)
2019-02-13 10:32:55 -Starting service [Tomcat]
2019-02-13 10:32:55 -Starting Servlet Engine: Apache Tomcat/8.5.23
2019-02-13 10:32:56 -Initializing Spring embedded WebApplicationContext
2019-02-13 10:32:56 -Root WebApplicationContext: initialization completed in 3655 ms
2019-02-13 10:32:56 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-02-13 10:32:56 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-02-13 10:32:56 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-02-13 10:32:56 -Mapping filter: 'requestContextFilter' to: [/*]
2019-02-13 10:32:56 -Mapping filter: 'springSecurityFilterChain' to: [/*]
2019-02-13 10:32:56 -Filter xssFilter was not registered (disabled)
2019-02-13 10:32:56 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-02-13 10:32:56 -Mapping filter: 'com.dingshi.system.filter.CorsFilter' to: [/*]
2019-02-13 10:32:56 -Mapping filter: 'remoteIpFilter' to: [/*]
2019-02-13 10:32:56 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-02-13 10:32:56 -Mapping servlet: 'statViewServlet' to [/druid/*]
2019-02-13 10:32:56 -Mapping servlet: 'dispatcherServlet' to [/]
2019-02-13 10:32:57 -{dataSource-1} inited
2019-02-13 10:32:57 -ApplicationContext registed-->org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@31fa1761: startup date [Wed Feb 13 10:32:52 CST 2019]; root of context hierarchy
2019-02-13 10:32:57 -Using default implementation for ThreadExecutor
2019-02-13 10:32:57 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-02-13 10:32:57 -Quartz Scheduler v.2.2.1 created.
2019-02-13 10:32:57 -RAMJobStore initialized.
2019-02-13 10:32:57 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-02-13 10:32:57 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-02-13 10:32:57 -Quartz scheduler version: 2.2.1
2019-02-13 10:32:57 -JobFactory set to: com.dingshi.common.quartz.factory.JobFactory@1282e98
2019-02-13 10:32:58 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.dingshi.common.controller.DictController.add()
2019-02-13 10:32:58 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.dingshi.common.utils.R com.dingshi.common.controller.DictController.remove(java.lang.Long)
2019-02-13 10:32:58 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.dingshi.common.utils.R com.dingshi.common.controller.DictController.remove(java.lang.Long[])
2019-02-13 10:32:58 -Mapped "{[/common/dict/update]}" onto public com.dingshi.common.utils.R com.dingshi.common.controller.DictController.update(com.dingshi.common.domain.DictDO)
2019-02-13 10:32:58 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.dingshi.common.utils.PageUtils com.dingshi.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-02-13 10:32:58 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.dingshi.common.utils.R com.dingshi.common.controller.DictController.save(com.dingshi.common.domain.DictDO)
2019-02-13 10:32:58 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.dingshi.common.domain.DictDO> com.dingshi.common.controller.DictController.listType()
2019-02-13 10:32:58 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.dingshi.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-02-13 10:32:58 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.dingshi.common.domain.DictDO> com.dingshi.common.controller.DictController.listByType(java.lang.String)
2019-02-13 10:32:58 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.dingshi.common.controller.DictController.dict()
2019-02-13 10:32:58 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.dingshi.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-02-13 10:32:58 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.dingshi.common.controller.FileController.add()
2019-02-13 10:32:58 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.dingshi.common.utils.R com.dingshi.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-02-13 10:32:58 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.dingshi.common.utils.R com.dingshi.common.controller.FileController.remove(java.lang.Long[])
2019-02-13 10:32:58 -Mapped "{[/common/sysFile/update]}" onto public com.dingshi.common.utils.R com.dingshi.common.controller.FileController.update(com.dingshi.common.domain.FileDO)
2019-02-13 10:32:58 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.dingshi.common.utils.PageUtils com.dingshi.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-02-13 10:32:58 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.dingshi.common.utils.R com.dingshi.common.controller.FileController.save(com.dingshi.common.domain.FileDO)
2019-02-13 10:32:58 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.dingshi.common.utils.R com.dingshi.common.controller.FileController.info(java.lang.Long)
2019-02-13 10:32:58 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.dingshi.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-02-13 10:32:58 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.dingshi.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-02-13 10:32:58 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.dingshi.common.utils.R com.dingshi.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-02-13 10:32:58 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.dingshi.common.utils.R com.dingshi.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-02-13 10:32:58 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.dingshi.common.controller.GeneratorController.list()
2019-02-13 10:32:58 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.dingshi.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-02-13 10:32:58 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.dingshi.common.controller.GeneratorController.generator()
2019-02-13 10:32:58 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.dingshi.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-02-13 10:32:58 -Mapped "{[/common/generator/batchCode]}" onto public void com.dingshi.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-02-13 10:32:58 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.dingshi.common.controller.JobController.add()
2019-02-13 10:32:58 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.dingshi.common.utils.R com.dingshi.common.controller.JobController.remove(java.lang.Long)
2019-02-13 10:32:58 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.dingshi.common.utils.R com.dingshi.common.controller.JobController.remove(java.lang.Long[])
2019-02-13 10:32:58 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.dingshi.common.utils.R com.dingshi.common.controller.JobController.update(com.dingshi.common.domain.TaskDO)
2019-02-13 10:32:58 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.dingshi.common.utils.PageUtils com.dingshi.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-02-13 10:32:58 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.dingshi.common.utils.R com.dingshi.common.controller.JobController.save(com.dingshi.common.domain.TaskDO)
2019-02-13 10:32:58 -Mapped "{[/common/job/info/{id}]}" onto public com.dingshi.common.utils.R com.dingshi.common.controller.JobController.info(java.lang.Long)
2019-02-13 10:32:58 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.dingshi.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-02-13 10:32:58 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.dingshi.common.utils.R com.dingshi.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-02-13 10:32:58 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.dingshi.common.controller.JobController.taskScheduleJob()
2019-02-13 10:32:58 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.dingshi.common.utils.R com.dingshi.common.controller.LogController.remove(java.lang.Long)
2019-02-13 10:32:58 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.dingshi.common.controller.LogController.log()
2019-02-13 10:32:58 -Mapped "{[/common/log/list],methods=[GET]}" onto com.dingshi.common.domain.PageDO<com.dingshi.common.domain.LogDO> com.dingshi.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-02-13 10:32:58 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.dingshi.common.utils.R com.dingshi.common.controller.LogController.batchRemove(java.lang.Long[])
2019-02-13 10:32:58 -Mapped "{[/error]}" onto public com.dingshi.common.utils.R com.dingshi.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-02-13 10:32:58 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.dingshi.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-02-13 10:32:58 -Mapped "{[/information/complaint/save],methods=[POST]}" onto public com.dingshi.common.utils.R com.dingshi.information.controller.ComplaintController.save(com.dingshi.information.domain.ComplaintDO)
2019-02-13 10:32:58 -Mapped "{[/information/complaint/getPlotPhone],methods=[POST]}" onto public com.dingshi.common.utils.R com.dingshi.information.controller.ComplaintController.getPlotPhone(java.lang.Long)
2019-02-13 10:32:58 -Mapped "{[/information/complaint],methods=[GET]}" onto java.lang.String com.dingshi.information.controller.ComplaintController.Complaint(org.springframework.ui.Model)
2019-02-13 10:32:58 -Mapped "{[/information/consult/editMsg],methods=[POST]}" onto java.util.Map<java.lang.String, java.lang.Object> com.dingshi.information.controller.ConsultController.editMsg(java.lang.Integer)
2019-02-13 10:32:58 -Mapped "{[/information/consult/msgList],methods=[GET]}" onto java.util.Map<java.lang.String, java.lang.Object> com.dingshi.information.controller.ConsultController.msgList(java.util.Map<java.lang.String, java.lang.Object>)
2019-02-13 10:32:58 -Mapped "{[/information/msg/queryMsgDetails],methods=[GET]}" onto java.lang.String com.dingshi.information.controller.MsgController.queryMsgDetails(java.lang.Long,java.lang.Long,org.springframework.ui.Model)
2019-02-13 10:32:58 -Mapped "{[/information/msg],methods=[GET]}" onto java.lang.String com.dingshi.information.controller.MsgController.Msg(org.springframework.ui.Model)
2019-02-13 10:32:58 -Mapped "{[/information/notice/{id}],methods=[GET]}" onto java.lang.String com.dingshi.information.controller.NoticeController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-02-13 10:32:58 -Mapped "{[/order/list],methods=[GET]}" onto java.util.Map<java.lang.String, java.lang.Object> com.dingshi.information.controller.OrderController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-02-13 10:32:58 -Mapped "{[/order/deatil],methods=[GET]}" onto java.util.Map<java.lang.String, java.lang.Object> com.dingshi.information.controller.OrderController.deatil(java.lang.Integer)
2019-02-13 10:32:58 -Mapped "{[/order/listById],methods=[GET]}" onto java.util.Map<java.lang.String, java.lang.Object> com.dingshi.information.controller.OrderController.msgList(java.util.Map<java.lang.String, java.lang.Object>)
2019-02-13 10:32:58 -Mapped "{[/register],methods=[POST]}" onto java.util.Map<java.lang.String, java.lang.String> com.dingshi.owneruser.controller.LoginController.register(java.lang.String,java.lang.String)
2019-02-13 10:32:58 -Mapped "{[/captcha],methods=[POST]}" onto java.util.Map<java.lang.String, java.lang.String> com.dingshi.owneruser.controller.LoginController.captcha(java.lang.String,java.lang.String)
2019-02-13 10:32:58 -Mapped "{[/logout],methods=[GET]}" onto java.util.Map<java.lang.String, java.lang.String> com.dingshi.owneruser.controller.LoginController.logout()
2019-02-13 10:32:58 -Mapped "{[/login],methods=[POST]}" onto java.util.Map<java.lang.String, java.lang.Object> com.dingshi.owneruser.controller.LoginController.login(java.lang.String,java.lang.String,java.lang.String)
2019-02-13 10:32:58 -Mapped "{[/owner/userInfo],methods=[GET]}" onto java.util.Map<java.lang.String, java.lang.Object> com.dingshi.owneruser.controller.OwnerUserController.user()
2019-02-13 10:32:58 -Mapped "{[/owner/editHeadUrl],methods=[POST]}" onto java.util.Map<java.lang.String, java.lang.Object> com.dingshi.owneruser.controller.OwnerUserController.editHeadUrl(com.dingshi.owneruser.domain.OwnerUserDO)
2019-02-13 10:32:58 -Mapped "{[/owner/editInfo],methods=[POST]}" onto java.util.Map<java.lang.String, java.lang.Object> com.dingshi.owneruser.controller.OwnerUserController.editInfo(com.dingshi.owneruser.domain.OwnerUserDO)
2019-02-13 10:32:58 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.dingshi.system.domain.UserOnline> com.dingshi.system.controller.SessionController.list()
2019-02-13 10:32:58 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.dingshi.system.controller.SessionController.sessionList()
2019-02-13 10:32:58 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.dingshi.common.utils.R com.dingshi.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-02-13 10:32:58 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.dingshi.system.controller.SessionController.online()
2019-02-13 10:32:58 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-02-13 10:32:58 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-02-13 10:32:58 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-02-13 10:32:58 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-02-13 10:32:59 -Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@31fa1761: startup date [Wed Feb 13 10:32:52 CST 2019]; root of context hierarchy
2019-02-13 10:32:59 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-02-13 10:32:59 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-02-13 10:32:59 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-02-13 10:32:59 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-02-13 10:32:59 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-02-13 10:33:00 -

Using default security password: 5e22d5e9-8880-4f7e-89fb-188ab2acdf99

2019-02-13 10:33:00 -Creating filter chain: OrRequestMatcher [requestMatchers=[Ant [pattern='/css/**'], Ant [pattern='/js/**'], Ant [pattern='/images/**'], Ant [pattern='/webjars/**'], Ant [pattern='/**/favicon.ico'], Ant [pattern='/error']]], []
2019-02-13 10:33:01 -Creating filter chain: org.springframework.boot.autoconfigure.security.SpringBootWebSecurityConfiguration$ApplicationNoWebSecurityConfigurerAdapter$1@31fe0ce5, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@178dc733, org.springframework.security.web.context.SecurityContextPersistenceFilter@5fb514c2, org.springframework.security.web.header.HeaderWriterFilter@43294e9b, org.springframework.security.web.csrf.CsrfFilter@2aa07d80, org.springframework.security.web.authentication.logout.LogoutFilter@18692e80, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@65ad2b42, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@48aa0813, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@4641f66c, org.springframework.security.web.session.SessionManagementFilter@4654e373, org.springframework.security.web.access.ExceptionTranslationFilter@71f29d91]
2019-02-13 10:33:01 -Registering beans for JMX exposure on startup
2019-02-13 10:33:01 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-02-13 10:33:01 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-02-13 10:33:01 -Starting beans in phase 2147483647
2019-02-13 10:33:01 -Context refreshed
2019-02-13 10:33:01 -Found 1 custom documentation plugin(s)
2019-02-13 10:33:01 -Scanning for api listing references
2019-02-13 10:33:02 -Generating unique operation named: removeUsingPOST_1
2019-02-13 10:33:02 -Generating unique operation named: saveUsingPOST_1
2019-02-13 10:33:02 -Generating unique operation named: addUsingGET_1
2019-02-13 10:33:02 -Generating unique operation named: editUsingGET_1
2019-02-13 10:33:02 -Generating unique operation named: listUsingGET_1
2019-02-13 10:33:02 -Generating unique operation named: removeUsingPOST_2
2019-02-13 10:33:02 -Generating unique operation named: removeUsingPOST_3
2019-02-13 10:33:02 -Generating unique operation named: saveUsingPOST_2
2019-02-13 10:33:02 -Generating unique operation named: updateUsingGET_1
2019-02-13 10:33:02 -Generating unique operation named: updateUsingHEAD_1
2019-02-13 10:33:02 -Generating unique operation named: updateUsingPOST_1
2019-02-13 10:33:02 -Generating unique operation named: updateUsingPUT_1
2019-02-13 10:33:02 -Generating unique operation named: updateUsingPATCH_1
2019-02-13 10:33:02 -Generating unique operation named: updateUsingDELETE_1
2019-02-13 10:33:02 -Generating unique operation named: updateUsingOPTIONS_1
2019-02-13 10:33:02 -Generating unique operation named: updateUsingTRACE_1
2019-02-13 10:33:02 -Generating unique operation named: editUsingGET_2
2019-02-13 10:33:02 -Generating unique operation named: listUsingGET_2
2019-02-13 10:33:02 -Generating unique operation named: updateUsingPOST_2
2019-02-13 10:33:02 -Generating unique operation named: addUsingGET_2
2019-02-13 10:33:02 -Generating unique operation named: editUsingGET_3
2019-02-13 10:33:02 -Generating unique operation named: infoUsingGET_1
2019-02-13 10:33:02 -Generating unique operation named: infoUsingHEAD_1
2019-02-13 10:33:02 -Generating unique operation named: infoUsingPOST_1
2019-02-13 10:33:02 -Generating unique operation named: infoUsingPUT_1
2019-02-13 10:33:02 -Generating unique operation named: infoUsingPATCH_1
2019-02-13 10:33:02 -Generating unique operation named: infoUsingDELETE_1
2019-02-13 10:33:02 -Generating unique operation named: infoUsingOPTIONS_1
2019-02-13 10:33:02 -Generating unique operation named: infoUsingTRACE_1
2019-02-13 10:33:02 -Generating unique operation named: listUsingGET_3
2019-02-13 10:33:02 -Generating unique operation named: removeUsingPOST_4
2019-02-13 10:33:02 -Generating unique operation named: removeUsingPOST_5
2019-02-13 10:33:02 -Generating unique operation named: saveUsingPOST_3
2019-02-13 10:33:02 -Generating unique operation named: updateUsingPOST_3
2019-02-13 10:33:02 -Generating unique operation named: listUsingGET_4
2019-02-13 10:33:02 -Generating unique operation named: removeUsingPOST_6
2019-02-13 10:33:02 -Generating unique operation named: editUsingGET_4
2019-02-13 10:33:02 -Generating unique operation named: listUsingGET_5
2019-02-13 10:33:02 -Generating unique operation named: msgListUsingGET_1
2019-02-13 10:33:02 -Generating unique operation named: listUsingGET_6
2019-02-13 10:33:02 -Starting Quartz Scheduler now
2019-02-13 10:33:02 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-02-13 10:33:02 -Initializing ProtocolHandler ["http-nio-8087"]
2019-02-13 10:33:02 -Starting ProtocolHandler ["http-nio-8087"]
2019-02-13 10:33:02 -Using a shared selector for servlet write/read
2019-02-13 10:33:02 -Tomcat started on port(s): 8087 (http)
2019-02-13 10:33:02 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-02-13 10:33:02 -==> Parameters: 
2019-02-13 10:33:02 -<==      Total: 1
2019-02-13 10:33:02 -Started BootdoApplication in 11.206 seconds (JVM running for 11.707)
2019-02-13 10:33:33 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-02-13 10:33:33 -FrameworkServlet 'dispatcherServlet': initialization started
2019-02-13 10:33:33 -FrameworkServlet 'dispatcherServlet': initialization completed in 50 ms
2019-02-13 10:33:33 -Enabling session validation scheduler...
2019-02-13 10:33:33 -[THYMELEAF] INITIALIZING TEMPLATE ENGINE
2019-02-13 10:33:33 -[THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
2019-02-13 10:33:33 -[THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
2019-02-13 10:33:33 -[THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
2019-02-13 10:33:33 -[THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
2019-02-13 10:33:33 -[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * VALIDXML
[THYMELEAF]     * VALIDXHTML
[THYMELEAF]     * HTML5
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF]     * XML
[THYMELEAF]     * XHTML
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 3]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 3]: at.pollux.thymeleaf.shiro.dialect.ShiroDialect
[THYMELEAF]     * Prefix: "shiro"
[THYMELEAF] * Dialect [3 of 3]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2019-02-13 10:33:33 -[THYMELEAF] TEMPLATE ENGINE INITIALIZED
2019-02-13 10:33:34 -No task executor bean found for async processing: no bean of type TaskExecutor and no bean named 'taskExecutor' either
2019-02-13 10:33:34 -Request method 'GET' not supported
org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'GET' not supported
	at org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.handleNoMatch(RequestMappingInfoHandlerMapping.java:207)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.lookupHandlerMethod(AbstractHandlerMethodMapping.java:374)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.getHandlerInternal(AbstractHandlerMethodMapping.java:314)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.getHandlerInternal(AbstractHandlerMethodMapping.java:61)
	at org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:352)
	at org.springframework.web.servlet.DispatcherServlet.getHandler(DispatcherServlet.java:1160)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:940)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.dingshi.system.filter.CorsFilter.doFilter(CorsFilter.java:38)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.dingshi.system.filter.CorsFilter.doFilter(CorsFilter.java:38)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:208)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:347)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:263)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-02-13 10:33:34 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-02-13 10:33:34 -==> Parameters: null, null, error(String), null, http://localhost:8087/login;JSESSIONID=0af8c243-d3e3-480d-a4ae-41850de1b35c(String), org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'GET' not supported(String), null, 2019-02-13 10:33:34.236(Timestamp)
2019-02-13 10:33:34 -<==    Updates: 1
2019-02-13 11:16:47 -Starting BootdoApplication on DESKTOP-8PLG398 with PID 12652 (D:\zhenjiu\dingshi-portal\target\classes started by EDZ in D:\zhenjiu\dingshi-portal)
2019-02-13 11:16:47 -Running with Spring Boot v1.5.9.RELEASE, Spring v4.3.13.RELEASE
2019-02-13 11:16:47 -The following profiles are active: dev
2019-02-13 11:16:48 -HV000001: Hibernate Validator 5.3.6.Final
2019-02-13 11:16:48 -Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@31fa1761: startup date [Wed Feb 13 11:16:48 CST 2019]; root of context hierarchy
2019-02-13 11:16:49 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-02-13 11:16:50 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$8dd9d30a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-02-13 11:16:50 -Bean 'shiroConfig' of type [com.dingshi.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$f6f6b950] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-02-13 11:16:50 -Bean 'userRealm' of type [com.dingshi.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-02-13 11:16:51 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-02-13 11:16:51 -Cache with name 'com.dingshi.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-02-13 11:16:51 -Added EhCache named [com.dingshi.system.shiro.UserRealm.authorizationCache]
2019-02-13 11:16:51 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-02-13 11:16:51 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-02-13 11:16:51 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-02-13 11:16:51 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-02-13 11:16:51 -Tomcat initialized with port(s): 8087 (http)
2019-02-13 11:16:51 -Starting service [Tomcat]
2019-02-13 11:16:51 -Starting Servlet Engine: Apache Tomcat/8.5.23
2019-02-13 11:16:51 -Initializing Spring embedded WebApplicationContext
2019-02-13 11:16:51 -Root WebApplicationContext: initialization completed in 3852 ms
2019-02-13 11:16:52 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-02-13 11:16:52 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-02-13 11:16:52 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-02-13 11:16:52 -Mapping filter: 'requestContextFilter' to: [/*]
2019-02-13 11:16:52 -Mapping filter: 'springSecurityFilterChain' to: [/*]
2019-02-13 11:16:52 -Filter xssFilter was not registered (disabled)
2019-02-13 11:16:52 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-02-13 11:16:52 -Mapping filter: 'com.dingshi.system.filter.CorsFilter' to: [/*]
2019-02-13 11:16:52 -Mapping filter: 'remoteIpFilter' to: [/*]
2019-02-13 11:16:52 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-02-13 11:16:52 -Mapping servlet: 'statViewServlet' to [/druid/*]
2019-02-13 11:16:52 -Mapping servlet: 'dispatcherServlet' to [/]
2019-02-13 11:16:53 -{dataSource-1} inited
2019-02-13 11:16:53 -ApplicationContext registed-->org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@31fa1761: startup date [Wed Feb 13 11:16:48 CST 2019]; root of context hierarchy
2019-02-13 11:16:53 -Using default implementation for ThreadExecutor
2019-02-13 11:16:53 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-02-13 11:16:53 -Quartz Scheduler v.2.2.1 created.
2019-02-13 11:16:53 -RAMJobStore initialized.
2019-02-13 11:16:53 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-02-13 11:16:53 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-02-13 11:16:53 -Quartz scheduler version: 2.2.1
2019-02-13 11:16:53 -JobFactory set to: com.dingshi.common.quartz.factory.JobFactory@21f9c6ea
2019-02-13 11:16:54 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.dingshi.common.controller.DictController.add()
2019-02-13 11:16:54 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.dingshi.common.utils.R com.dingshi.common.controller.DictController.remove(java.lang.Long)
2019-02-13 11:16:54 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.dingshi.common.utils.R com.dingshi.common.controller.DictController.remove(java.lang.Long[])
2019-02-13 11:16:54 -Mapped "{[/common/dict/update]}" onto public com.dingshi.common.utils.R com.dingshi.common.controller.DictController.update(com.dingshi.common.domain.DictDO)
2019-02-13 11:16:54 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.dingshi.common.utils.PageUtils com.dingshi.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-02-13 11:16:54 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.dingshi.common.utils.R com.dingshi.common.controller.DictController.save(com.dingshi.common.domain.DictDO)
2019-02-13 11:16:54 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.dingshi.common.domain.DictDO> com.dingshi.common.controller.DictController.listType()
2019-02-13 11:16:54 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.dingshi.common.controller.DictController.dict()
2019-02-13 11:16:54 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.dingshi.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-02-13 11:16:54 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.dingshi.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-02-13 11:16:54 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.dingshi.common.domain.DictDO> com.dingshi.common.controller.DictController.listByType(java.lang.String)
2019-02-13 11:16:54 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.dingshi.common.controller.FileController.add()
2019-02-13 11:16:54 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.dingshi.common.utils.R com.dingshi.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-02-13 11:16:54 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.dingshi.common.utils.R com.dingshi.common.controller.FileController.remove(java.lang.Long[])
2019-02-13 11:16:54 -Mapped "{[/common/sysFile/update]}" onto public com.dingshi.common.utils.R com.dingshi.common.controller.FileController.update(com.dingshi.common.domain.FileDO)
2019-02-13 11:16:54 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.dingshi.common.utils.PageUtils com.dingshi.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-02-13 11:16:54 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.dingshi.common.utils.R com.dingshi.common.controller.FileController.save(com.dingshi.common.domain.FileDO)
2019-02-13 11:16:54 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.dingshi.common.utils.R com.dingshi.common.controller.FileController.info(java.lang.Long)
2019-02-13 11:16:54 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.dingshi.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-02-13 11:16:54 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.dingshi.common.utils.R com.dingshi.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-02-13 11:16:54 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.dingshi.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-02-13 11:16:54 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.dingshi.common.utils.R com.dingshi.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-02-13 11:16:54 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.dingshi.common.controller.GeneratorController.list()
2019-02-13 11:16:54 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.dingshi.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-02-13 11:16:54 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.dingshi.common.controller.GeneratorController.generator()
2019-02-13 11:16:54 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.dingshi.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-02-13 11:16:54 -Mapped "{[/common/generator/batchCode]}" onto public void com.dingshi.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-02-13 11:16:54 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.dingshi.common.controller.JobController.add()
2019-02-13 11:16:54 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.dingshi.common.utils.R com.dingshi.common.controller.JobController.remove(java.lang.Long)
2019-02-13 11:16:54 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.dingshi.common.utils.R com.dingshi.common.controller.JobController.remove(java.lang.Long[])
2019-02-13 11:16:54 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.dingshi.common.utils.R com.dingshi.common.controller.JobController.update(com.dingshi.common.domain.TaskDO)
2019-02-13 11:16:54 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.dingshi.common.utils.PageUtils com.dingshi.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-02-13 11:16:54 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.dingshi.common.utils.R com.dingshi.common.controller.JobController.save(com.dingshi.common.domain.TaskDO)
2019-02-13 11:16:54 -Mapped "{[/common/job/info/{id}]}" onto public com.dingshi.common.utils.R com.dingshi.common.controller.JobController.info(java.lang.Long)
2019-02-13 11:16:54 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.dingshi.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-02-13 11:16:54 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.dingshi.common.utils.R com.dingshi.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-02-13 11:16:54 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.dingshi.common.controller.JobController.taskScheduleJob()
2019-02-13 11:16:54 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.dingshi.common.utils.R com.dingshi.common.controller.LogController.remove(java.lang.Long)
2019-02-13 11:16:54 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.dingshi.common.controller.LogController.log()
2019-02-13 11:16:54 -Mapped "{[/common/log/list],methods=[GET]}" onto com.dingshi.common.domain.PageDO<com.dingshi.common.domain.LogDO> com.dingshi.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-02-13 11:16:54 -Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'documentationPluginsBootstrapper' defined in URL [jar:file:/D:/eclipse-Mars4.5.2/m2/repository/io/springfox/springfox-spring-web/2.6.1/springfox-spring-web-2.6.1.jar!/springfox/documentation/spring/web/plugins/DocumentationPluginsBootstrapper.class]: Unsatisfied dependency expressed through constructor parameter 1; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'webMvcRequestHandlerProvider' defined in URL [jar:file:/D:/eclipse-Mars4.5.2/m2/repository/io/springfox/springfox-spring-web/2.6.1/springfox-spring-web-2.6.1.jar!/springfox/documentation/spring/web/plugins/WebMvcRequestHandlerProvider.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'requestMappingHandlerMapping' defined in class path resource [org/springframework/boot/autoconfigure/web/WebMvcAutoConfiguration$EnableWebMvcConfiguration.class]: Invocation of init method failed; nested exception is java.lang.IllegalStateException: Ambiguous mapping. Cannot map 'logController' method 
void com.dingshi.common.controller.LogController.save(com.dingshi.common.domain.LogDO)
to {[/common/log],methods=[GET]}: There is already 'logController' bean method
java.lang.String com.dingshi.common.controller.LogController.log() mapped.
2019-02-13 11:16:54 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED shutting down.
2019-02-13 11:16:54 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED paused.
2019-02-13 11:16:54 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED shutdown complete.
2019-02-13 11:16:54 -Shutting down Quartz Scheduler
2019-02-13 11:16:54 -{dataSource-1} closed
2019-02-13 11:16:54 -Stopping service [Tomcat]
2019-02-13 11:16:54 -

Error starting ApplicationContext. To display the auto-configuration report re-run your application with 'debug' enabled.
2019-02-13 11:16:54 -Application startup failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'documentationPluginsBootstrapper' defined in URL [jar:file:/D:/eclipse-Mars4.5.2/m2/repository/io/springfox/springfox-spring-web/2.6.1/springfox-spring-web-2.6.1.jar!/springfox/documentation/spring/web/plugins/DocumentationPluginsBootstrapper.class]: Unsatisfied dependency expressed through constructor parameter 1; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'webMvcRequestHandlerProvider' defined in URL [jar:file:/D:/eclipse-Mars4.5.2/m2/repository/io/springfox/springfox-spring-web/2.6.1/springfox-spring-web-2.6.1.jar!/springfox/documentation/spring/web/plugins/WebMvcRequestHandlerProvider.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'requestMappingHandlerMapping' defined in class path resource [org/springframework/boot/autoconfigure/web/WebMvcAutoConfiguration$EnableWebMvcConfiguration.class]: Invocation of init method failed; nested exception is java.lang.IllegalStateException: Ambiguous mapping. Cannot map 'logController' method 
void com.dingshi.common.controller.LogController.save(com.dingshi.common.domain.LogDO)
to {[/common/log],methods=[GET]}: There is already 'logController' bean method
java.lang.String com.dingshi.common.controller.LogController.log() mapped.
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:749)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:189)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1193)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1095)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:513)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:761)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:867)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:543)
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.refresh(EmbeddedWebApplicationContext.java:122)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:693)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:360)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:303)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1118)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1107)
	at com.dingshi.BootdoApplication.main(BootdoApplication.java:23)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'webMvcRequestHandlerProvider' defined in URL [jar:file:/D:/eclipse-Mars4.5.2/m2/repository/io/springfox/springfox-spring-web/2.6.1/springfox-spring-web-2.6.1.jar!/springfox/documentation/spring/web/plugins/WebMvcRequestHandlerProvider.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'requestMappingHandlerMapping' defined in class path resource [org/springframework/boot/autoconfigure/web/WebMvcAutoConfiguration$EnableWebMvcConfiguration.class]: Invocation of init method failed; nested exception is java.lang.IllegalStateException: Ambiguous mapping. Cannot map 'logController' method 
void com.dingshi.common.controller.LogController.save(com.dingshi.common.domain.LogDO)
to {[/common/log],methods=[GET]}: There is already 'logController' bean method
java.lang.String com.dingshi.common.controller.LogController.log() mapped.
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:749)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:189)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1193)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1095)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:513)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.addCandidateEntry(DefaultListableBeanFactory.java:1316)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1282)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveMultipleBeans(DefaultListableBeanFactory.java:1180)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1096)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1066)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:835)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:741)
	... 19 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'requestMappingHandlerMapping' defined in class path resource [org/springframework/boot/autoconfigure/web/WebMvcAutoConfiguration$EnableWebMvcConfiguration.class]: Invocation of init method failed; nested exception is java.lang.IllegalStateException: Ambiguous mapping. Cannot map 'logController' method 
void com.dingshi.common.controller.LogController.save(com.dingshi.common.domain.LogDO)
to {[/common/log],methods=[GET]}: There is already 'logController' bean method
java.lang.String com.dingshi.common.controller.LogController.log() mapped.
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1628)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.addCandidateEntry(DefaultListableBeanFactory.java:1316)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1282)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveMultipleBeans(DefaultListableBeanFactory.java:1180)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1096)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1066)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:835)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:741)
	... 36 common frames omitted
Caused by: java.lang.IllegalStateException: Ambiguous mapping. Cannot map 'logController' method 
void com.dingshi.common.controller.LogController.save(com.dingshi.common.domain.LogDO)
to {[/common/log],methods=[GET]}: There is already 'logController' bean method
java.lang.String com.dingshi.common.controller.LogController.log() mapped.
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.assertUniqueMethodMapping(AbstractHandlerMethodMapping.java:576)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:540)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.registerHandlerMethod(AbstractHandlerMethodMapping.java:264)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.detectHandlerMethods(AbstractHandlerMethodMapping.java:250)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.initHandlerMethods(AbstractHandlerMethodMapping.java:214)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.afterPropertiesSet(AbstractHandlerMethodMapping.java:184)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.afterPropertiesSet(RequestMappingHandlerMapping.java:127)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1687)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1624)
	... 50 common frames omitted
2019-02-13 11:18:21 -Starting BootdoApplication on DESKTOP-8PLG398 with PID 8724 (D:\zhenjiu\dingshi-portal\target\classes started by EDZ in D:\zhenjiu\dingshi-portal)
2019-02-13 11:18:21 -Running with Spring Boot v1.5.9.RELEASE, Spring v4.3.13.RELEASE
2019-02-13 11:18:21 -The following profiles are active: dev
2019-02-13 11:18:21 -Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@31fa1761: startup date [Wed Feb 13 11:18:21 CST 2019]; root of context hierarchy
2019-02-13 11:18:21 -HV000001: Hibernate Validator 5.3.6.Final
2019-02-13 11:18:23 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-02-13 11:18:23 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$8dd9d30a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-02-13 11:18:23 -Bean 'shiroConfig' of type [com.dingshi.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$f6f6b950] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-02-13 11:18:24 -Bean 'userRealm' of type [com.dingshi.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-02-13 11:18:24 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-02-13 11:18:24 -Cache with name 'com.dingshi.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-02-13 11:18:24 -Added EhCache named [com.dingshi.system.shiro.UserRealm.authorizationCache]
2019-02-13 11:18:24 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-02-13 11:18:24 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-02-13 11:18:24 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-02-13 11:18:24 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-02-13 11:18:25 -Tomcat initialized with port(s): 8087 (http)
2019-02-13 11:18:25 -Starting service [Tomcat]
2019-02-13 11:18:25 -Starting Servlet Engine: Apache Tomcat/8.5.23
2019-02-13 11:18:25 -Initializing Spring embedded WebApplicationContext
2019-02-13 11:18:25 -Root WebApplicationContext: initialization completed in 3635 ms
2019-02-13 11:18:25 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-02-13 11:18:25 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-02-13 11:18:25 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-02-13 11:18:25 -Mapping filter: 'requestContextFilter' to: [/*]
2019-02-13 11:18:25 -Mapping filter: 'springSecurityFilterChain' to: [/*]
2019-02-13 11:18:25 -Filter xssFilter was not registered (disabled)
2019-02-13 11:18:25 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-02-13 11:18:25 -Mapping filter: 'com.dingshi.system.filter.CorsFilter' to: [/*]
2019-02-13 11:18:25 -Mapping filter: 'remoteIpFilter' to: [/*]
2019-02-13 11:18:25 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-02-13 11:18:25 -Mapping servlet: 'statViewServlet' to [/druid/*]
2019-02-13 11:18:25 -Mapping servlet: 'dispatcherServlet' to [/]
2019-02-13 11:18:26 -{dataSource-1} inited
2019-02-13 11:18:27 -ApplicationContext registed-->org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@31fa1761: startup date [Wed Feb 13 11:18:21 CST 2019]; root of context hierarchy
2019-02-13 11:18:27 -Using default implementation for ThreadExecutor
2019-02-13 11:18:27 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-02-13 11:18:27 -Quartz Scheduler v.2.2.1 created.
2019-02-13 11:18:27 -RAMJobStore initialized.
2019-02-13 11:18:27 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-02-13 11:18:27 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-02-13 11:18:27 -Quartz scheduler version: 2.2.1
2019-02-13 11:18:27 -JobFactory set to: com.dingshi.common.quartz.factory.JobFactory@418f0534
2019-02-13 11:18:28 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.dingshi.common.controller.DictController.add()
2019-02-13 11:18:28 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.dingshi.common.utils.R com.dingshi.common.controller.DictController.remove(java.lang.Long)
2019-02-13 11:18:28 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.dingshi.common.utils.R com.dingshi.common.controller.DictController.remove(java.lang.Long[])
2019-02-13 11:18:28 -Mapped "{[/common/dict/update]}" onto public com.dingshi.common.utils.R com.dingshi.common.controller.DictController.update(com.dingshi.common.domain.DictDO)
2019-02-13 11:18:28 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.dingshi.common.utils.PageUtils com.dingshi.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-02-13 11:18:28 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.dingshi.common.utils.R com.dingshi.common.controller.DictController.save(com.dingshi.common.domain.DictDO)
2019-02-13 11:18:28 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.dingshi.common.domain.DictDO> com.dingshi.common.controller.DictController.listType()
2019-02-13 11:18:28 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.dingshi.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-02-13 11:18:28 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.dingshi.common.domain.DictDO> com.dingshi.common.controller.DictController.listByType(java.lang.String)
2019-02-13 11:18:28 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.dingshi.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-02-13 11:18:28 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.dingshi.common.controller.DictController.dict()
2019-02-13 11:18:28 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.dingshi.common.controller.FileController.add()
2019-02-13 11:18:28 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.dingshi.common.utils.R com.dingshi.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-02-13 11:18:28 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.dingshi.common.utils.R com.dingshi.common.controller.FileController.remove(java.lang.Long[])
2019-02-13 11:18:28 -Mapped "{[/common/sysFile/update]}" onto public com.dingshi.common.utils.R com.dingshi.common.controller.FileController.update(com.dingshi.common.domain.FileDO)
2019-02-13 11:18:28 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.dingshi.common.utils.PageUtils com.dingshi.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-02-13 11:18:28 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.dingshi.common.utils.R com.dingshi.common.controller.FileController.save(com.dingshi.common.domain.FileDO)
2019-02-13 11:18:28 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.dingshi.common.utils.R com.dingshi.common.controller.FileController.info(java.lang.Long)
2019-02-13 11:18:28 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.dingshi.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-02-13 11:18:28 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.dingshi.common.utils.R com.dingshi.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-02-13 11:18:28 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.dingshi.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-02-13 11:18:28 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.dingshi.common.utils.R com.dingshi.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-02-13 11:18:28 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.dingshi.common.controller.GeneratorController.list()
2019-02-13 11:18:28 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.dingshi.common.controller.GeneratorController.generator()
2019-02-13 11:18:28 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.dingshi.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-02-13 11:18:28 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.dingshi.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-02-13 11:18:28 -Mapped "{[/common/generator/batchCode]}" onto public void com.dingshi.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-02-13 11:18:28 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.dingshi.common.controller.JobController.add()
2019-02-13 11:18:28 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.dingshi.common.utils.R com.dingshi.common.controller.JobController.remove(java.lang.Long)
2019-02-13 11:18:28 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.dingshi.common.utils.R com.dingshi.common.controller.JobController.remove(java.lang.Long[])
2019-02-13 11:18:28 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.dingshi.common.utils.R com.dingshi.common.controller.JobController.update(com.dingshi.common.domain.TaskDO)
2019-02-13 11:18:28 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.dingshi.common.utils.PageUtils com.dingshi.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-02-13 11:18:28 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.dingshi.common.utils.R com.dingshi.common.controller.JobController.save(com.dingshi.common.domain.TaskDO)
2019-02-13 11:18:28 -Mapped "{[/common/job/info/{id}]}" onto public com.dingshi.common.utils.R com.dingshi.common.controller.JobController.info(java.lang.Long)
2019-02-13 11:18:28 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.dingshi.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-02-13 11:18:28 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.dingshi.common.controller.JobController.taskScheduleJob()
2019-02-13 11:18:28 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.dingshi.common.utils.R com.dingshi.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-02-13 11:18:28 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.dingshi.common.utils.R com.dingshi.common.controller.LogController.remove(java.lang.Long)
2019-02-13 11:18:28 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.dingshi.common.controller.LogController.log()
2019-02-13 11:18:28 -Mapped "{[/common/log/list],methods=[GET]}" onto com.dingshi.common.domain.PageDO<com.dingshi.common.domain.LogDO> com.dingshi.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-02-13 11:18:28 -Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'documentationPluginsBootstrapper' defined in URL [jar:file:/D:/eclipse-Mars4.5.2/m2/repository/io/springfox/springfox-spring-web/2.6.1/springfox-spring-web-2.6.1.jar!/springfox/documentation/spring/web/plugins/DocumentationPluginsBootstrapper.class]: Unsatisfied dependency expressed through constructor parameter 1; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'webMvcRequestHandlerProvider' defined in URL [jar:file:/D:/eclipse-Mars4.5.2/m2/repository/io/springfox/springfox-spring-web/2.6.1/springfox-spring-web-2.6.1.jar!/springfox/documentation/spring/web/plugins/WebMvcRequestHandlerProvider.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'requestMappingHandlerMapping' defined in class path resource [org/springframework/boot/autoconfigure/web/WebMvcAutoConfiguration$EnableWebMvcConfiguration.class]: Invocation of init method failed; nested exception is java.lang.IllegalStateException: Ambiguous mapping. Cannot map 'logController' method 
void com.dingshi.common.controller.LogController.save(com.dingshi.common.domain.LogDO)
to {[/common/log],methods=[GET]}: There is already 'logController' bean method
java.lang.String com.dingshi.common.controller.LogController.log() mapped.
2019-02-13 11:18:28 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED shutting down.
2019-02-13 11:18:28 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED paused.
2019-02-13 11:18:28 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED shutdown complete.
2019-02-13 11:18:28 -Shutting down Quartz Scheduler
2019-02-13 11:18:28 -{dataSource-1} closed
2019-02-13 11:18:28 -Stopping service [Tomcat]
2019-02-13 11:18:28 -

Error starting ApplicationContext. To display the auto-configuration report re-run your application with 'debug' enabled.
2019-02-13 11:18:28 -Application startup failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'documentationPluginsBootstrapper' defined in URL [jar:file:/D:/eclipse-Mars4.5.2/m2/repository/io/springfox/springfox-spring-web/2.6.1/springfox-spring-web-2.6.1.jar!/springfox/documentation/spring/web/plugins/DocumentationPluginsBootstrapper.class]: Unsatisfied dependency expressed through constructor parameter 1; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'webMvcRequestHandlerProvider' defined in URL [jar:file:/D:/eclipse-Mars4.5.2/m2/repository/io/springfox/springfox-spring-web/2.6.1/springfox-spring-web-2.6.1.jar!/springfox/documentation/spring/web/plugins/WebMvcRequestHandlerProvider.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'requestMappingHandlerMapping' defined in class path resource [org/springframework/boot/autoconfigure/web/WebMvcAutoConfiguration$EnableWebMvcConfiguration.class]: Invocation of init method failed; nested exception is java.lang.IllegalStateException: Ambiguous mapping. Cannot map 'logController' method 
void com.dingshi.common.controller.LogController.save(com.dingshi.common.domain.LogDO)
to {[/common/log],methods=[GET]}: There is already 'logController' bean method
java.lang.String com.dingshi.common.controller.LogController.log() mapped.
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:749)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:189)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1193)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1095)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:513)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:761)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:867)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:543)
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.refresh(EmbeddedWebApplicationContext.java:122)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:693)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:360)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:303)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1118)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1107)
	at com.dingshi.BootdoApplication.main(BootdoApplication.java:23)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'webMvcRequestHandlerProvider' defined in URL [jar:file:/D:/eclipse-Mars4.5.2/m2/repository/io/springfox/springfox-spring-web/2.6.1/springfox-spring-web-2.6.1.jar!/springfox/documentation/spring/web/plugins/WebMvcRequestHandlerProvider.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'requestMappingHandlerMapping' defined in class path resource [org/springframework/boot/autoconfigure/web/WebMvcAutoConfiguration$EnableWebMvcConfiguration.class]: Invocation of init method failed; nested exception is java.lang.IllegalStateException: Ambiguous mapping. Cannot map 'logController' method 
void com.dingshi.common.controller.LogController.save(com.dingshi.common.domain.LogDO)
to {[/common/log],methods=[GET]}: There is already 'logController' bean method
java.lang.String com.dingshi.common.controller.LogController.log() mapped.
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:749)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:189)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1193)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1095)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:513)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.addCandidateEntry(DefaultListableBeanFactory.java:1316)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1282)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveMultipleBeans(DefaultListableBeanFactory.java:1180)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1096)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1066)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:835)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:741)
	... 19 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'requestMappingHandlerMapping' defined in class path resource [org/springframework/boot/autoconfigure/web/WebMvcAutoConfiguration$EnableWebMvcConfiguration.class]: Invocation of init method failed; nested exception is java.lang.IllegalStateException: Ambiguous mapping. Cannot map 'logController' method 
void com.dingshi.common.controller.LogController.save(com.dingshi.common.domain.LogDO)
to {[/common/log],methods=[GET]}: There is already 'logController' bean method
java.lang.String com.dingshi.common.controller.LogController.log() mapped.
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1628)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.addCandidateEntry(DefaultListableBeanFactory.java:1316)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1282)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveMultipleBeans(DefaultListableBeanFactory.java:1180)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1096)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1066)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:835)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:741)
	... 36 common frames omitted
Caused by: java.lang.IllegalStateException: Ambiguous mapping. Cannot map 'logController' method 
void com.dingshi.common.controller.LogController.save(com.dingshi.common.domain.LogDO)
to {[/common/log],methods=[GET]}: There is already 'logController' bean method
java.lang.String com.dingshi.common.controller.LogController.log() mapped.
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.assertUniqueMethodMapping(AbstractHandlerMethodMapping.java:576)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:540)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.registerHandlerMethod(AbstractHandlerMethodMapping.java:264)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.detectHandlerMethods(AbstractHandlerMethodMapping.java:250)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.initHandlerMethods(AbstractHandlerMethodMapping.java:214)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.afterPropertiesSet(AbstractHandlerMethodMapping.java:184)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.afterPropertiesSet(RequestMappingHandlerMapping.java:127)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1687)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1624)
	... 50 common frames omitted
2019-02-13 11:19:54 -Starting BootdoApplication on DESKTOP-8PLG398 with PID 8940 (D:\zhenjiu\dingshi-portal\target\classes started by EDZ in D:\zhenjiu\dingshi-portal)
2019-02-13 11:19:54 -Running with Spring Boot v1.5.9.RELEASE, Spring v4.3.13.RELEASE
2019-02-13 11:19:54 -The following profiles are active: dev
2019-02-13 11:19:54 -Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@31fa1761: startup date [Wed Feb 13 11:19:54 CST 2019]; root of context hierarchy
2019-02-13 11:19:54 -HV000001: Hibernate Validator 5.3.6.Final
2019-02-13 11:19:55 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-02-13 11:19:56 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$8dd9d30a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-02-13 11:19:56 -Bean 'shiroConfig' of type [com.dingshi.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$f6f6b950] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-02-13 11:19:57 -Bean 'userRealm' of type [com.dingshi.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-02-13 11:19:57 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-02-13 11:19:57 -Cache with name 'com.dingshi.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-02-13 11:19:57 -Added EhCache named [com.dingshi.system.shiro.UserRealm.authorizationCache]
2019-02-13 11:19:57 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-02-13 11:19:57 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-02-13 11:19:57 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-02-13 11:19:57 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-02-13 11:19:58 -Tomcat initialized with port(s): 8087 (http)
2019-02-13 11:19:58 -Starting service [Tomcat]
2019-02-13 11:19:58 -Starting Servlet Engine: Apache Tomcat/8.5.23
2019-02-13 11:19:58 -Initializing Spring embedded WebApplicationContext
2019-02-13 11:19:58 -Root WebApplicationContext: initialization completed in 4092 ms
2019-02-13 11:19:59 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-02-13 11:19:59 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-02-13 11:19:59 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-02-13 11:19:59 -Mapping filter: 'requestContextFilter' to: [/*]
2019-02-13 11:19:59 -Mapping filter: 'springSecurityFilterChain' to: [/*]
2019-02-13 11:19:59 -Filter xssFilter was not registered (disabled)
2019-02-13 11:19:59 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-02-13 11:19:59 -Mapping filter: 'com.dingshi.system.filter.CorsFilter' to: [/*]
2019-02-13 11:19:59 -Mapping filter: 'remoteIpFilter' to: [/*]
2019-02-13 11:19:59 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-02-13 11:19:59 -Mapping servlet: 'statViewServlet' to [/druid/*]
2019-02-13 11:19:59 -Mapping servlet: 'dispatcherServlet' to [/]
2019-02-13 11:19:59 -{dataSource-1} inited
2019-02-13 11:20:00 -ApplicationContext registed-->org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@31fa1761: startup date [Wed Feb 13 11:19:54 CST 2019]; root of context hierarchy
2019-02-13 11:20:00 -Using default implementation for ThreadExecutor
2019-02-13 11:20:00 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-02-13 11:20:00 -Quartz Scheduler v.2.2.1 created.
2019-02-13 11:20:00 -RAMJobStore initialized.
2019-02-13 11:20:00 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-02-13 11:20:00 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-02-13 11:20:00 -Quartz scheduler version: 2.2.1
2019-02-13 11:20:00 -JobFactory set to: com.dingshi.common.quartz.factory.JobFactory@21f9c6ea
2019-02-13 11:20:01 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.dingshi.common.controller.DictController.add()
2019-02-13 11:20:01 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.dingshi.common.utils.R com.dingshi.common.controller.DictController.remove(java.lang.Long)
2019-02-13 11:20:01 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.dingshi.common.utils.R com.dingshi.common.controller.DictController.remove(java.lang.Long[])
2019-02-13 11:20:01 -Mapped "{[/common/dict/update]}" onto public com.dingshi.common.utils.R com.dingshi.common.controller.DictController.update(com.dingshi.common.domain.DictDO)
2019-02-13 11:20:01 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.dingshi.common.utils.PageUtils com.dingshi.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-02-13 11:20:01 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.dingshi.common.utils.R com.dingshi.common.controller.DictController.save(com.dingshi.common.domain.DictDO)
2019-02-13 11:20:01 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.dingshi.common.domain.DictDO> com.dingshi.common.controller.DictController.listType()
2019-02-13 11:20:01 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.dingshi.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-02-13 11:20:01 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.dingshi.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-02-13 11:20:01 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.dingshi.common.domain.DictDO> com.dingshi.common.controller.DictController.listByType(java.lang.String)
2019-02-13 11:20:01 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.dingshi.common.controller.DictController.dict()
2019-02-13 11:20:01 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.dingshi.common.controller.FileController.add()
2019-02-13 11:20:01 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.dingshi.common.utils.R com.dingshi.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-02-13 11:20:01 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.dingshi.common.utils.R com.dingshi.common.controller.FileController.remove(java.lang.Long[])
2019-02-13 11:20:01 -Mapped "{[/common/sysFile/update]}" onto public com.dingshi.common.utils.R com.dingshi.common.controller.FileController.update(com.dingshi.common.domain.FileDO)
2019-02-13 11:20:01 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.dingshi.common.utils.PageUtils com.dingshi.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-02-13 11:20:01 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.dingshi.common.utils.R com.dingshi.common.controller.FileController.save(com.dingshi.common.domain.FileDO)
2019-02-13 11:20:01 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.dingshi.common.utils.R com.dingshi.common.controller.FileController.info(java.lang.Long)
2019-02-13 11:20:01 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.dingshi.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-02-13 11:20:01 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.dingshi.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-02-13 11:20:01 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.dingshi.common.utils.R com.dingshi.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-02-13 11:20:01 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.dingshi.common.utils.R com.dingshi.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-02-13 11:20:01 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.dingshi.common.controller.GeneratorController.list()
2019-02-13 11:20:01 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.dingshi.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-02-13 11:20:01 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.dingshi.common.controller.GeneratorController.generator()
2019-02-13 11:20:01 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.dingshi.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-02-13 11:20:01 -Mapped "{[/common/generator/batchCode]}" onto public void com.dingshi.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-02-13 11:20:01 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.dingshi.common.controller.JobController.add()
2019-02-13 11:20:01 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.dingshi.common.utils.R com.dingshi.common.controller.JobController.remove(java.lang.Long)
2019-02-13 11:20:01 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.dingshi.common.utils.R com.dingshi.common.controller.JobController.remove(java.lang.Long[])
2019-02-13 11:20:01 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.dingshi.common.utils.R com.dingshi.common.controller.JobController.update(com.dingshi.common.domain.TaskDO)
2019-02-13 11:20:01 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.dingshi.common.utils.PageUtils com.dingshi.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-02-13 11:20:01 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.dingshi.common.utils.R com.dingshi.common.controller.JobController.save(com.dingshi.common.domain.TaskDO)
2019-02-13 11:20:01 -Mapped "{[/common/job/info/{id}]}" onto public com.dingshi.common.utils.R com.dingshi.common.controller.JobController.info(java.lang.Long)
2019-02-13 11:20:01 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.dingshi.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-02-13 11:20:01 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.dingshi.common.controller.JobController.taskScheduleJob()
2019-02-13 11:20:01 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.dingshi.common.utils.R com.dingshi.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-02-13 11:20:01 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.dingshi.common.utils.R com.dingshi.common.controller.LogController.remove(java.lang.Long)
2019-02-13 11:20:01 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.dingshi.common.controller.LogController.log()
2019-02-13 11:20:01 -Mapped "{[/common/log/list],methods=[GET]}" onto com.dingshi.common.domain.PageDO<com.dingshi.common.domain.LogDO> com.dingshi.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-02-13 11:20:01 -Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'documentationPluginsBootstrapper' defined in URL [jar:file:/D:/eclipse-Mars4.5.2/m2/repository/io/springfox/springfox-spring-web/2.6.1/springfox-spring-web-2.6.1.jar!/springfox/documentation/spring/web/plugins/DocumentationPluginsBootstrapper.class]: Unsatisfied dependency expressed through constructor parameter 1; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'webMvcRequestHandlerProvider' defined in URL [jar:file:/D:/eclipse-Mars4.5.2/m2/repository/io/springfox/springfox-spring-web/2.6.1/springfox-spring-web-2.6.1.jar!/springfox/documentation/spring/web/plugins/WebMvcRequestHandlerProvider.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'requestMappingHandlerMapping' defined in class path resource [org/springframework/boot/autoconfigure/web/WebMvcAutoConfiguration$EnableWebMvcConfiguration.class]: Invocation of init method failed; nested exception is java.lang.IllegalStateException: Ambiguous mapping. Cannot map 'logController' method 
java.lang.String com.dingshi.common.controller.LogController.save(com.dingshi.common.domain.LogDO)
to {[/common/log],methods=[GET]}: There is already 'logController' bean method
java.lang.String com.dingshi.common.controller.LogController.log() mapped.
2019-02-13 11:20:01 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED shutting down.
2019-02-13 11:20:01 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED paused.
2019-02-13 11:20:01 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED shutdown complete.
2019-02-13 11:20:01 -Shutting down Quartz Scheduler
2019-02-13 11:20:01 -{dataSource-1} closed
2019-02-13 11:20:01 -Stopping service [Tomcat]
2019-02-13 11:20:01 -

Error starting ApplicationContext. To display the auto-configuration report re-run your application with 'debug' enabled.
2019-02-13 11:20:01 -Application startup failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'documentationPluginsBootstrapper' defined in URL [jar:file:/D:/eclipse-Mars4.5.2/m2/repository/io/springfox/springfox-spring-web/2.6.1/springfox-spring-web-2.6.1.jar!/springfox/documentation/spring/web/plugins/DocumentationPluginsBootstrapper.class]: Unsatisfied dependency expressed through constructor parameter 1; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'webMvcRequestHandlerProvider' defined in URL [jar:file:/D:/eclipse-Mars4.5.2/m2/repository/io/springfox/springfox-spring-web/2.6.1/springfox-spring-web-2.6.1.jar!/springfox/documentation/spring/web/plugins/WebMvcRequestHandlerProvider.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'requestMappingHandlerMapping' defined in class path resource [org/springframework/boot/autoconfigure/web/WebMvcAutoConfiguration$EnableWebMvcConfiguration.class]: Invocation of init method failed; nested exception is java.lang.IllegalStateException: Ambiguous mapping. Cannot map 'logController' method 
java.lang.String com.dingshi.common.controller.LogController.save(com.dingshi.common.domain.LogDO)
to {[/common/log],methods=[GET]}: There is already 'logController' bean method
java.lang.String com.dingshi.common.controller.LogController.log() mapped.
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:749)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:189)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1193)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1095)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:513)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:761)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:867)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:543)
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.refresh(EmbeddedWebApplicationContext.java:122)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:693)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:360)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:303)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1118)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1107)
	at com.dingshi.BootdoApplication.main(BootdoApplication.java:23)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'webMvcRequestHandlerProvider' defined in URL [jar:file:/D:/eclipse-Mars4.5.2/m2/repository/io/springfox/springfox-spring-web/2.6.1/springfox-spring-web-2.6.1.jar!/springfox/documentation/spring/web/plugins/WebMvcRequestHandlerProvider.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'requestMappingHandlerMapping' defined in class path resource [org/springframework/boot/autoconfigure/web/WebMvcAutoConfiguration$EnableWebMvcConfiguration.class]: Invocation of init method failed; nested exception is java.lang.IllegalStateException: Ambiguous mapping. Cannot map 'logController' method 
java.lang.String com.dingshi.common.controller.LogController.save(com.dingshi.common.domain.LogDO)
to {[/common/log],methods=[GET]}: There is already 'logController' bean method
java.lang.String com.dingshi.common.controller.LogController.log() mapped.
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:749)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:189)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1193)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1095)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:513)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.addCandidateEntry(DefaultListableBeanFactory.java:1316)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1282)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveMultipleBeans(DefaultListableBeanFactory.java:1180)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1096)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1066)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:835)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:741)
	... 19 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'requestMappingHandlerMapping' defined in class path resource [org/springframework/boot/autoconfigure/web/WebMvcAutoConfiguration$EnableWebMvcConfiguration.class]: Invocation of init method failed; nested exception is java.lang.IllegalStateException: Ambiguous mapping. Cannot map 'logController' method 
java.lang.String com.dingshi.common.controller.LogController.save(com.dingshi.common.domain.LogDO)
to {[/common/log],methods=[GET]}: There is already 'logController' bean method
java.lang.String com.dingshi.common.controller.LogController.log() mapped.
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1628)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.addCandidateEntry(DefaultListableBeanFactory.java:1316)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1282)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveMultipleBeans(DefaultListableBeanFactory.java:1180)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1096)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1066)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:835)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:741)
	... 36 common frames omitted
Caused by: java.lang.IllegalStateException: Ambiguous mapping. Cannot map 'logController' method 
java.lang.String com.dingshi.common.controller.LogController.save(com.dingshi.common.domain.LogDO)
to {[/common/log],methods=[GET]}: There is already 'logController' bean method
java.lang.String com.dingshi.common.controller.LogController.log() mapped.
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.assertUniqueMethodMapping(AbstractHandlerMethodMapping.java:576)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:540)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.registerHandlerMethod(AbstractHandlerMethodMapping.java:264)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.detectHandlerMethods(AbstractHandlerMethodMapping.java:250)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.initHandlerMethods(AbstractHandlerMethodMapping.java:214)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.afterPropertiesSet(AbstractHandlerMethodMapping.java:184)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.afterPropertiesSet(RequestMappingHandlerMapping.java:127)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1687)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1624)
	... 50 common frames omitted
2019-02-13 11:23:48 -Starting BootdoApplication on DESKTOP-8PLG398 with PID 12912 (D:\zhenjiu\dingshi-portal\target\classes started by EDZ in D:\zhenjiu\dingshi-portal)
2019-02-13 11:23:48 -Running with Spring Boot v1.5.9.RELEASE, Spring v4.3.13.RELEASE
2019-02-13 11:23:48 -The following profiles are active: dev
2019-02-13 11:23:48 -Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@31fa1761: startup date [Wed Feb 13 11:23:48 CST 2019]; root of context hierarchy
2019-02-13 11:23:48 -HV000001: Hibernate Validator 5.3.6.Final
2019-02-13 11:23:49 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-02-13 11:23:50 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$d7ab8b2f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-02-13 11:23:50 -Bean 'shiroConfig' of type [com.dingshi.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$40c87175] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-02-13 11:23:50 -Bean 'userRealm' of type [com.dingshi.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-02-13 11:23:51 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-02-13 11:23:51 -Cache with name 'com.dingshi.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-02-13 11:23:51 -Added EhCache named [com.dingshi.system.shiro.UserRealm.authorizationCache]
2019-02-13 11:23:51 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-02-13 11:23:51 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-02-13 11:23:51 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-02-13 11:23:51 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-02-13 11:23:51 -Tomcat initialized with port(s): 8087 (http)
2019-02-13 11:23:51 -Starting service [Tomcat]
2019-02-13 11:23:51 -Starting Servlet Engine: Apache Tomcat/8.5.23
2019-02-13 11:23:51 -Initializing Spring embedded WebApplicationContext
2019-02-13 11:23:51 -Root WebApplicationContext: initialization completed in 3522 ms
2019-02-13 11:23:52 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-02-13 11:23:52 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-02-13 11:23:52 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-02-13 11:23:52 -Mapping filter: 'requestContextFilter' to: [/*]
2019-02-13 11:23:52 -Mapping filter: 'springSecurityFilterChain' to: [/*]
2019-02-13 11:23:52 -Filter xssFilter was not registered (disabled)
2019-02-13 11:23:52 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-02-13 11:23:52 -Mapping filter: 'com.dingshi.system.filter.CorsFilter' to: [/*]
2019-02-13 11:23:52 -Mapping filter: 'remoteIpFilter' to: [/*]
2019-02-13 11:23:52 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-02-13 11:23:52 -Mapping servlet: 'statViewServlet' to [/druid/*]
2019-02-13 11:23:52 -Mapping servlet: 'dispatcherServlet' to [/]
2019-02-13 11:23:52 -{dataSource-1} inited
2019-02-13 11:23:53 -ApplicationContext registed-->org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@31fa1761: startup date [Wed Feb 13 11:23:48 CST 2019]; root of context hierarchy
2019-02-13 11:23:53 -Using default implementation for ThreadExecutor
2019-02-13 11:23:53 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-02-13 11:23:53 -Quartz Scheduler v.2.2.1 created.
2019-02-13 11:23:53 -RAMJobStore initialized.
2019-02-13 11:23:53 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-02-13 11:23:53 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-02-13 11:23:53 -Quartz scheduler version: 2.2.1
2019-02-13 11:23:53 -JobFactory set to: com.dingshi.common.quartz.factory.JobFactory@5ed0b4e3
2019-02-13 11:23:54 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.dingshi.common.controller.DictController.add()
2019-02-13 11:23:54 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.dingshi.common.utils.R com.dingshi.common.controller.DictController.remove(java.lang.Long)
2019-02-13 11:23:54 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.dingshi.common.utils.R com.dingshi.common.controller.DictController.remove(java.lang.Long[])
2019-02-13 11:23:54 -Mapped "{[/common/dict/update]}" onto public com.dingshi.common.utils.R com.dingshi.common.controller.DictController.update(com.dingshi.common.domain.DictDO)
2019-02-13 11:23:54 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.dingshi.common.utils.PageUtils com.dingshi.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-02-13 11:23:54 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.dingshi.common.utils.R com.dingshi.common.controller.DictController.save(com.dingshi.common.domain.DictDO)
2019-02-13 11:23:54 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.dingshi.common.domain.DictDO> com.dingshi.common.controller.DictController.listType()
2019-02-13 11:23:54 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.dingshi.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-02-13 11:23:54 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.dingshi.common.domain.DictDO> com.dingshi.common.controller.DictController.listByType(java.lang.String)
2019-02-13 11:23:54 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.dingshi.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-02-13 11:23:54 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.dingshi.common.controller.DictController.dict()
2019-02-13 11:23:54 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.dingshi.common.controller.FileController.add()
2019-02-13 11:23:54 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.dingshi.common.utils.R com.dingshi.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-02-13 11:23:54 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.dingshi.common.utils.R com.dingshi.common.controller.FileController.remove(java.lang.Long[])
2019-02-13 11:23:54 -Mapped "{[/common/sysFile/update]}" onto public com.dingshi.common.utils.R com.dingshi.common.controller.FileController.update(com.dingshi.common.domain.FileDO)
2019-02-13 11:23:54 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.dingshi.common.utils.PageUtils com.dingshi.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-02-13 11:23:54 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.dingshi.common.utils.R com.dingshi.common.controller.FileController.save(com.dingshi.common.domain.FileDO)
2019-02-13 11:23:54 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.dingshi.common.utils.R com.dingshi.common.controller.FileController.info(java.lang.Long)
2019-02-13 11:23:54 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.dingshi.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-02-13 11:23:54 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.dingshi.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-02-13 11:23:54 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.dingshi.common.utils.R com.dingshi.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-02-13 11:23:54 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.dingshi.common.utils.R com.dingshi.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-02-13 11:23:54 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.dingshi.common.controller.GeneratorController.list()
2019-02-13 11:23:54 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.dingshi.common.controller.GeneratorController.generator()
2019-02-13 11:23:54 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.dingshi.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-02-13 11:23:54 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.dingshi.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-02-13 11:23:54 -Mapped "{[/common/generator/batchCode]}" onto public void com.dingshi.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-02-13 11:23:54 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.dingshi.common.controller.JobController.add()
2019-02-13 11:23:54 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.dingshi.common.utils.R com.dingshi.common.controller.JobController.remove(java.lang.Long)
2019-02-13 11:23:54 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.dingshi.common.utils.R com.dingshi.common.controller.JobController.remove(java.lang.Long[])
2019-02-13 11:23:54 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.dingshi.common.utils.R com.dingshi.common.controller.JobController.update(com.dingshi.common.domain.TaskDO)
2019-02-13 11:23:54 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.dingshi.common.utils.PageUtils com.dingshi.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-02-13 11:23:54 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.dingshi.common.utils.R com.dingshi.common.controller.JobController.save(com.dingshi.common.domain.TaskDO)
2019-02-13 11:23:54 -Mapped "{[/common/job/info/{id}]}" onto public com.dingshi.common.utils.R com.dingshi.common.controller.JobController.info(java.lang.Long)
2019-02-13 11:23:54 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.dingshi.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-02-13 11:23:54 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.dingshi.common.utils.R com.dingshi.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-02-13 11:23:54 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.dingshi.common.controller.JobController.taskScheduleJob()
2019-02-13 11:23:54 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.dingshi.common.utils.R com.dingshi.common.controller.LogController.remove(java.lang.Long)
2019-02-13 11:23:54 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.dingshi.common.controller.LogController.log()
2019-02-13 11:23:54 -Mapped "{[/common/log/list],methods=[GET]}" onto com.dingshi.common.domain.PageDO<com.dingshi.common.domain.LogDO> com.dingshi.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-02-13 11:23:54 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.dingshi.common.utils.R com.dingshi.common.controller.LogController.batchRemove(java.lang.Long[])
2019-02-13 11:23:54 -Mapped "{[/error]}" onto public com.dingshi.common.utils.R com.dingshi.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-02-13 11:23:54 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.dingshi.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-02-13 11:23:54 -Mapped "{[/information/complaint/save],methods=[POST]}" onto public com.dingshi.common.utils.R com.dingshi.information.controller.ComplaintController.save(com.dingshi.information.domain.ComplaintDO)
2019-02-13 11:23:54 -Mapped "{[/information/complaint],methods=[GET]}" onto java.lang.String com.dingshi.information.controller.ComplaintController.Complaint(org.springframework.ui.Model)
2019-02-13 11:23:54 -Mapped "{[/information/complaint/getPlotPhone],methods=[POST]}" onto public com.dingshi.common.utils.R com.dingshi.information.controller.ComplaintController.getPlotPhone(java.lang.Long)
2019-02-13 11:23:54 -Mapped "{[/information/consult/msgList],methods=[GET]}" onto java.util.Map<java.lang.String, java.lang.Object> com.dingshi.information.controller.ConsultController.msgList(java.util.Map<java.lang.String, java.lang.Object>)
2019-02-13 11:23:54 -Mapped "{[/information/consult/editMsg],methods=[POST]}" onto java.util.Map<java.lang.String, java.lang.Object> com.dingshi.information.controller.ConsultController.editMsg(java.lang.Integer)
2019-02-13 11:23:54 -Mapped "{[/information/msg],methods=[GET]}" onto java.lang.String com.dingshi.information.controller.MsgController.Msg(org.springframework.ui.Model)
2019-02-13 11:23:54 -Mapped "{[/information/msg/queryMsgDetails],methods=[GET]}" onto java.lang.String com.dingshi.information.controller.MsgController.queryMsgDetails(java.lang.Long,java.lang.Long,org.springframework.ui.Model)
2019-02-13 11:23:54 -Mapped "{[/information/notice/{id}],methods=[GET]}" onto java.lang.String com.dingshi.information.controller.NoticeController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-02-13 11:23:54 -Mapped "{[/order/list],methods=[GET]}" onto java.util.Map<java.lang.String, java.lang.Object> com.dingshi.information.controller.OrderController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-02-13 11:23:54 -Mapped "{[/order/deatil],methods=[GET]}" onto java.util.Map<java.lang.String, java.lang.Object> com.dingshi.information.controller.OrderController.deatil(java.lang.Integer)
2019-02-13 11:23:54 -Mapped "{[/order/listById],methods=[GET]}" onto java.util.Map<java.lang.String, java.lang.Object> com.dingshi.information.controller.OrderController.msgList(java.util.Map<java.lang.String, java.lang.Object>)
2019-02-13 11:23:54 -Mapped "{[/register],methods=[POST]}" onto java.util.Map<java.lang.String, java.lang.String> com.dingshi.owneruser.controller.LoginController.register(java.lang.String,java.lang.String)
2019-02-13 11:23:54 -Mapped "{[/logout],methods=[GET]}" onto java.util.Map<java.lang.String, java.lang.String> com.dingshi.owneruser.controller.LoginController.logout()
2019-02-13 11:23:54 -Mapped "{[/captcha],methods=[POST]}" onto java.util.Map<java.lang.String, java.lang.String> com.dingshi.owneruser.controller.LoginController.captcha(java.lang.String,java.lang.String)
2019-02-13 11:23:54 -Mapped "{[/login],methods=[POST]}" onto java.util.Map<java.lang.String, java.lang.Object> com.dingshi.owneruser.controller.LoginController.login(java.lang.String,java.lang.String,java.lang.String)
2019-02-13 11:23:54 -Mapped "{[/owner/userInfo],methods=[GET]}" onto java.util.Map<java.lang.String, java.lang.Object> com.dingshi.owneruser.controller.OwnerUserController.user()
2019-02-13 11:23:54 -Mapped "{[/owner/editInfo],methods=[POST]}" onto java.util.Map<java.lang.String, java.lang.Object> com.dingshi.owneruser.controller.OwnerUserController.editInfo(com.dingshi.owneruser.domain.OwnerUserDO)
2019-02-13 11:23:54 -Mapped "{[/owner/editHeadUrl],methods=[POST]}" onto java.util.Map<java.lang.String, java.lang.Object> com.dingshi.owneruser.controller.OwnerUserController.editHeadUrl(com.dingshi.owneruser.domain.OwnerUserDO)
2019-02-13 11:23:54 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.dingshi.system.domain.UserOnline> com.dingshi.system.controller.SessionController.list()
2019-02-13 11:23:54 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.dingshi.system.controller.SessionController.online()
2019-02-13 11:23:54 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.dingshi.common.utils.R com.dingshi.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-02-13 11:23:54 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.dingshi.system.controller.SessionController.sessionList()
2019-02-13 11:23:54 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-02-13 11:23:54 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-02-13 11:23:54 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-02-13 11:23:54 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-02-13 11:23:55 -Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@31fa1761: startup date [Wed Feb 13 11:23:48 CST 2019]; root of context hierarchy
2019-02-13 11:23:55 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-02-13 11:23:55 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-02-13 11:23:55 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-02-13 11:23:55 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-02-13 11:23:55 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-02-13 11:23:56 -

Using default security password: 4f886c78-7b5a-4ab1-a972-8d1584af4c74

2019-02-13 11:23:56 -Creating filter chain: OrRequestMatcher [requestMatchers=[Ant [pattern='/css/**'], Ant [pattern='/js/**'], Ant [pattern='/images/**'], Ant [pattern='/webjars/**'], Ant [pattern='/**/favicon.ico'], Ant [pattern='/error']]], []
2019-02-13 11:23:56 -Creating filter chain: org.springframework.boot.autoconfigure.security.SpringBootWebSecurityConfiguration$ApplicationNoWebSecurityConfigurerAdapter$1@163df259, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@405603b6, org.springframework.security.web.context.SecurityContextPersistenceFilter@5be69f7e, org.springframework.security.web.header.HeaderWriterFilter@78fb72cb, org.springframework.security.web.csrf.CsrfFilter@43294e9b, org.springframework.security.web.authentication.logout.LogoutFilter@5c740c5a, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@2a531637, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@3400d6fa, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@3c3cd13a, org.springframework.security.web.session.SessionManagementFilter@3df04fa1, org.springframework.security.web.access.ExceptionTranslationFilter@4e51eda7]
2019-02-13 11:23:56 -Registering beans for JMX exposure on startup
2019-02-13 11:23:56 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-02-13 11:23:56 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-02-13 11:23:56 -Starting beans in phase 2147483647
2019-02-13 11:23:56 -Context refreshed
2019-02-13 11:23:56 -Found 1 custom documentation plugin(s)
2019-02-13 11:23:56 -Scanning for api listing references
2019-02-13 11:23:57 -Generating unique operation named: removeUsingPOST_1
2019-02-13 11:23:57 -Generating unique operation named: saveUsingPOST_1
2019-02-13 11:23:57 -Generating unique operation named: addUsingGET_1
2019-02-13 11:23:57 -Generating unique operation named: editUsingGET_1
2019-02-13 11:23:57 -Generating unique operation named: listUsingGET_1
2019-02-13 11:23:57 -Generating unique operation named: removeUsingPOST_2
2019-02-13 11:23:57 -Generating unique operation named: removeUsingPOST_3
2019-02-13 11:23:57 -Generating unique operation named: saveUsingPOST_2
2019-02-13 11:23:57 -Generating unique operation named: updateUsingGET_1
2019-02-13 11:23:57 -Generating unique operation named: updateUsingHEAD_1
2019-02-13 11:23:57 -Generating unique operation named: updateUsingPOST_1
2019-02-13 11:23:57 -Generating unique operation named: updateUsingPUT_1
2019-02-13 11:23:57 -Generating unique operation named: updateUsingPATCH_1
2019-02-13 11:23:57 -Generating unique operation named: updateUsingDELETE_1
2019-02-13 11:23:57 -Generating unique operation named: updateUsingOPTIONS_1
2019-02-13 11:23:57 -Generating unique operation named: updateUsingTRACE_1
2019-02-13 11:23:57 -Generating unique operation named: editUsingGET_2
2019-02-13 11:23:57 -Generating unique operation named: listUsingGET_2
2019-02-13 11:23:57 -Generating unique operation named: updateUsingPOST_2
2019-02-13 11:23:57 -Generating unique operation named: addUsingGET_2
2019-02-13 11:23:57 -Generating unique operation named: editUsingGET_3
2019-02-13 11:23:57 -Generating unique operation named: infoUsingGET_1
2019-02-13 11:23:57 -Generating unique operation named: infoUsingHEAD_1
2019-02-13 11:23:57 -Generating unique operation named: infoUsingPOST_1
2019-02-13 11:23:57 -Generating unique operation named: infoUsingPUT_1
2019-02-13 11:23:57 -Generating unique operation named: infoUsingPATCH_1
2019-02-13 11:23:57 -Generating unique operation named: infoUsingDELETE_1
2019-02-13 11:23:57 -Generating unique operation named: infoUsingOPTIONS_1
2019-02-13 11:23:57 -Generating unique operation named: infoUsingTRACE_1
2019-02-13 11:23:57 -Generating unique operation named: listUsingGET_3
2019-02-13 11:23:57 -Generating unique operation named: removeUsingPOST_4
2019-02-13 11:23:57 -Generating unique operation named: removeUsingPOST_5
2019-02-13 11:23:57 -Generating unique operation named: saveUsingPOST_3
2019-02-13 11:23:57 -Generating unique operation named: updateUsingPOST_3
2019-02-13 11:23:57 -Generating unique operation named: listUsingGET_4
2019-02-13 11:23:57 -Generating unique operation named: removeUsingPOST_6
2019-02-13 11:23:58 -Generating unique operation named: editUsingGET_4
2019-02-13 11:23:58 -Generating unique operation named: listUsingGET_5
2019-02-13 11:23:58 -Generating unique operation named: msgListUsingGET_1
2019-02-13 11:23:58 -Generating unique operation named: listUsingGET_6
2019-02-13 11:23:58 -Starting Quartz Scheduler now
2019-02-13 11:23:58 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-02-13 11:23:58 -Initializing ProtocolHandler ["http-nio-8087"]
2019-02-13 11:23:58 -Starting ProtocolHandler ["http-nio-8087"]
2019-02-13 11:23:58 -Using a shared selector for servlet write/read
2019-02-13 11:23:58 -Tomcat started on port(s): 8087 (http)
2019-02-13 11:23:58 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-02-13 11:23:58 -==> Parameters: 
2019-02-13 11:23:58 -<==      Total: 1
2019-02-13 11:23:58 -Started BootdoApplication in 10.809 seconds (JVM running for 11.324)
2019-02-13 11:24:06 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-02-13 11:24:06 -FrameworkServlet 'dispatcherServlet': initialization started
2019-02-13 11:24:06 -FrameworkServlet 'dispatcherServlet': initialization completed in 51 ms
2019-02-13 11:24:06 -Enabling session validation scheduler...
2019-02-13 11:24:07 -[THYMELEAF] INITIALIZING TEMPLATE ENGINE
2019-02-13 11:24:07 -[THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
2019-02-13 11:24:07 -[THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
2019-02-13 11:24:07 -[THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
2019-02-13 11:24:07 -[THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
2019-02-13 11:24:07 -[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * VALIDXHTML
[THYMELEAF]     * XHTML
[THYMELEAF]     * HTML5
[THYMELEAF]     * XML
[THYMELEAF]     * VALIDXML
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 3]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 3]: at.pollux.thymeleaf.shiro.dialect.ShiroDialect
[THYMELEAF]     * Prefix: "shiro"
[THYMELEAF] * Dialect [3 of 3]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2019-02-13 11:24:07 -[THYMELEAF] TEMPLATE ENGINE INITIALIZED
2019-02-13 11:24:07 -No task executor bean found for async processing: no bean of type TaskExecutor and no bean named 'taskExecutor' either
2019-02-13 11:24:07 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-02-13 11:24:07 -Request method 'GET' not supported
org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'GET' not supported
	at org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.handleNoMatch(RequestMappingInfoHandlerMapping.java:207)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.lookupHandlerMethod(AbstractHandlerMethodMapping.java:374)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.getHandlerInternal(AbstractHandlerMethodMapping.java:314)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.getHandlerInternal(AbstractHandlerMethodMapping.java:61)
	at org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:352)
	at org.springframework.web.servlet.DispatcherServlet.getHandler(DispatcherServlet.java:1160)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:940)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.dingshi.system.filter.CorsFilter.doFilter(CorsFilter.java:38)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.dingshi.system.filter.CorsFilter.doFilter(CorsFilter.java:38)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:208)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:347)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:263)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-02-13 11:24:07 -==> Parameters: null, null, error(String), null, http://localhost:8087/login;JSESSIONID=ee019eaf-abbf-4de4-94dc-01b0e9941913(String), org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'GET' not supported(String), null, 2019-02-13 11:24:07.265(Timestamp)
2019-02-13 11:24:07 -<==    Updates: 1
2019-02-13 13:39:07 -Starting BootdoApplication on DESKTOP-8PLG398 with PID 2220 (D:\zhenjiu\dingshi-portal\target\classes started by EDZ in D:\zhenjiu\dingshi-portal)
2019-02-13 13:39:07 -Running with Spring Boot v1.5.9.RELEASE, Spring v4.3.13.RELEASE
2019-02-13 13:39:07 -The following profiles are active: dev
2019-02-13 13:39:07 -Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@31fa1761: startup date [Wed Feb 13 13:39:07 CST 2019]; root of context hierarchy
2019-02-13 13:39:07 -HV000001: Hibernate Validator 5.3.6.Final
2019-02-13 13:39:08 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-02-13 13:39:09 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$de8f0f6c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-02-13 13:39:09 -Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'shiroFilterFactoryBean' defined in class path resource [com/dingshi/system/config/ShiroConfig.class]: BeanPostProcessor before instantiation of bean failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'shiroConfig' defined in file [D:\zhenjiu\dingshi-portal\target\classes\com\dingshi\system\config\ShiroConfig.class]: BeanPostProcessor before instantiation of bean failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration': Initialization of bean failed; nested exception is java.lang.IllegalArgumentException: error Type referred to is not an annotation type: com$yinwang$common$annotation$Log
2019-02-13 13:39:09 -

Error starting ApplicationContext. To display the auto-configuration report re-run your application with 'debug' enabled.
2019-02-13 13:39:09 -Application startup failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'shiroFilterFactoryBean' defined in class path resource [com/dingshi/system/config/ShiroConfig.class]: BeanPostProcessor before instantiation of bean failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'shiroConfig' defined in file [D:\zhenjiu\dingshi-portal\target\classes\com\dingshi\system\config\ShiroConfig.class]: BeanPostProcessor before instantiation of bean failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration': Initialization of bean failed; nested exception is java.lang.IllegalArgumentException: error Type referred to is not an annotation type: com$yinwang$common$annotation$Log
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:479)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.support.PostProcessorRegistrationDelegate.registerBeanPostProcessors(PostProcessorRegistrationDelegate.java:237)
	at org.springframework.context.support.AbstractApplicationContext.registerBeanPostProcessors(AbstractApplicationContext.java:703)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:528)
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.refresh(EmbeddedWebApplicationContext.java:122)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:693)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:360)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:303)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1118)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1107)
	at com.dingshi.BootdoApplication.main(BootdoApplication.java:23)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'shiroConfig' defined in file [D:\zhenjiu\dingshi-portal\target\classes\com\dingshi\system\config\ShiroConfig.class]: BeanPostProcessor before instantiation of bean failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration': Initialization of bean failed; nested exception is java.lang.IllegalArgumentException: error Type referred to is not an annotation type: com$yinwang$common$annotation$Log
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:479)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1173)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1067)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:513)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.aop.framework.autoproxy.BeanFactoryAdvisorRetrievalHelper.findAdvisorBeans(BeanFactoryAdvisorRetrievalHelper.java:92)
	at org.springframework.aop.framework.autoproxy.AbstractAdvisorAutoProxyCreator.findCandidateAdvisors(AbstractAdvisorAutoProxyCreator.java:102)
	at org.springframework.aop.aspectj.annotation.AnnotationAwareAspectJAutoProxyCreator.findCandidateAdvisors(AnnotationAwareAspectJAutoProxyCreator.java:88)
	at org.springframework.aop.aspectj.autoproxy.AspectJAwareAdvisorAutoProxyCreator.shouldSkip(AspectJAwareAdvisorAutoProxyCreator.java:103)
	at org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.postProcessBeforeInstantiation(AbstractAutoProxyCreator.java:248)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInstantiation(AbstractAutowireCapableBeanFactory.java:1037)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.resolveBeforeInstantiation(AbstractAutowireCapableBeanFactory.java:1011)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:473)
	... 14 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration': Initialization of bean failed; nested exception is java.lang.IllegalArgumentException: error Type referred to is not an annotation type: com$yinwang$common$annotation$Log
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:564)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1173)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1067)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:513)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.aop.framework.autoproxy.BeanFactoryAdvisorRetrievalHelper.findAdvisorBeans(BeanFactoryAdvisorRetrievalHelper.java:92)
	at org.springframework.aop.framework.autoproxy.AbstractAdvisorAutoProxyCreator.findCandidateAdvisors(AbstractAdvisorAutoProxyCreator.java:102)
	at org.springframework.aop.aspectj.annotation.AnnotationAwareAspectJAutoProxyCreator.findCandidateAdvisors(AnnotationAwareAspectJAutoProxyCreator.java:88)
	at org.springframework.aop.aspectj.autoproxy.AspectJAwareAdvisorAutoProxyCreator.shouldSkip(AspectJAwareAdvisorAutoProxyCreator.java:103)
	at org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.postProcessBeforeInstantiation(AbstractAutoProxyCreator.java:248)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInstantiation(AbstractAutowireCapableBeanFactory.java:1037)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.resolveBeforeInstantiation(AbstractAutowireCapableBeanFactory.java:1011)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:473)
	... 35 common frames omitted
Caused by: java.lang.IllegalArgumentException: error Type referred to is not an annotation type: com$yinwang$common$annotation$Log
	at org.aspectj.weaver.tools.PointcutParser.parsePointcutExpression(PointcutParser.java:319)
	at org.springframework.aop.aspectj.AspectJExpressionPointcut.buildPointcutExpression(AspectJExpressionPointcut.java:217)
	at org.springframework.aop.aspectj.AspectJExpressionPointcut.checkReadyToMatch(AspectJExpressionPointcut.java:190)
	at org.springframework.aop.aspectj.AspectJExpressionPointcut.getClassFilter(AspectJExpressionPointcut.java:169)
	at org.springframework.aop.support.AopUtils.canApply(AopUtils.java:220)
	at org.springframework.aop.support.AopUtils.canApply(AopUtils.java:279)
	at org.springframework.aop.support.AopUtils.findAdvisorsThatCanApply(AopUtils.java:311)
	at org.springframework.aop.framework.autoproxy.AbstractAdvisorAutoProxyCreator.findAdvisorsThatCanApply(AbstractAdvisorAutoProxyCreator.java:119)
	at org.springframework.aop.framework.autoproxy.AbstractAdvisorAutoProxyCreator.findEligibleAdvisors(AbstractAdvisorAutoProxyCreator.java:89)
	at org.springframework.aop.framework.autoproxy.AbstractAdvisorAutoProxyCreator.getAdvicesAndAdvisorsForBean(AbstractAdvisorAutoProxyCreator.java:70)
	at org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.wrapIfNecessary(AbstractAutoProxyCreator.java:346)
	at org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.postProcessAfterInitialization(AbstractAutoProxyCreator.java:298)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsAfterInitialization(AbstractAutowireCapableBeanFactory.java:423)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1633)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555)
	... 57 common frames omitted
2019-02-13 13:50:11 -Starting BootdoApplication on DESKTOP-8PLG398 with PID 13988 (D:\zhenjiu\dingshi-portal\target\classes started by EDZ in D:\zhenjiu\dingshi-portal)
2019-02-13 13:50:11 -Running with Spring Boot v1.5.9.RELEASE, Spring v4.3.13.RELEASE
2019-02-13 13:50:11 -The following profiles are active: dev
2019-02-13 13:50:11 -Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@31fa1761: startup date [Wed Feb 13 13:50:11 CST 2019]; root of context hierarchy
2019-02-13 13:50:11 -HV000001: Hibernate Validator 5.3.6.Final
2019-02-13 13:50:12 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-02-13 13:50:13 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$3dbe0e8c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-02-13 13:50:13 -Bean 'shiroConfig' of type [com.dingshi.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$a6daf4d2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-02-13 13:50:14 -Bean 'userRealm' of type [com.dingshi.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-02-13 13:50:14 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-02-13 13:50:14 -Cache with name 'com.dingshi.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-02-13 13:50:14 -Added EhCache named [com.dingshi.system.shiro.UserRealm.authorizationCache]
2019-02-13 13:50:14 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-02-13 13:50:14 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-02-13 13:50:14 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-02-13 13:50:14 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-02-13 13:50:14 -Tomcat initialized with port(s): 8087 (http)
2019-02-13 13:50:14 -Starting service [Tomcat]
2019-02-13 13:50:14 -Starting Servlet Engine: Apache Tomcat/8.5.23
2019-02-13 13:50:15 -Initializing Spring embedded WebApplicationContext
2019-02-13 13:50:15 -Root WebApplicationContext: initialization completed in 3519 ms
2019-02-13 13:50:15 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-02-13 13:50:15 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-02-13 13:50:15 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-02-13 13:50:15 -Mapping filter: 'requestContextFilter' to: [/*]
2019-02-13 13:50:15 -Mapping filter: 'springSecurityFilterChain' to: [/*]
2019-02-13 13:50:15 -Filter xssFilter was not registered (disabled)
2019-02-13 13:50:15 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-02-13 13:50:15 -Mapping filter: 'com.dingshi.system.filter.CorsFilter' to: [/*]
2019-02-13 13:50:15 -Mapping filter: 'remoteIpFilter' to: [/*]
2019-02-13 13:50:15 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-02-13 13:50:15 -Mapping servlet: 'statViewServlet' to [/druid/*]
2019-02-13 13:50:15 -Mapping servlet: 'dispatcherServlet' to [/]
2019-02-13 13:50:16 -{dataSource-1} inited
2019-02-13 13:50:16 -ApplicationContext registed-->org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@31fa1761: startup date [Wed Feb 13 13:50:11 CST 2019]; root of context hierarchy
2019-02-13 13:50:16 -Using default implementation for ThreadExecutor
2019-02-13 13:50:16 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-02-13 13:50:16 -Quartz Scheduler v.2.2.1 created.
2019-02-13 13:50:16 -RAMJobStore initialized.
2019-02-13 13:50:16 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-02-13 13:50:16 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-02-13 13:50:16 -Quartz scheduler version: 2.2.1
2019-02-13 13:50:16 -JobFactory set to: com.dingshi.common.quartz.factory.JobFactory@230232b0
2019-02-13 13:50:17 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.dingshi.common.controller.DictController.add()
2019-02-13 13:50:17 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.dingshi.common.utils.R com.dingshi.common.controller.DictController.remove(java.lang.Long)
2019-02-13 13:50:17 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.dingshi.common.utils.R com.dingshi.common.controller.DictController.remove(java.lang.Long[])
2019-02-13 13:50:17 -Mapped "{[/common/dict/update]}" onto public com.dingshi.common.utils.R com.dingshi.common.controller.DictController.update(com.dingshi.common.domain.DictDO)
2019-02-13 13:50:17 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.dingshi.common.utils.PageUtils com.dingshi.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-02-13 13:50:17 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.dingshi.common.utils.R com.dingshi.common.controller.DictController.save(com.dingshi.common.domain.DictDO)
2019-02-13 13:50:17 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.dingshi.common.domain.DictDO> com.dingshi.common.controller.DictController.listType()
2019-02-13 13:50:17 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.dingshi.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-02-13 13:50:17 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.dingshi.common.domain.DictDO> com.dingshi.common.controller.DictController.listByType(java.lang.String)
2019-02-13 13:50:17 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.dingshi.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-02-13 13:50:17 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.dingshi.common.controller.DictController.dict()
2019-02-13 13:50:17 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.dingshi.common.controller.FileController.add()
2019-02-13 13:50:17 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.dingshi.common.utils.R com.dingshi.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-02-13 13:50:17 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.dingshi.common.utils.R com.dingshi.common.controller.FileController.remove(java.lang.Long[])
2019-02-13 13:50:17 -Mapped "{[/common/sysFile/update]}" onto public com.dingshi.common.utils.R com.dingshi.common.controller.FileController.update(com.dingshi.common.domain.FileDO)
2019-02-13 13:50:17 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.dingshi.common.utils.PageUtils com.dingshi.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-02-13 13:50:17 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.dingshi.common.utils.R com.dingshi.common.controller.FileController.save(com.dingshi.common.domain.FileDO)
2019-02-13 13:50:17 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.dingshi.common.utils.R com.dingshi.common.controller.FileController.info(java.lang.Long)
2019-02-13 13:50:17 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.dingshi.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-02-13 13:50:17 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.dingshi.common.utils.R com.dingshi.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-02-13 13:50:17 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.dingshi.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-02-13 13:50:17 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.dingshi.common.utils.R com.dingshi.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-02-13 13:50:17 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.dingshi.common.controller.GeneratorController.list()
2019-02-13 13:50:17 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.dingshi.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-02-13 13:50:17 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.dingshi.common.controller.GeneratorController.generator()
2019-02-13 13:50:17 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.dingshi.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-02-13 13:50:17 -Mapped "{[/common/generator/batchCode]}" onto public void com.dingshi.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-02-13 13:50:17 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.dingshi.common.controller.JobController.add()
2019-02-13 13:50:17 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.dingshi.common.utils.R com.dingshi.common.controller.JobController.remove(java.lang.Long)
2019-02-13 13:50:17 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.dingshi.common.utils.R com.dingshi.common.controller.JobController.remove(java.lang.Long[])
2019-02-13 13:50:17 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.dingshi.common.utils.R com.dingshi.common.controller.JobController.update(com.dingshi.common.domain.TaskDO)
2019-02-13 13:50:17 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.dingshi.common.utils.PageUtils com.dingshi.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-02-13 13:50:17 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.dingshi.common.utils.R com.dingshi.common.controller.JobController.save(com.dingshi.common.domain.TaskDO)
2019-02-13 13:50:17 -Mapped "{[/common/job/info/{id}]}" onto public com.dingshi.common.utils.R com.dingshi.common.controller.JobController.info(java.lang.Long)
2019-02-13 13:50:17 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.dingshi.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-02-13 13:50:17 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.dingshi.common.utils.R com.dingshi.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-02-13 13:50:17 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.dingshi.common.controller.JobController.taskScheduleJob()
2019-02-13 13:50:17 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.dingshi.common.utils.R com.dingshi.common.controller.LogController.remove(java.lang.Long)
2019-02-13 13:50:17 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.dingshi.common.controller.LogController.log()
2019-02-13 13:50:17 -Mapped "{[/common/log/list],methods=[GET]}" onto com.dingshi.common.domain.PageDO<com.dingshi.common.domain.LogDO> com.dingshi.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-02-13 13:50:17 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.dingshi.common.utils.R com.dingshi.common.controller.LogController.batchRemove(java.lang.Long[])
2019-02-13 13:50:17 -Mapped "{[/error]}" onto public com.dingshi.common.utils.R com.dingshi.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-02-13 13:50:17 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.dingshi.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-02-13 13:50:17 -Mapped "{[/information/complaint/save],methods=[POST]}" onto public com.dingshi.common.utils.R com.dingshi.information.controller.ComplaintController.save(com.dingshi.information.domain.ComplaintDO)
2019-02-13 13:50:17 -Mapped "{[/information/complaint],methods=[GET]}" onto java.lang.String com.dingshi.information.controller.ComplaintController.Complaint(org.springframework.ui.Model)
2019-02-13 13:50:17 -Mapped "{[/information/complaint/getPlotPhone],methods=[POST]}" onto public com.dingshi.common.utils.R com.dingshi.information.controller.ComplaintController.getPlotPhone(java.lang.Long)
2019-02-13 13:50:17 -Mapped "{[/information/consult/editMsg],methods=[POST]}" onto java.util.Map<java.lang.String, java.lang.Object> com.dingshi.information.controller.ConsultController.editMsg(java.lang.Integer)
2019-02-13 13:50:17 -Mapped "{[/information/consult/msgList],methods=[GET]}" onto java.util.Map<java.lang.String, java.lang.Object> com.dingshi.information.controller.ConsultController.msgList(java.util.Map<java.lang.String, java.lang.Object>)
2019-02-13 13:50:17 -Mapped "{[/information/msg/queryMsgDetails],methods=[GET]}" onto java.lang.String com.dingshi.information.controller.MsgController.queryMsgDetails(java.lang.Long,java.lang.Long,org.springframework.ui.Model)
2019-02-13 13:50:17 -Mapped "{[/information/msg],methods=[GET]}" onto java.lang.String com.dingshi.information.controller.MsgController.Msg(org.springframework.ui.Model)
2019-02-13 13:50:17 -Mapped "{[/information/notice/{id}],methods=[GET]}" onto java.lang.String com.dingshi.information.controller.NoticeController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-02-13 13:50:17 -Mapped "{[/order/list],methods=[GET]}" onto java.util.Map<java.lang.String, java.lang.Object> com.dingshi.information.controller.OrderController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-02-13 13:50:17 -Mapped "{[/order/listById],methods=[GET]}" onto java.util.Map<java.lang.String, java.lang.Object> com.dingshi.information.controller.OrderController.msgList(java.util.Map<java.lang.String, java.lang.Object>)
2019-02-13 13:50:17 -Mapped "{[/order/deatil],methods=[GET]}" onto java.util.Map<java.lang.String, java.lang.Object> com.dingshi.information.controller.OrderController.deatil(java.lang.Integer)
2019-02-13 13:50:17 -Mapped "{[/register],methods=[POST]}" onto java.util.Map<java.lang.String, java.lang.String> com.dingshi.owneruser.controller.LoginController.register(java.lang.String,java.lang.String)
2019-02-13 13:50:17 -Mapped "{[/login],methods=[POST]}" onto java.util.Map<java.lang.String, java.lang.Object> com.dingshi.owneruser.controller.LoginController.login(java.lang.String,java.lang.String,java.lang.String)
2019-02-13 13:50:17 -Mapped "{[/logout],methods=[GET]}" onto java.util.Map<java.lang.String, java.lang.String> com.dingshi.owneruser.controller.LoginController.logout()
2019-02-13 13:50:17 -Mapped "{[/captcha],methods=[POST]}" onto java.util.Map<java.lang.String, java.lang.String> com.dingshi.owneruser.controller.LoginController.captcha(java.lang.String,java.lang.String)
2019-02-13 13:50:17 -Mapped "{[/owner/userInfo],methods=[GET]}" onto java.util.Map<java.lang.String, java.lang.Object> com.dingshi.owneruser.controller.OwnerUserController.user()
2019-02-13 13:50:17 -Mapped "{[/owner/editInfo],methods=[POST]}" onto java.util.Map<java.lang.String, java.lang.Object> com.dingshi.owneruser.controller.OwnerUserController.editInfo(com.dingshi.owneruser.domain.OwnerUserDO)
2019-02-13 13:50:17 -Mapped "{[/owner/editHeadUrl],methods=[POST]}" onto java.util.Map<java.lang.String, java.lang.Object> com.dingshi.owneruser.controller.OwnerUserController.editHeadUrl(com.dingshi.owneruser.domain.OwnerUserDO)
2019-02-13 13:50:17 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.dingshi.system.domain.UserOnline> com.dingshi.system.controller.SessionController.list()
2019-02-13 13:50:17 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.dingshi.system.controller.SessionController.sessionList()
2019-02-13 13:50:17 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.dingshi.common.utils.R com.dingshi.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-02-13 13:50:17 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.dingshi.system.controller.SessionController.online()
2019-02-13 13:50:17 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-02-13 13:50:17 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-02-13 13:50:17 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-02-13 13:50:17 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-02-13 13:50:18 -Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@31fa1761: startup date [Wed Feb 13 13:50:11 CST 2019]; root of context hierarchy
2019-02-13 13:50:18 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-02-13 13:50:18 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-02-13 13:50:18 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-02-13 13:50:18 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-02-13 13:50:18 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-02-13 13:50:19 -

Using default security password: 15991458-7a98-48e1-a35e-e68370f8b000

2019-02-13 13:50:19 -Creating filter chain: OrRequestMatcher [requestMatchers=[Ant [pattern='/css/**'], Ant [pattern='/js/**'], Ant [pattern='/images/**'], Ant [pattern='/webjars/**'], Ant [pattern='/**/favicon.ico'], Ant [pattern='/error']]], []
2019-02-13 13:50:19 -Creating filter chain: org.springframework.boot.autoconfigure.security.SpringBootWebSecurityConfiguration$ApplicationNoWebSecurityConfigurerAdapter$1@252d8df6, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@36638b59, org.springframework.security.web.context.SecurityContextPersistenceFilter@5cb8580, org.springframework.security.web.header.HeaderWriterFilter@1e7cfd49, org.springframework.security.web.csrf.CsrfFilter@2419fe6f, org.springframework.security.web.authentication.logout.LogoutFilter@87220f1, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@56b751b1, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@4de158ca, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@2f8f40cc, org.springframework.security.web.session.SessionManagementFilter@30133a11, org.springframework.security.web.access.ExceptionTranslationFilter@539ee811]
2019-02-13 13:50:19 -Registering beans for JMX exposure on startup
2019-02-13 13:50:19 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-02-13 13:50:19 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-02-13 13:50:19 -Starting beans in phase 2147483647
2019-02-13 13:50:19 -Context refreshed
2019-02-13 13:50:19 -Found 1 custom documentation plugin(s)
2019-02-13 13:50:19 -Scanning for api listing references
2019-02-13 13:50:20 -Generating unique operation named: removeUsingPOST_1
2019-02-13 13:50:20 -Generating unique operation named: saveUsingPOST_1
2019-02-13 13:50:20 -Generating unique operation named: addUsingGET_1
2019-02-13 13:50:20 -Generating unique operation named: editUsingGET_1
2019-02-13 13:50:20 -Generating unique operation named: listUsingGET_1
2019-02-13 13:50:20 -Generating unique operation named: removeUsingPOST_2
2019-02-13 13:50:20 -Generating unique operation named: removeUsingPOST_3
2019-02-13 13:50:20 -Generating unique operation named: saveUsingPOST_2
2019-02-13 13:50:20 -Generating unique operation named: updateUsingGET_1
2019-02-13 13:50:20 -Generating unique operation named: updateUsingHEAD_1
2019-02-13 13:50:20 -Generating unique operation named: updateUsingPOST_1
2019-02-13 13:50:20 -Generating unique operation named: updateUsingPUT_1
2019-02-13 13:50:20 -Generating unique operation named: updateUsingPATCH_1
2019-02-13 13:50:20 -Generating unique operation named: updateUsingDELETE_1
2019-02-13 13:50:20 -Generating unique operation named: updateUsingOPTIONS_1
2019-02-13 13:50:20 -Generating unique operation named: updateUsingTRACE_1
2019-02-13 13:50:20 -Generating unique operation named: editUsingGET_2
2019-02-13 13:50:20 -Generating unique operation named: listUsingGET_2
2019-02-13 13:50:20 -Generating unique operation named: updateUsingPOST_2
2019-02-13 13:50:20 -Generating unique operation named: addUsingGET_2
2019-02-13 13:50:20 -Generating unique operation named: editUsingGET_3
2019-02-13 13:50:20 -Generating unique operation named: infoUsingGET_1
2019-02-13 13:50:20 -Generating unique operation named: infoUsingHEAD_1
2019-02-13 13:50:20 -Generating unique operation named: infoUsingPOST_1
2019-02-13 13:50:20 -Generating unique operation named: infoUsingPUT_1
2019-02-13 13:50:20 -Generating unique operation named: infoUsingPATCH_1
2019-02-13 13:50:20 -Generating unique operation named: infoUsingDELETE_1
2019-02-13 13:50:20 -Generating unique operation named: infoUsingOPTIONS_1
2019-02-13 13:50:20 -Generating unique operation named: infoUsingTRACE_1
2019-02-13 13:50:20 -Generating unique operation named: listUsingGET_3
2019-02-13 13:50:20 -Generating unique operation named: removeUsingPOST_4
2019-02-13 13:50:20 -Generating unique operation named: removeUsingPOST_5
2019-02-13 13:50:20 -Generating unique operation named: saveUsingPOST_3
2019-02-13 13:50:20 -Generating unique operation named: updateUsingPOST_3
2019-02-13 13:50:20 -Generating unique operation named: listUsingGET_4
2019-02-13 13:50:20 -Generating unique operation named: removeUsingPOST_6
2019-02-13 13:50:20 -Generating unique operation named: editUsingGET_4
2019-02-13 13:50:20 -Generating unique operation named: listUsingGET_5
2019-02-13 13:50:20 -Generating unique operation named: msgListUsingGET_1
2019-02-13 13:50:20 -Generating unique operation named: listUsingGET_6
2019-02-13 13:50:20 -Starting Quartz Scheduler now
2019-02-13 13:50:20 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-02-13 13:50:20 -Initializing ProtocolHandler ["http-nio-8087"]
2019-02-13 13:50:20 -Starting ProtocolHandler ["http-nio-8087"]
2019-02-13 13:50:20 -Using a shared selector for servlet write/read
2019-02-13 13:50:20 -Tomcat started on port(s): 8087 (http)
2019-02-13 13:50:20 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-02-13 13:50:20 -==> Parameters: 
2019-02-13 13:50:20 -<==      Total: 1
2019-02-13 13:50:20 -Started BootdoApplication in 9.909 seconds (JVM running for 10.406)
2019-02-13 13:50:27 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-02-13 13:50:27 -FrameworkServlet 'dispatcherServlet': initialization started
2019-02-13 13:50:27 -FrameworkServlet 'dispatcherServlet': initialization completed in 36 ms
2019-02-13 13:50:27 -Enabling session validation scheduler...
2019-02-13 13:50:28 -[THYMELEAF] INITIALIZING TEMPLATE ENGINE
2019-02-13 13:50:28 -[THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
2019-02-13 13:50:28 -[THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
2019-02-13 13:50:28 -[THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
2019-02-13 13:50:28 -[THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
2019-02-13 13:50:28 -[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * VALIDXML
[THYMELEAF]     * HTML5
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF]     * VALIDXHTML
[THYMELEAF]     * XML
[THYMELEAF]     * XHTML
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 3]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 3]: at.pollux.thymeleaf.shiro.dialect.ShiroDialect
[THYMELEAF]     * Prefix: "shiro"
[THYMELEAF] * Dialect [3 of 3]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2019-02-13 13:50:28 -[THYMELEAF] TEMPLATE ENGINE INITIALIZED
2019-02-13 13:50:28 -No task executor bean found for async processing: no bean of type TaskExecutor and no bean named 'taskExecutor' either
2019-02-13 13:50:28 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-02-13 13:50:28 -Request method 'GET' not supported
org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'GET' not supported
	at org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.handleNoMatch(RequestMappingInfoHandlerMapping.java:207)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.lookupHandlerMethod(AbstractHandlerMethodMapping.java:374)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.getHandlerInternal(AbstractHandlerMethodMapping.java:314)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.getHandlerInternal(AbstractHandlerMethodMapping.java:61)
	at org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:352)
	at org.springframework.web.servlet.DispatcherServlet.getHandler(DispatcherServlet.java:1160)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:940)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.dingshi.system.filter.CorsFilter.doFilter(CorsFilter.java:38)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.dingshi.system.filter.CorsFilter.doFilter(CorsFilter.java:38)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:208)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:347)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:263)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-02-13 13:50:28 -==> Parameters: null, null, error(String), null, http://localhost:8087/login;JSESSIONID=ecd2f791-a88c-4f64-8f74-192bf06a37b9(String), org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'GET' not supported(String), null, 2019-02-13 13:50:28.327(Timestamp)
2019-02-13 13:50:28 -<==    Updates: 1
2019-02-13 14:50:28 -Validating all active sessions...
2019-02-13 14:50:28 -Finished session validation.  [1] sessions were stopped.
2019-02-13 15:40:44 -Starting BootdoApplication on DESKTOP-8PLG398 with PID 12752 (D:\zhenjiu\dingshi-portal\target\classes started by EDZ in D:\zhenjiu\dingshi-portal)
2019-02-13 15:40:44 -Running with Spring Boot v1.5.9.RELEASE, Spring v4.3.13.RELEASE
2019-02-13 15:40:44 -The following profiles are active: dev
2019-02-13 15:40:44 -Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@31fa1761: startup date [Wed Feb 13 15:40:44 CST 2019]; root of context hierarchy
2019-02-13 15:40:44 -HV000001: Hibernate Validator 5.3.6.Final
2019-02-13 15:40:45 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-02-13 15:40:46 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$1428e98e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-02-13 15:40:46 -Bean 'shiroConfig' of type [com.zhenjiu.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$d474271d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-02-13 15:40:47 -Bean 'userRealm' of type [com.zhenjiu.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-02-13 15:40:47 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-02-13 15:40:47 -Cache with name 'com.zhenjiu.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-02-13 15:40:47 -Added EhCache named [com.zhenjiu.system.shiro.UserRealm.authorizationCache]
2019-02-13 15:40:47 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-02-13 15:40:47 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-02-13 15:40:47 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-02-13 15:40:47 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-02-13 15:40:48 -Tomcat initialized with port(s): 8087 (http)
2019-02-13 15:40:48 -Starting service [Tomcat]
2019-02-13 15:40:48 -Starting Servlet Engine: Apache Tomcat/8.5.23
2019-02-13 15:40:48 -Initializing Spring embedded WebApplicationContext
2019-02-13 15:40:48 -Root WebApplicationContext: initialization completed in 4343 ms
2019-02-13 15:40:49 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-02-13 15:40:49 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-02-13 15:40:49 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-02-13 15:40:49 -Mapping filter: 'requestContextFilter' to: [/*]
2019-02-13 15:40:49 -Mapping filter: 'springSecurityFilterChain' to: [/*]
2019-02-13 15:40:49 -Filter xssFilter was not registered (disabled)
2019-02-13 15:40:49 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-02-13 15:40:49 -Mapping filter: 'com.zhenjiu.system.filter.CorsFilter' to: [/*]
2019-02-13 15:40:49 -Mapping filter: 'remoteIpFilter' to: [/*]
2019-02-13 15:40:49 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-02-13 15:40:49 -Mapping servlet: 'statViewServlet' to [/druid/*]
2019-02-13 15:40:49 -Mapping servlet: 'dispatcherServlet' to [/]
2019-02-13 15:40:50 -{dataSource-1} inited
2019-02-13 15:40:50 -ApplicationContext registed-->org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@31fa1761: startup date [Wed Feb 13 15:40:44 CST 2019]; root of context hierarchy
2019-02-13 15:40:51 -Using default implementation for ThreadExecutor
2019-02-13 15:40:51 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-02-13 15:40:51 -Quartz Scheduler v.2.2.1 created.
2019-02-13 15:40:51 -RAMJobStore initialized.
2019-02-13 15:40:51 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-02-13 15:40:51 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-02-13 15:40:51 -Quartz scheduler version: 2.2.1
2019-02-13 15:40:51 -JobFactory set to: com.zhenjiu.common.quartz.factory.JobFactory@5fe46d52
2019-02-13 15:40:52 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.zhenjiu.common.controller.DictController.add()
2019-02-13 15:40:52 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.zhenjiu.common.utils.R com.zhenjiu.common.controller.DictController.remove(java.lang.Long)
2019-02-13 15:40:52 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.zhenjiu.common.utils.R com.zhenjiu.common.controller.DictController.remove(java.lang.Long[])
2019-02-13 15:40:52 -Mapped "{[/common/dict/update]}" onto public com.zhenjiu.common.utils.R com.zhenjiu.common.controller.DictController.update(com.zhenjiu.common.domain.DictDO)
2019-02-13 15:40:52 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.zhenjiu.common.utils.PageUtils com.zhenjiu.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-02-13 15:40:52 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.zhenjiu.common.utils.R com.zhenjiu.common.controller.DictController.save(com.zhenjiu.common.domain.DictDO)
2019-02-13 15:40:52 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.zhenjiu.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-02-13 15:40:52 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.zhenjiu.common.domain.DictDO> com.zhenjiu.common.controller.DictController.listByType(java.lang.String)
2019-02-13 15:40:52 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.zhenjiu.common.controller.DictController.dict()
2019-02-13 15:40:52 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.zhenjiu.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-02-13 15:40:52 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.zhenjiu.common.domain.DictDO> com.zhenjiu.common.controller.DictController.listType()
2019-02-13 15:40:52 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.zhenjiu.common.controller.FileController.add()
2019-02-13 15:40:52 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.zhenjiu.common.utils.R com.zhenjiu.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-02-13 15:40:52 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.zhenjiu.common.utils.R com.zhenjiu.common.controller.FileController.remove(java.lang.Long[])
2019-02-13 15:40:52 -Mapped "{[/common/sysFile/update]}" onto public com.zhenjiu.common.utils.R com.zhenjiu.common.controller.FileController.update(com.zhenjiu.common.domain.FileDO)
2019-02-13 15:40:52 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.zhenjiu.common.utils.PageUtils com.zhenjiu.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-02-13 15:40:52 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.zhenjiu.common.utils.R com.zhenjiu.common.controller.FileController.save(com.zhenjiu.common.domain.FileDO)
2019-02-13 15:40:52 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.zhenjiu.common.utils.R com.zhenjiu.common.controller.FileController.info(java.lang.Long)
2019-02-13 15:40:52 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.zhenjiu.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-02-13 15:40:52 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.zhenjiu.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-02-13 15:40:52 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.zhenjiu.common.utils.R com.zhenjiu.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-02-13 15:40:52 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.zhenjiu.common.utils.R com.zhenjiu.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-02-13 15:40:52 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.zhenjiu.common.controller.GeneratorController.list()
2019-02-13 15:40:52 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.zhenjiu.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-02-13 15:40:52 -Mapped "{[/common/generator/batchCode]}" onto public void com.zhenjiu.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-02-13 15:40:52 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.zhenjiu.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-02-13 15:40:52 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.zhenjiu.common.controller.GeneratorController.generator()
2019-02-13 15:40:52 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.zhenjiu.common.controller.JobController.add()
2019-02-13 15:40:52 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.zhenjiu.common.utils.R com.zhenjiu.common.controller.JobController.remove(java.lang.Long)
2019-02-13 15:40:52 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.zhenjiu.common.utils.R com.zhenjiu.common.controller.JobController.remove(java.lang.Long[])
2019-02-13 15:40:52 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.zhenjiu.common.utils.R com.zhenjiu.common.controller.JobController.update(com.zhenjiu.common.domain.TaskDO)
2019-02-13 15:40:52 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.zhenjiu.common.utils.PageUtils com.zhenjiu.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-02-13 15:40:52 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.zhenjiu.common.utils.R com.zhenjiu.common.controller.JobController.save(com.zhenjiu.common.domain.TaskDO)
2019-02-13 15:40:52 -Mapped "{[/common/job/info/{id}]}" onto public com.zhenjiu.common.utils.R com.zhenjiu.common.controller.JobController.info(java.lang.Long)
2019-02-13 15:40:52 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.zhenjiu.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-02-13 15:40:52 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.zhenjiu.common.controller.JobController.taskScheduleJob()
2019-02-13 15:40:52 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.zhenjiu.common.utils.R com.zhenjiu.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-02-13 15:40:52 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.zhenjiu.common.utils.R com.zhenjiu.common.controller.LogController.remove(java.lang.Long)
2019-02-13 15:40:52 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.zhenjiu.common.controller.LogController.log()
2019-02-13 15:40:52 -Mapped "{[/common/log/list],methods=[GET]}" onto com.zhenjiu.common.domain.PageDO<com.zhenjiu.common.domain.LogDO> com.zhenjiu.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-02-13 15:40:52 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.zhenjiu.common.utils.R com.zhenjiu.common.controller.LogController.batchRemove(java.lang.Long[])
2019-02-13 15:40:52 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.zhenjiu.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-02-13 15:40:52 -Mapped "{[/error]}" onto public com.zhenjiu.common.utils.R com.zhenjiu.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-02-13 15:40:52 -Mapped "{[/information/complaint/save],methods=[POST]}" onto public com.zhenjiu.common.utils.R com.zhenjiu.information.controller.ComplaintController.save(com.zhenjiu.information.domain.ComplaintDO)
2019-02-13 15:40:52 -Mapped "{[/information/complaint/getPlotPhone],methods=[POST]}" onto public com.zhenjiu.common.utils.R com.zhenjiu.information.controller.ComplaintController.getPlotPhone(java.lang.Long)
2019-02-13 15:40:52 -Mapped "{[/information/complaint],methods=[GET]}" onto java.lang.String com.zhenjiu.information.controller.ComplaintController.Complaint(org.springframework.ui.Model)
2019-02-13 15:40:52 -Mapped "{[/information/consult/msgList],methods=[GET]}" onto java.util.Map<java.lang.String, java.lang.Object> com.zhenjiu.information.controller.ConsultController.msgList(java.util.Map<java.lang.String, java.lang.Object>)
2019-02-13 15:40:52 -Mapped "{[/information/consult/editMsg],methods=[POST]}" onto java.util.Map<java.lang.String, java.lang.Object> com.zhenjiu.information.controller.ConsultController.editMsg(java.lang.Integer)
2019-02-13 15:40:52 -Mapped "{[/information/msg],methods=[GET]}" onto java.lang.String com.zhenjiu.information.controller.MsgController.Msg(org.springframework.ui.Model)
2019-02-13 15:40:52 -Mapped "{[/information/msg/queryMsgDetails],methods=[GET]}" onto java.lang.String com.zhenjiu.information.controller.MsgController.queryMsgDetails(java.lang.Long,java.lang.Long,org.springframework.ui.Model)
2019-02-13 15:40:52 -Mapped "{[/information/notice/{id}],methods=[GET]}" onto java.lang.String com.zhenjiu.information.controller.NoticeController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-02-13 15:40:52 -Mapped "{[/order/list],methods=[GET]}" onto java.util.Map<java.lang.String, java.lang.Object> com.zhenjiu.information.controller.OrderController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-02-13 15:40:52 -Mapped "{[/order/listById],methods=[GET]}" onto java.util.Map<java.lang.String, java.lang.Object> com.zhenjiu.information.controller.OrderController.msgList(java.util.Map<java.lang.String, java.lang.Object>)
2019-02-13 15:40:52 -Mapped "{[/order/deatil],methods=[GET]}" onto java.util.Map<java.lang.String, java.lang.Object> com.zhenjiu.information.controller.OrderController.deatil(java.lang.Integer)
2019-02-13 15:40:52 -Mapped "{[/register],methods=[POST]}" onto java.util.Map<java.lang.String, java.lang.String> com.zhenjiu.owneruser.controller.LoginController.register(java.lang.String,java.lang.String)
2019-02-13 15:40:52 -Mapped "{[/login],methods=[POST]}" onto java.util.Map<java.lang.String, java.lang.Object> com.zhenjiu.owneruser.controller.LoginController.login(java.lang.String,java.lang.String,java.lang.String)
2019-02-13 15:40:52 -Mapped "{[/logout],methods=[GET]}" onto java.util.Map<java.lang.String, java.lang.String> com.zhenjiu.owneruser.controller.LoginController.logout()
2019-02-13 15:40:52 -Mapped "{[/captcha],methods=[POST]}" onto java.util.Map<java.lang.String, java.lang.String> com.zhenjiu.owneruser.controller.LoginController.captcha(java.lang.String,java.lang.String)
2019-02-13 15:40:52 -Mapped "{[/owner/editInfo],methods=[POST]}" onto java.util.Map<java.lang.String, java.lang.Object> com.zhenjiu.owneruser.controller.OwnerUserController.editInfo(com.zhenjiu.owneruser.domain.OwnerUserDO)
2019-02-13 15:40:52 -Mapped "{[/owner/editHeadUrl],methods=[POST]}" onto java.util.Map<java.lang.String, java.lang.Object> com.zhenjiu.owneruser.controller.OwnerUserController.editHeadUrl(com.zhenjiu.owneruser.domain.OwnerUserDO)
2019-02-13 15:40:52 -Mapped "{[/owner/userInfo],methods=[GET]}" onto java.util.Map<java.lang.String, java.lang.Object> com.zhenjiu.owneruser.controller.OwnerUserController.user()
2019-02-13 15:40:52 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.zhenjiu.system.domain.UserOnline> com.zhenjiu.system.controller.SessionController.list()
2019-02-13 15:40:52 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.zhenjiu.common.utils.R com.zhenjiu.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-02-13 15:40:52 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.zhenjiu.system.controller.SessionController.online()
2019-02-13 15:40:52 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.zhenjiu.system.controller.SessionController.sessionList()
2019-02-13 15:40:52 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-02-13 15:40:52 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-02-13 15:40:52 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-02-13 15:40:52 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-02-13 15:40:53 -Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@31fa1761: startup date [Wed Feb 13 15:40:44 CST 2019]; root of context hierarchy
2019-02-13 15:40:53 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-02-13 15:40:53 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-02-13 15:40:53 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-02-13 15:40:53 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-02-13 15:40:53 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-02-13 15:40:54 -

Using default security password: a4a8c8dd-a1c0-4751-ab6b-2b60c8af1ba8

2019-02-13 15:40:54 -Creating filter chain: OrRequestMatcher [requestMatchers=[Ant [pattern='/css/**'], Ant [pattern='/js/**'], Ant [pattern='/images/**'], Ant [pattern='/webjars/**'], Ant [pattern='/**/favicon.ico'], Ant [pattern='/error']]], []
2019-02-13 15:40:54 -Creating filter chain: org.springframework.boot.autoconfigure.security.SpringBootWebSecurityConfiguration$ApplicationNoWebSecurityConfigurerAdapter$1@405603b6, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@3c3cd13a, org.springframework.security.web.context.SecurityContextPersistenceFilter@64544ee4, org.springframework.security.web.header.HeaderWriterFilter@398694a6, org.springframework.security.web.csrf.CsrfFilter@26d24d7a, org.springframework.security.web.authentication.logout.LogoutFilter@7fd2a67a, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@539ee811, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@30a62a5b, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@56b751b1, org.springframework.security.web.session.SessionManagementFilter@5c25daad, org.springframework.security.web.access.ExceptionTranslationFilter@2862271a]
2019-02-13 15:40:54 -Registering beans for JMX exposure on startup
2019-02-13 15:40:54 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-02-13 15:40:54 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-02-13 15:40:54 -Starting beans in phase 2147483647
2019-02-13 15:40:54 -Context refreshed
2019-02-13 15:40:54 -Found 1 custom documentation plugin(s)
2019-02-13 15:40:54 -Scanning for api listing references
2019-02-13 15:40:55 -Generating unique operation named: removeUsingPOST_1
2019-02-13 15:40:55 -Generating unique operation named: saveUsingPOST_1
2019-02-13 15:40:55 -Generating unique operation named: addUsingGET_1
2019-02-13 15:40:55 -Generating unique operation named: editUsingGET_1
2019-02-13 15:40:55 -Generating unique operation named: listUsingGET_1
2019-02-13 15:40:55 -Generating unique operation named: removeUsingPOST_2
2019-02-13 15:40:55 -Generating unique operation named: removeUsingPOST_3
2019-02-13 15:40:55 -Generating unique operation named: saveUsingPOST_2
2019-02-13 15:40:55 -Generating unique operation named: updateUsingGET_1
2019-02-13 15:40:55 -Generating unique operation named: updateUsingHEAD_1
2019-02-13 15:40:55 -Generating unique operation named: updateUsingPOST_1
2019-02-13 15:40:55 -Generating unique operation named: updateUsingPUT_1
2019-02-13 15:40:55 -Generating unique operation named: updateUsingPATCH_1
2019-02-13 15:40:55 -Generating unique operation named: updateUsingDELETE_1
2019-02-13 15:40:55 -Generating unique operation named: updateUsingOPTIONS_1
2019-02-13 15:40:55 -Generating unique operation named: updateUsingTRACE_1
2019-02-13 15:40:55 -Generating unique operation named: editUsingGET_2
2019-02-13 15:40:55 -Generating unique operation named: listUsingGET_2
2019-02-13 15:40:55 -Generating unique operation named: updateUsingPOST_2
2019-02-13 15:40:55 -Generating unique operation named: addUsingGET_2
2019-02-13 15:40:55 -Generating unique operation named: editUsingGET_3
2019-02-13 15:40:55 -Generating unique operation named: infoUsingGET_1
2019-02-13 15:40:55 -Generating unique operation named: infoUsingHEAD_1
2019-02-13 15:40:55 -Generating unique operation named: infoUsingPOST_1
2019-02-13 15:40:55 -Generating unique operation named: infoUsingPUT_1
2019-02-13 15:40:55 -Generating unique operation named: infoUsingPATCH_1
2019-02-13 15:40:55 -Generating unique operation named: infoUsingDELETE_1
2019-02-13 15:40:55 -Generating unique operation named: infoUsingOPTIONS_1
2019-02-13 15:40:55 -Generating unique operation named: infoUsingTRACE_1
2019-02-13 15:40:55 -Generating unique operation named: listUsingGET_3
2019-02-13 15:40:55 -Generating unique operation named: removeUsingPOST_4
2019-02-13 15:40:55 -Generating unique operation named: removeUsingPOST_5
2019-02-13 15:40:55 -Generating unique operation named: saveUsingPOST_3
2019-02-13 15:40:55 -Generating unique operation named: updateUsingPOST_3
2019-02-13 15:40:55 -Generating unique operation named: listUsingGET_4
2019-02-13 15:40:55 -Generating unique operation named: removeUsingPOST_6
2019-02-13 15:40:55 -Generating unique operation named: editUsingGET_4
2019-02-13 15:40:55 -Generating unique operation named: listUsingGET_5
2019-02-13 15:40:55 -Generating unique operation named: msgListUsingGET_1
2019-02-13 15:40:56 -Generating unique operation named: listUsingGET_6
2019-02-13 15:40:56 -Starting Quartz Scheduler now
2019-02-13 15:40:56 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-02-13 15:40:56 -Initializing ProtocolHandler ["http-nio-8087"]
2019-02-13 15:40:56 -Starting ProtocolHandler ["http-nio-8087"]
2019-02-13 15:40:56 -Using a shared selector for servlet write/read
2019-02-13 15:40:56 -Tomcat started on port(s): 8087 (http)
2019-02-13 15:40:56 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-02-13 15:40:56 -==> Parameters: 
2019-02-13 15:40:56 -<==      Total: 1
2019-02-13 15:40:56 -Started BootdoApplication in 12.842 seconds (JVM running for 13.385)
2019-02-13 15:41:05 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-02-13 15:41:05 -FrameworkServlet 'dispatcherServlet': initialization started
2019-02-13 15:41:05 -FrameworkServlet 'dispatcherServlet': initialization completed in 31 ms
2019-02-13 15:41:05 -Enabling session validation scheduler...
2019-02-13 15:41:05 -[THYMELEAF] INITIALIZING TEMPLATE ENGINE
2019-02-13 15:41:05 -[THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
2019-02-13 15:41:05 -[THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
2019-02-13 15:41:05 -[THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
2019-02-13 15:41:05 -[THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
2019-02-13 15:41:05 -[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF]     * HTML5
[THYMELEAF]     * XML
[THYMELEAF]     * VALIDXHTML
[THYMELEAF]     * VALIDXML
[THYMELEAF]     * XHTML
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 3]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 3]: at.pollux.thymeleaf.shiro.dialect.ShiroDialect
[THYMELEAF]     * Prefix: "shiro"
[THYMELEAF] * Dialect [3 of 3]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2019-02-13 15:41:05 -[THYMELEAF] TEMPLATE ENGINE INITIALIZED
2019-02-13 15:41:06 -No task executor bean found for async processing: no bean of type TaskExecutor and no bean named 'taskExecutor' either
2019-02-13 15:41:06 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-02-13 15:41:06 -Request method 'GET' not supported
org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'GET' not supported
	at org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.handleNoMatch(RequestMappingInfoHandlerMapping.java:207)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.lookupHandlerMethod(AbstractHandlerMethodMapping.java:374)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.getHandlerInternal(AbstractHandlerMethodMapping.java:314)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.getHandlerInternal(AbstractHandlerMethodMapping.java:61)
	at org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:352)
	at org.springframework.web.servlet.DispatcherServlet.getHandler(DispatcherServlet.java:1160)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:940)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.zhenjiu.system.filter.CorsFilter.doFilter(CorsFilter.java:38)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.zhenjiu.system.filter.CorsFilter.doFilter(CorsFilter.java:38)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:208)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:347)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:263)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-02-13 15:41:06 -==> Parameters: null, null, error(String), null, http://localhost:8087/login;JSESSIONID=2421e2d1-8d75-461b-b8d8-000f91e519d9(String), org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'GET' not supported(String), null, 2019-02-13 15:41:06.098(Timestamp)
2019-02-13 15:41:06 -<==    Updates: 1
2019-02-13 15:44:27 -Request method 'GET' not supported
org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'GET' not supported
	at org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.handleNoMatch(RequestMappingInfoHandlerMapping.java:207)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.lookupHandlerMethod(AbstractHandlerMethodMapping.java:374)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.getHandlerInternal(AbstractHandlerMethodMapping.java:314)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.getHandlerInternal(AbstractHandlerMethodMapping.java:61)
	at org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:352)
	at org.springframework.web.servlet.DispatcherServlet.getHandler(DispatcherServlet.java:1160)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:940)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.zhenjiu.system.filter.CorsFilter.doFilter(CorsFilter.java:38)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.zhenjiu.system.filter.CorsFilter.doFilter(CorsFilter.java:38)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:208)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:347)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:263)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-02-13 15:44:27 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-02-13 15:44:27 -==> Parameters: null, null, error(String), null, http://localhost:8087/login;JSESSIONID=364471eb-8c03-4c3f-b340-0f5e29cae6ae(String), org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'GET' not supported(String), null, 2019-02-13 15:44:27.294(Timestamp)
2019-02-13 15:44:27 -<==    Updates: 1
2019-02-13 15:50:42 -Request method 'GET' not supported
org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'GET' not supported
	at org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.handleNoMatch(RequestMappingInfoHandlerMapping.java:207)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.lookupHandlerMethod(AbstractHandlerMethodMapping.java:374)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.getHandlerInternal(AbstractHandlerMethodMapping.java:314)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.getHandlerInternal(AbstractHandlerMethodMapping.java:61)
	at org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:352)
	at org.springframework.web.servlet.DispatcherServlet.getHandler(DispatcherServlet.java:1160)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:940)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.zhenjiu.system.filter.CorsFilter.doFilter(CorsFilter.java:38)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.zhenjiu.system.filter.CorsFilter.doFilter(CorsFilter.java:38)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:208)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:347)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:263)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-02-13 15:50:42 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-02-13 15:50:42 -==> Parameters: null, null, error(String), null, http://localhost:8087/login(String), org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'GET' not supported(String), null, 2019-02-13 15:50:42.454(Timestamp)
2019-02-13 15:50:42 -<==    Updates: 1
2019-02-13 15:50:59 -Starting BootdoApplication on DESKTOP-8PLG398 with PID 14284 (D:\zhenjiu\dingshi-portal\target\classes started by EDZ in D:\zhenjiu\dingshi-portal)
2019-02-13 15:50:59 -Running with Spring Boot v1.5.9.RELEASE, Spring v4.3.13.RELEASE
2019-02-13 15:50:59 -The following profiles are active: dev
2019-02-13 15:51:00 -HV000001: Hibernate Validator 5.3.6.Final
2019-02-13 15:51:00 -Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@31fa1761: startup date [Wed Feb 13 15:51:00 CST 2019]; root of context hierarchy
2019-02-13 15:51:01 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-02-13 15:51:02 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$3dbe0e8c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-02-13 15:51:02 -Bean 'shiroConfig' of type [com.zhenjiu.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$fe094c1b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-02-13 15:51:02 -Bean 'userRealm' of type [com.zhenjiu.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-02-13 15:51:02 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-02-13 15:51:02 -Cache with name 'com.zhenjiu.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-02-13 15:51:02 -Added EhCache named [com.zhenjiu.system.shiro.UserRealm.authorizationCache]
2019-02-13 15:51:02 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-02-13 15:51:02 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-02-13 15:51:03 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-02-13 15:51:03 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-02-13 15:51:03 -Tomcat initialized with port(s): 8087 (http)
2019-02-13 15:51:03 -Starting service [Tomcat]
2019-02-13 15:51:03 -Starting Servlet Engine: Apache Tomcat/8.5.23
2019-02-13 15:51:03 -Initializing Spring embedded WebApplicationContext
2019-02-13 15:51:03 -Root WebApplicationContext: initialization completed in 3674 ms
2019-02-13 15:51:04 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-02-13 15:51:04 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-02-13 15:51:04 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-02-13 15:51:04 -Mapping filter: 'requestContextFilter' to: [/*]
2019-02-13 15:51:04 -Mapping filter: 'springSecurityFilterChain' to: [/*]
2019-02-13 15:51:04 -Filter xssFilter was not registered (disabled)
2019-02-13 15:51:04 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-02-13 15:51:04 -Mapping filter: 'com.zhenjiu.system.filter.CorsFilter' to: [/*]
2019-02-13 15:51:04 -Mapping filter: 'remoteIpFilter' to: [/*]
2019-02-13 15:51:04 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-02-13 15:51:04 -Mapping servlet: 'statViewServlet' to [/druid/*]
2019-02-13 15:51:04 -Mapping servlet: 'dispatcherServlet' to [/]
2019-02-13 15:51:04 -{dataSource-1} inited
2019-02-13 15:51:05 -ApplicationContext registed-->org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@31fa1761: startup date [Wed Feb 13 15:51:00 CST 2019]; root of context hierarchy
2019-02-13 15:51:05 -Using default implementation for ThreadExecutor
2019-02-13 15:51:05 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-02-13 15:51:05 -Quartz Scheduler v.2.2.1 created.
2019-02-13 15:51:05 -RAMJobStore initialized.
2019-02-13 15:51:05 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-02-13 15:51:05 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-02-13 15:51:05 -Quartz scheduler version: 2.2.1
2019-02-13 15:51:05 -JobFactory set to: com.zhenjiu.common.quartz.factory.JobFactory@230232b0
2019-02-13 15:51:06 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.zhenjiu.common.controller.DictController.add()
2019-02-13 15:51:06 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.zhenjiu.common.utils.R com.zhenjiu.common.controller.DictController.remove(java.lang.Long)
2019-02-13 15:51:06 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.zhenjiu.common.utils.R com.zhenjiu.common.controller.DictController.remove(java.lang.Long[])
2019-02-13 15:51:06 -Mapped "{[/common/dict/update]}" onto public com.zhenjiu.common.utils.R com.zhenjiu.common.controller.DictController.update(com.zhenjiu.common.domain.DictDO)
2019-02-13 15:51:06 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.zhenjiu.common.utils.PageUtils com.zhenjiu.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-02-13 15:51:06 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.zhenjiu.common.utils.R com.zhenjiu.common.controller.DictController.save(com.zhenjiu.common.domain.DictDO)
2019-02-13 15:51:06 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.zhenjiu.common.domain.DictDO> com.zhenjiu.common.controller.DictController.listType()
2019-02-13 15:51:06 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.zhenjiu.common.controller.DictController.dict()
2019-02-13 15:51:06 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.zhenjiu.common.domain.DictDO> com.zhenjiu.common.controller.DictController.listByType(java.lang.String)
2019-02-13 15:51:06 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.zhenjiu.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-02-13 15:51:06 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.zhenjiu.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-02-13 15:51:06 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.zhenjiu.common.controller.FileController.add()
2019-02-13 15:51:06 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.zhenjiu.common.utils.R com.zhenjiu.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-02-13 15:51:06 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.zhenjiu.common.utils.R com.zhenjiu.common.controller.FileController.remove(java.lang.Long[])
2019-02-13 15:51:06 -Mapped "{[/common/sysFile/update]}" onto public com.zhenjiu.common.utils.R com.zhenjiu.common.controller.FileController.update(com.zhenjiu.common.domain.FileDO)
2019-02-13 15:51:06 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.zhenjiu.common.utils.PageUtils com.zhenjiu.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-02-13 15:51:06 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.zhenjiu.common.utils.R com.zhenjiu.common.controller.FileController.save(com.zhenjiu.common.domain.FileDO)
2019-02-13 15:51:06 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.zhenjiu.common.utils.R com.zhenjiu.common.controller.FileController.info(java.lang.Long)
2019-02-13 15:51:06 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.zhenjiu.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-02-13 15:51:06 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.zhenjiu.common.utils.R com.zhenjiu.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-02-13 15:51:06 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.zhenjiu.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-02-13 15:51:06 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.zhenjiu.common.utils.R com.zhenjiu.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-02-13 15:51:06 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.zhenjiu.common.controller.GeneratorController.list()
2019-02-13 15:51:06 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.zhenjiu.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-02-13 15:51:06 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.zhenjiu.common.controller.GeneratorController.generator()
2019-02-13 15:51:06 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.zhenjiu.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-02-13 15:51:06 -Mapped "{[/common/generator/batchCode]}" onto public void com.zhenjiu.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-02-13 15:51:06 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.zhenjiu.common.controller.JobController.add()
2019-02-13 15:51:06 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.zhenjiu.common.utils.R com.zhenjiu.common.controller.JobController.remove(java.lang.Long)
2019-02-13 15:51:06 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.zhenjiu.common.utils.R com.zhenjiu.common.controller.JobController.remove(java.lang.Long[])
2019-02-13 15:51:06 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.zhenjiu.common.utils.R com.zhenjiu.common.controller.JobController.update(com.zhenjiu.common.domain.TaskDO)
2019-02-13 15:51:06 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.zhenjiu.common.utils.PageUtils com.zhenjiu.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-02-13 15:51:06 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.zhenjiu.common.utils.R com.zhenjiu.common.controller.JobController.save(com.zhenjiu.common.domain.TaskDO)
2019-02-13 15:51:06 -Mapped "{[/common/job/info/{id}]}" onto public com.zhenjiu.common.utils.R com.zhenjiu.common.controller.JobController.info(java.lang.Long)
2019-02-13 15:51:06 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.zhenjiu.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-02-13 15:51:06 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.zhenjiu.common.controller.JobController.taskScheduleJob()
2019-02-13 15:51:06 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.zhenjiu.common.utils.R com.zhenjiu.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-02-13 15:51:06 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.zhenjiu.common.utils.R com.zhenjiu.common.controller.LogController.remove(java.lang.Long)
2019-02-13 15:51:06 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.zhenjiu.common.controller.LogController.log()
2019-02-13 15:51:06 -Mapped "{[/common/log/list],methods=[GET]}" onto com.zhenjiu.common.domain.PageDO<com.zhenjiu.common.domain.LogDO> com.zhenjiu.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-02-13 15:51:06 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.zhenjiu.common.utils.R com.zhenjiu.common.controller.LogController.batchRemove(java.lang.Long[])
2019-02-13 15:51:06 -Mapped "{[/error]}" onto public com.zhenjiu.common.utils.R com.zhenjiu.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-02-13 15:51:06 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.zhenjiu.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-02-13 15:51:06 -Mapped "{[/information/complaint/save],methods=[POST]}" onto public com.zhenjiu.common.utils.R com.zhenjiu.information.controller.ComplaintController.save(com.zhenjiu.information.domain.ComplaintDO)
2019-02-13 15:51:06 -Mapped "{[/information/complaint/getPlotPhone],methods=[POST]}" onto public com.zhenjiu.common.utils.R com.zhenjiu.information.controller.ComplaintController.getPlotPhone(java.lang.Long)
2019-02-13 15:51:06 -Mapped "{[/information/complaint],methods=[GET]}" onto java.lang.String com.zhenjiu.information.controller.ComplaintController.Complaint(org.springframework.ui.Model)
2019-02-13 15:51:06 -Mapped "{[/information/consult/editMsg],methods=[POST]}" onto java.util.Map<java.lang.String, java.lang.Object> com.zhenjiu.information.controller.ConsultController.editMsg(java.lang.Integer)
2019-02-13 15:51:06 -Mapped "{[/information/consult/msgList],methods=[GET]}" onto java.util.Map<java.lang.String, java.lang.Object> com.zhenjiu.information.controller.ConsultController.msgList(java.util.Map<java.lang.String, java.lang.Object>)
2019-02-13 15:51:06 -Mapped "{[/information/msg/queryMsgDetails],methods=[GET]}" onto java.lang.String com.zhenjiu.information.controller.MsgController.queryMsgDetails(java.lang.Long,java.lang.Long,org.springframework.ui.Model)
2019-02-13 15:51:06 -Mapped "{[/information/msg],methods=[GET]}" onto java.lang.String com.zhenjiu.information.controller.MsgController.Msg(org.springframework.ui.Model)
2019-02-13 15:51:06 -Mapped "{[/information/notice/{id}],methods=[GET]}" onto java.lang.String com.zhenjiu.information.controller.NoticeController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-02-13 15:51:06 -Mapped "{[/order/list],methods=[GET]}" onto java.util.Map<java.lang.String, java.lang.Object> com.zhenjiu.information.controller.OrderController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-02-13 15:51:06 -Mapped "{[/order/deatil],methods=[GET]}" onto java.util.Map<java.lang.String, java.lang.Object> com.zhenjiu.information.controller.OrderController.deatil(java.lang.Integer)
2019-02-13 15:51:06 -Mapped "{[/order/listById],methods=[GET]}" onto java.util.Map<java.lang.String, java.lang.Object> com.zhenjiu.information.controller.OrderController.msgList(java.util.Map<java.lang.String, java.lang.Object>)
2019-02-13 15:51:06 -Mapped "{[/register],methods=[POST]}" onto java.util.Map<java.lang.String, java.lang.String> com.zhenjiu.owneruser.controller.LoginController.register(java.lang.String,java.lang.String)
2019-02-13 15:51:06 -Mapped "{[/login],methods=[POST]}" onto java.util.Map<java.lang.String, java.lang.Object> com.zhenjiu.owneruser.controller.LoginController.login(java.lang.String,java.lang.String,java.lang.String)
2019-02-13 15:51:06 -Mapped "{[/logout],methods=[GET]}" onto java.util.Map<java.lang.String, java.lang.String> com.zhenjiu.owneruser.controller.LoginController.logout()
2019-02-13 15:51:06 -Mapped "{[/captcha],methods=[POST]}" onto java.util.Map<java.lang.String, java.lang.String> com.zhenjiu.owneruser.controller.LoginController.captcha(java.lang.String,java.lang.String)
2019-02-13 15:51:06 -Mapped "{[/owner/userInfo],methods=[GET]}" onto java.util.Map<java.lang.String, java.lang.Object> com.zhenjiu.owneruser.controller.OwnerUserController.user()
2019-02-13 15:51:06 -Mapped "{[/owner/editHeadUrl],methods=[POST]}" onto java.util.Map<java.lang.String, java.lang.Object> com.zhenjiu.owneruser.controller.OwnerUserController.editHeadUrl(com.zhenjiu.owneruser.domain.OwnerUserDO)
2019-02-13 15:51:06 -Mapped "{[/owner/editInfo],methods=[POST]}" onto java.util.Map<java.lang.String, java.lang.Object> com.zhenjiu.owneruser.controller.OwnerUserController.editInfo(com.zhenjiu.owneruser.domain.OwnerUserDO)
2019-02-13 15:51:06 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.zhenjiu.system.domain.UserOnline> com.zhenjiu.system.controller.SessionController.list()
2019-02-13 15:51:06 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.zhenjiu.system.controller.SessionController.sessionList()
2019-02-13 15:51:06 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.zhenjiu.system.controller.SessionController.online()
2019-02-13 15:51:06 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.zhenjiu.common.utils.R com.zhenjiu.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-02-13 15:51:06 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-02-13 15:51:06 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-02-13 15:51:06 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-02-13 15:51:06 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-02-13 15:51:07 -Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@31fa1761: startup date [Wed Feb 13 15:51:00 CST 2019]; root of context hierarchy
2019-02-13 15:51:07 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-02-13 15:51:07 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-02-13 15:51:07 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-02-13 15:51:07 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-02-13 15:51:07 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-02-13 15:51:08 -

Using default security password: cee29c68-9fed-47b4-89d8-47375efd2ed2

2019-02-13 15:51:08 -Creating filter chain: OrRequestMatcher [requestMatchers=[Ant [pattern='/css/**'], Ant [pattern='/js/**'], Ant [pattern='/images/**'], Ant [pattern='/webjars/**'], Ant [pattern='/**/favicon.ico'], Ant [pattern='/error']]], []
2019-02-13 15:51:08 -Creating filter chain: org.springframework.boot.autoconfigure.security.SpringBootWebSecurityConfiguration$ApplicationNoWebSecurityConfigurerAdapter$1@14d81f2c, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@5dd3727c, org.springframework.security.web.context.SecurityContextPersistenceFilter@54a6ef6, org.springframework.security.web.header.HeaderWriterFilter@45e69324, org.springframework.security.web.csrf.CsrfFilter@653e7b, org.springframework.security.web.authentication.logout.LogoutFilter@36638b59, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@5b59c3d, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@4af7ac25, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@774013dc, org.springframework.security.web.session.SessionManagementFilter@5cb8580, org.springframework.security.web.access.ExceptionTranslationFilter@1e7cfd49]
2019-02-13 15:51:08 -Registering beans for JMX exposure on startup
2019-02-13 15:51:08 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-02-13 15:51:08 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-02-13 15:51:08 -Starting beans in phase 2147483647
2019-02-13 15:51:08 -Context refreshed
2019-02-13 15:51:08 -Found 1 custom documentation plugin(s)
2019-02-13 15:51:08 -Scanning for api listing references
2019-02-13 15:51:09 -Generating unique operation named: removeUsingPOST_1
2019-02-13 15:51:09 -Generating unique operation named: saveUsingPOST_1
2019-02-13 15:51:09 -Generating unique operation named: addUsingGET_1
2019-02-13 15:51:09 -Generating unique operation named: editUsingGET_1
2019-02-13 15:51:09 -Generating unique operation named: listUsingGET_1
2019-02-13 15:51:09 -Generating unique operation named: removeUsingPOST_2
2019-02-13 15:51:09 -Generating unique operation named: removeUsingPOST_3
2019-02-13 15:51:09 -Generating unique operation named: saveUsingPOST_2
2019-02-13 15:51:09 -Generating unique operation named: updateUsingGET_1
2019-02-13 15:51:09 -Generating unique operation named: updateUsingHEAD_1
2019-02-13 15:51:09 -Generating unique operation named: updateUsingPOST_1
2019-02-13 15:51:09 -Generating unique operation named: updateUsingPUT_1
2019-02-13 15:51:09 -Generating unique operation named: updateUsingPATCH_1
2019-02-13 15:51:09 -Generating unique operation named: updateUsingDELETE_1
2019-02-13 15:51:09 -Generating unique operation named: updateUsingOPTIONS_1
2019-02-13 15:51:09 -Generating unique operation named: updateUsingTRACE_1
2019-02-13 15:51:09 -Generating unique operation named: editUsingGET_2
2019-02-13 15:51:09 -Generating unique operation named: listUsingGET_2
2019-02-13 15:51:09 -Generating unique operation named: updateUsingPOST_2
2019-02-13 15:51:09 -Generating unique operation named: addUsingGET_2
2019-02-13 15:51:09 -Generating unique operation named: editUsingGET_3
2019-02-13 15:51:09 -Generating unique operation named: infoUsingGET_1
2019-02-13 15:51:09 -Generating unique operation named: infoUsingHEAD_1
2019-02-13 15:51:09 -Generating unique operation named: infoUsingPOST_1
2019-02-13 15:51:09 -Generating unique operation named: infoUsingPUT_1
2019-02-13 15:51:09 -Generating unique operation named: infoUsingPATCH_1
2019-02-13 15:51:09 -Generating unique operation named: infoUsingDELETE_1
2019-02-13 15:51:09 -Generating unique operation named: infoUsingOPTIONS_1
2019-02-13 15:51:09 -Generating unique operation named: infoUsingTRACE_1
2019-02-13 15:51:09 -Generating unique operation named: listUsingGET_3
2019-02-13 15:51:09 -Generating unique operation named: removeUsingPOST_4
2019-02-13 15:51:09 -Generating unique operation named: removeUsingPOST_5
2019-02-13 15:51:09 -Generating unique operation named: saveUsingPOST_3
2019-02-13 15:51:09 -Generating unique operation named: updateUsingPOST_3
2019-02-13 15:51:09 -Generating unique operation named: listUsingGET_4
2019-02-13 15:51:09 -Generating unique operation named: removeUsingPOST_6
2019-02-13 15:51:09 -Generating unique operation named: editUsingGET_4
2019-02-13 15:51:09 -Generating unique operation named: listUsingGET_5
2019-02-13 15:51:09 -Generating unique operation named: msgListUsingGET_1
2019-02-13 15:51:09 -Generating unique operation named: listUsingGET_6
2019-02-13 15:51:09 -Starting Quartz Scheduler now
2019-02-13 15:51:09 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-02-13 15:51:09 -Initializing ProtocolHandler ["http-nio-8087"]
2019-02-13 15:51:09 -Starting ProtocolHandler ["http-nio-8087"]
2019-02-13 15:51:09 -Using a shared selector for servlet write/read
2019-02-13 15:51:09 -Tomcat started on port(s): 8087 (http)
2019-02-13 15:51:09 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-02-13 15:51:10 -==> Parameters: 
2019-02-13 15:51:10 -<==      Total: 1
2019-02-13 15:51:10 -Started BootdoApplication in 10.847 seconds (JVM running for 11.382)
2019-02-13 15:51:14 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-02-13 15:51:14 -FrameworkServlet 'dispatcherServlet': initialization started
2019-02-13 15:51:14 -FrameworkServlet 'dispatcherServlet': initialization completed in 35 ms
2019-02-13 15:51:14 -Enabling session validation scheduler...
2019-02-13 15:51:14 -[THYMELEAF] INITIALIZING TEMPLATE ENGINE
2019-02-13 15:51:14 -[THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
2019-02-13 15:51:14 -[THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
2019-02-13 15:51:14 -[THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
2019-02-13 15:51:14 -[THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
2019-02-13 15:51:14 -[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * VALIDXML
[THYMELEAF]     * HTML5
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF]     * VALIDXHTML
[THYMELEAF]     * XML
[THYMELEAF]     * XHTML
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 3]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 3]: at.pollux.thymeleaf.shiro.dialect.ShiroDialect
[THYMELEAF]     * Prefix: "shiro"
[THYMELEAF] * Dialect [3 of 3]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2019-02-13 15:51:14 -[THYMELEAF] TEMPLATE ENGINE INITIALIZED
2019-02-13 15:51:14 -No task executor bean found for async processing: no bean of type TaskExecutor and no bean named 'taskExecutor' either
2019-02-13 15:51:14 -Request method 'GET' not supported
org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'GET' not supported
	at org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.handleNoMatch(RequestMappingInfoHandlerMapping.java:207)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.lookupHandlerMethod(AbstractHandlerMethodMapping.java:374)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.getHandlerInternal(AbstractHandlerMethodMapping.java:314)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.getHandlerInternal(AbstractHandlerMethodMapping.java:61)
	at org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:352)
	at org.springframework.web.servlet.DispatcherServlet.getHandler(DispatcherServlet.java:1160)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:940)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.zhenjiu.system.filter.CorsFilter.doFilter(CorsFilter.java:38)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.zhenjiu.system.filter.CorsFilter.doFilter(CorsFilter.java:38)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:208)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:347)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:263)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-02-13 15:51:14 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-02-13 15:51:14 -==> Parameters: null, null, error(String), null, http://localhost:8087/login;JSESSIONID=1814de96-e941-4b99-a41e-239efbb43adf(String), org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'GET' not supported(String), null, 2019-02-13 15:51:14.882(Timestamp)
2019-02-13 15:51:14 -<==    Updates: 1
2019-02-13 15:52:04 -Starting BootdoApplication on DESKTOP-8PLG398 with PID 11592 (D:\zhenjiu\dingshi-portal\target\classes started by EDZ in D:\zhenjiu\dingshi-portal)
2019-02-13 15:52:04 -Running with Spring Boot v1.5.9.RELEASE, Spring v4.3.13.RELEASE
2019-02-13 15:52:04 -The following profiles are active: dev
2019-02-13 15:52:05 -HV000001: Hibernate Validator 5.3.6.Final
2019-02-13 15:52:05 -Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@31fa1761: startup date [Wed Feb 13 15:52:05 CST 2019]; root of context hierarchy
2019-02-13 15:52:06 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-02-13 15:52:07 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$1428e98e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-02-13 15:52:07 -Bean 'shiroConfig' of type [com.zhenjiu.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$d474271d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-02-13 15:52:07 -Bean 'userRealm' of type [com.zhenjiu.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-02-13 15:52:08 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-02-13 15:52:08 -Cache with name 'com.zhenjiu.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-02-13 15:52:08 -Added EhCache named [com.zhenjiu.system.shiro.UserRealm.authorizationCache]
2019-02-13 15:52:08 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-02-13 15:52:08 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-02-13 15:52:08 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-02-13 15:52:08 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-02-13 15:52:08 -Tomcat initialized with port(s): 8087 (http)
2019-02-13 15:52:08 -Starting service [Tomcat]
2019-02-13 15:52:08 -Starting Servlet Engine: Apache Tomcat/8.5.23
2019-02-13 15:52:08 -Initializing Spring embedded WebApplicationContext
2019-02-13 15:52:08 -Root WebApplicationContext: initialization completed in 3666 ms
2019-02-13 15:52:09 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-02-13 15:52:09 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-02-13 15:52:09 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-02-13 15:52:09 -Mapping filter: 'requestContextFilter' to: [/*]
2019-02-13 15:52:09 -Mapping filter: 'springSecurityFilterChain' to: [/*]
2019-02-13 15:52:09 -Filter xssFilter was not registered (disabled)
2019-02-13 15:52:09 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-02-13 15:52:09 -Mapping filter: 'com.zhenjiu.system.filter.CorsFilter' to: [/*]
2019-02-13 15:52:09 -Mapping filter: 'remoteIpFilter' to: [/*]
2019-02-13 15:52:09 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-02-13 15:52:09 -Mapping servlet: 'statViewServlet' to [/druid/*]
2019-02-13 15:52:09 -Mapping servlet: 'dispatcherServlet' to [/]
2019-02-13 15:52:10 -{dataSource-1} inited
2019-02-13 15:52:10 -ApplicationContext registed-->org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@31fa1761: startup date [Wed Feb 13 15:52:05 CST 2019]; root of context hierarchy
2019-02-13 15:52:10 -Using default implementation for ThreadExecutor
2019-02-13 15:52:10 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-02-13 15:52:10 -Quartz Scheduler v.2.2.1 created.
2019-02-13 15:52:10 -RAMJobStore initialized.
2019-02-13 15:52:10 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-02-13 15:52:10 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-02-13 15:52:10 -Quartz scheduler version: 2.2.1
2019-02-13 15:52:10 -JobFactory set to: com.zhenjiu.common.quartz.factory.JobFactory@5fe46d52
2019-02-13 15:52:11 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.zhenjiu.common.controller.DictController.add()
2019-02-13 15:52:11 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.zhenjiu.common.utils.R com.zhenjiu.common.controller.DictController.remove(java.lang.Long)
2019-02-13 15:52:11 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.zhenjiu.common.utils.R com.zhenjiu.common.controller.DictController.remove(java.lang.Long[])
2019-02-13 15:52:11 -Mapped "{[/common/dict/update]}" onto public com.zhenjiu.common.utils.R com.zhenjiu.common.controller.DictController.update(com.zhenjiu.common.domain.DictDO)
2019-02-13 15:52:11 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.zhenjiu.common.utils.PageUtils com.zhenjiu.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-02-13 15:52:11 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.zhenjiu.common.utils.R com.zhenjiu.common.controller.DictController.save(com.zhenjiu.common.domain.DictDO)
2019-02-13 15:52:11 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.zhenjiu.common.domain.DictDO> com.zhenjiu.common.controller.DictController.listType()
2019-02-13 15:52:11 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.zhenjiu.common.domain.DictDO> com.zhenjiu.common.controller.DictController.listByType(java.lang.String)
2019-02-13 15:52:11 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.zhenjiu.common.controller.DictController.dict()
2019-02-13 15:52:11 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.zhenjiu.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-02-13 15:52:11 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.zhenjiu.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-02-13 15:52:11 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.zhenjiu.common.controller.FileController.add()
2019-02-13 15:52:11 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.zhenjiu.common.utils.R com.zhenjiu.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-02-13 15:52:11 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.zhenjiu.common.utils.R com.zhenjiu.common.controller.FileController.remove(java.lang.Long[])
2019-02-13 15:52:11 -Mapped "{[/common/sysFile/update]}" onto public com.zhenjiu.common.utils.R com.zhenjiu.common.controller.FileController.update(com.zhenjiu.common.domain.FileDO)
2019-02-13 15:52:11 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.zhenjiu.common.utils.PageUtils com.zhenjiu.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-02-13 15:52:11 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.zhenjiu.common.utils.R com.zhenjiu.common.controller.FileController.save(com.zhenjiu.common.domain.FileDO)
2019-02-13 15:52:11 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.zhenjiu.common.utils.R com.zhenjiu.common.controller.FileController.info(java.lang.Long)
2019-02-13 15:52:11 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.zhenjiu.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-02-13 15:52:11 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.zhenjiu.common.utils.R com.zhenjiu.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-02-13 15:52:11 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.zhenjiu.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-02-13 15:52:11 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.zhenjiu.common.utils.R com.zhenjiu.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-02-13 15:52:11 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.zhenjiu.common.controller.GeneratorController.list()
2019-02-13 15:52:11 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.zhenjiu.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-02-13 15:52:11 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.zhenjiu.common.controller.GeneratorController.generator()
2019-02-13 15:52:11 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.zhenjiu.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-02-13 15:52:11 -Mapped "{[/common/generator/batchCode]}" onto public void com.zhenjiu.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-02-13 15:52:11 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.zhenjiu.common.controller.JobController.add()
2019-02-13 15:52:11 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.zhenjiu.common.utils.R com.zhenjiu.common.controller.JobController.remove(java.lang.Long)
2019-02-13 15:52:11 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.zhenjiu.common.utils.R com.zhenjiu.common.controller.JobController.remove(java.lang.Long[])
2019-02-13 15:52:11 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.zhenjiu.common.utils.R com.zhenjiu.common.controller.JobController.update(com.zhenjiu.common.domain.TaskDO)
2019-02-13 15:52:11 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.zhenjiu.common.utils.PageUtils com.zhenjiu.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-02-13 15:52:11 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.zhenjiu.common.utils.R com.zhenjiu.common.controller.JobController.save(com.zhenjiu.common.domain.TaskDO)
2019-02-13 15:52:11 -Mapped "{[/common/job/info/{id}]}" onto public com.zhenjiu.common.utils.R com.zhenjiu.common.controller.JobController.info(java.lang.Long)
2019-02-13 15:52:11 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.zhenjiu.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-02-13 15:52:11 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.zhenjiu.common.controller.JobController.taskScheduleJob()
2019-02-13 15:52:11 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.zhenjiu.common.utils.R com.zhenjiu.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-02-13 15:52:11 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.zhenjiu.common.utils.R com.zhenjiu.common.controller.LogController.remove(java.lang.Long)
2019-02-13 15:52:11 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.zhenjiu.common.controller.LogController.log()
2019-02-13 15:52:11 -Mapped "{[/common/log/list],methods=[GET]}" onto com.zhenjiu.common.domain.PageDO<com.zhenjiu.common.domain.LogDO> com.zhenjiu.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-02-13 15:52:11 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.zhenjiu.common.utils.R com.zhenjiu.common.controller.LogController.batchRemove(java.lang.Long[])
2019-02-13 15:52:11 -Mapped "{[/error]}" onto public com.zhenjiu.common.utils.R com.zhenjiu.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-02-13 15:52:11 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.zhenjiu.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-02-13 15:52:11 -Mapped "{[/information/complaint/save],methods=[POST]}" onto public com.zhenjiu.common.utils.R com.zhenjiu.information.controller.ComplaintController.save(com.zhenjiu.information.domain.ComplaintDO)
2019-02-13 15:52:11 -Mapped "{[/information/complaint/getPlotPhone],methods=[POST]}" onto public com.zhenjiu.common.utils.R com.zhenjiu.information.controller.ComplaintController.getPlotPhone(java.lang.Long)
2019-02-13 15:52:11 -Mapped "{[/information/complaint],methods=[GET]}" onto java.lang.String com.zhenjiu.information.controller.ComplaintController.Complaint(org.springframework.ui.Model)
2019-02-13 15:52:11 -Mapped "{[/information/consult/editMsg],methods=[POST]}" onto java.util.Map<java.lang.String, java.lang.Object> com.zhenjiu.information.controller.ConsultController.editMsg(java.lang.Integer)
2019-02-13 15:52:11 -Mapped "{[/information/consult/msgList],methods=[GET]}" onto java.util.Map<java.lang.String, java.lang.Object> com.zhenjiu.information.controller.ConsultController.msgList(java.util.Map<java.lang.String, java.lang.Object>)
2019-02-13 15:52:11 -Mapped "{[/information/msg/queryMsgDetails],methods=[GET]}" onto java.lang.String com.zhenjiu.information.controller.MsgController.queryMsgDetails(java.lang.Long,java.lang.Long,org.springframework.ui.Model)
2019-02-13 15:52:11 -Mapped "{[/information/msg],methods=[GET]}" onto java.lang.String com.zhenjiu.information.controller.MsgController.Msg(org.springframework.ui.Model)
2019-02-13 15:52:11 -Mapped "{[/information/notice/{id}],methods=[GET]}" onto java.lang.String com.zhenjiu.information.controller.NoticeController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-02-13 15:52:11 -Mapped "{[/order/list],methods=[GET]}" onto java.util.Map<java.lang.String, java.lang.Object> com.zhenjiu.information.controller.OrderController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-02-13 15:52:11 -Mapped "{[/order/deatil],methods=[GET]}" onto java.util.Map<java.lang.String, java.lang.Object> com.zhenjiu.information.controller.OrderController.deatil(java.lang.Integer)
2019-02-13 15:52:11 -Mapped "{[/order/listById],methods=[GET]}" onto java.util.Map<java.lang.String, java.lang.Object> com.zhenjiu.information.controller.OrderController.msgList(java.util.Map<java.lang.String, java.lang.Object>)
2019-02-13 15:52:11 -Mapped "{[/register],methods=[POST]}" onto java.util.Map<java.lang.String, java.lang.String> com.zhenjiu.owneruser.controller.LoginController.register(java.lang.String,java.lang.String)
2019-02-13 15:52:11 -Mapped "{[/login],methods=[POST]}" onto java.util.Map<java.lang.String, java.lang.Object> com.zhenjiu.owneruser.controller.LoginController.login(java.lang.String,java.lang.String,java.lang.String)
2019-02-13 15:52:11 -Mapped "{[/captcha],methods=[POST]}" onto java.util.Map<java.lang.String, java.lang.String> com.zhenjiu.owneruser.controller.LoginController.captcha(java.lang.String,java.lang.String)
2019-02-13 15:52:11 -Mapped "{[/logout],methods=[GET]}" onto java.util.Map<java.lang.String, java.lang.String> com.zhenjiu.owneruser.controller.LoginController.logout()
2019-02-13 15:52:11 -Mapped "{[/owner/userInfo],methods=[GET]}" onto java.util.Map<java.lang.String, java.lang.Object> com.zhenjiu.owneruser.controller.OwnerUserController.user()
2019-02-13 15:52:11 -Mapped "{[/owner/editHeadUrl],methods=[POST]}" onto java.util.Map<java.lang.String, java.lang.Object> com.zhenjiu.owneruser.controller.OwnerUserController.editHeadUrl(com.zhenjiu.owneruser.domain.OwnerUserDO)
2019-02-13 15:52:11 -Mapped "{[/owner/editInfo],methods=[POST]}" onto java.util.Map<java.lang.String, java.lang.Object> com.zhenjiu.owneruser.controller.OwnerUserController.editInfo(com.zhenjiu.owneruser.domain.OwnerUserDO)
2019-02-13 15:52:11 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.zhenjiu.system.domain.UserOnline> com.zhenjiu.system.controller.SessionController.list()
2019-02-13 15:52:11 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.zhenjiu.common.utils.R com.zhenjiu.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-02-13 15:52:11 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.zhenjiu.system.controller.SessionController.sessionList()
2019-02-13 15:52:11 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.zhenjiu.system.controller.SessionController.online()
2019-02-13 15:52:11 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-02-13 15:52:11 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-02-13 15:52:11 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-02-13 15:52:11 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-02-13 15:52:12 -Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@31fa1761: startup date [Wed Feb 13 15:52:05 CST 2019]; root of context hierarchy
2019-02-13 15:52:12 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-02-13 15:52:12 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-02-13 15:52:12 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-02-13 15:52:12 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-02-13 15:52:12 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-02-13 15:52:13 -

Using default security password: 19fbd059-c9e4-4c0a-a47c-07a6b5600339

2019-02-13 15:52:13 -Creating filter chain: OrRequestMatcher [requestMatchers=[Ant [pattern='/css/**'], Ant [pattern='/js/**'], Ant [pattern='/images/**'], Ant [pattern='/webjars/**'], Ant [pattern='/**/favicon.ico'], Ant [pattern='/error']]], []
2019-02-13 15:52:13 -Creating filter chain: org.springframework.boot.autoconfigure.security.SpringBootWebSecurityConfiguration$ApplicationNoWebSecurityConfigurerAdapter$1@405603b6, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@3c3cd13a, org.springframework.security.web.context.SecurityContextPersistenceFilter@64544ee4, org.springframework.security.web.header.HeaderWriterFilter@398694a6, org.springframework.security.web.csrf.CsrfFilter@26d24d7a, org.springframework.security.web.authentication.logout.LogoutFilter@7fd2a67a, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@539ee811, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@30a62a5b, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@56b751b1, org.springframework.security.web.session.SessionManagementFilter@5c25daad, org.springframework.security.web.access.ExceptionTranslationFilter@2862271a]
2019-02-13 15:52:13 -Registering beans for JMX exposure on startup
2019-02-13 15:52:13 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-02-13 15:52:13 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-02-13 15:52:13 -Starting beans in phase 2147483647
2019-02-13 15:52:13 -Context refreshed
2019-02-13 15:52:13 -Found 1 custom documentation plugin(s)
2019-02-13 15:52:14 -Scanning for api listing references
2019-02-13 15:52:14 -Generating unique operation named: removeUsingPOST_1
2019-02-13 15:52:14 -Generating unique operation named: saveUsingPOST_1
2019-02-13 15:52:14 -Generating unique operation named: addUsingGET_1
2019-02-13 15:52:14 -Generating unique operation named: editUsingGET_1
2019-02-13 15:52:14 -Generating unique operation named: listUsingGET_1
2019-02-13 15:52:14 -Generating unique operation named: removeUsingPOST_2
2019-02-13 15:52:14 -Generating unique operation named: removeUsingPOST_3
2019-02-13 15:52:14 -Generating unique operation named: saveUsingPOST_2
2019-02-13 15:52:14 -Generating unique operation named: updateUsingGET_1
2019-02-13 15:52:14 -Generating unique operation named: updateUsingHEAD_1
2019-02-13 15:52:14 -Generating unique operation named: updateUsingPOST_1
2019-02-13 15:52:14 -Generating unique operation named: updateUsingPUT_1
2019-02-13 15:52:14 -Generating unique operation named: updateUsingPATCH_1
2019-02-13 15:52:14 -Generating unique operation named: updateUsingDELETE_1
2019-02-13 15:52:14 -Generating unique operation named: updateUsingOPTIONS_1
2019-02-13 15:52:14 -Generating unique operation named: updateUsingTRACE_1
2019-02-13 15:52:14 -Generating unique operation named: editUsingGET_2
2019-02-13 15:52:14 -Generating unique operation named: listUsingGET_2
2019-02-13 15:52:14 -Generating unique operation named: updateUsingPOST_2
2019-02-13 15:52:14 -Generating unique operation named: addUsingGET_2
2019-02-13 15:52:14 -Generating unique operation named: editUsingGET_3
2019-02-13 15:52:14 -Generating unique operation named: infoUsingGET_1
2019-02-13 15:52:14 -Generating unique operation named: infoUsingHEAD_1
2019-02-13 15:52:14 -Generating unique operation named: infoUsingPOST_1
2019-02-13 15:52:14 -Generating unique operation named: infoUsingPUT_1
2019-02-13 15:52:14 -Generating unique operation named: infoUsingPATCH_1
2019-02-13 15:52:14 -Generating unique operation named: infoUsingDELETE_1
2019-02-13 15:52:14 -Generating unique operation named: infoUsingOPTIONS_1
2019-02-13 15:52:14 -Generating unique operation named: infoUsingTRACE_1
2019-02-13 15:52:14 -Generating unique operation named: listUsingGET_3
2019-02-13 15:52:14 -Generating unique operation named: removeUsingPOST_4
2019-02-13 15:52:14 -Generating unique operation named: removeUsingPOST_5
2019-02-13 15:52:14 -Generating unique operation named: saveUsingPOST_3
2019-02-13 15:52:14 -Generating unique operation named: updateUsingPOST_3
2019-02-13 15:52:14 -Generating unique operation named: listUsingGET_4
2019-02-13 15:52:14 -Generating unique operation named: removeUsingPOST_6
2019-02-13 15:52:14 -Generating unique operation named: editUsingGET_4
2019-02-13 15:52:14 -Generating unique operation named: listUsingGET_5
2019-02-13 15:52:15 -Generating unique operation named: msgListUsingGET_1
2019-02-13 15:52:15 -Generating unique operation named: listUsingGET_6
2019-02-13 15:52:15 -Starting Quartz Scheduler now
2019-02-13 15:52:15 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-02-13 15:52:15 -Initializing ProtocolHandler ["http-nio-8087"]
2019-02-13 15:52:15 -Starting ProtocolHandler ["http-nio-8087"]
2019-02-13 15:52:15 -Using a shared selector for servlet write/read
2019-02-13 15:52:15 -Tomcat started on port(s): 8087 (http)
2019-02-13 15:52:15 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-02-13 15:52:15 -==> Parameters: 
2019-02-13 15:52:15 -<==      Total: 1
2019-02-13 15:52:15 -Started BootdoApplication in 11.044 seconds (JVM running for 11.567)
2019-02-13 15:52:35 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-02-13 15:52:35 -FrameworkServlet 'dispatcherServlet': initialization started
2019-02-13 15:52:35 -FrameworkServlet 'dispatcherServlet': initialization completed in 44 ms
2019-02-13 15:52:35 -Enabling session validation scheduler...
2019-02-13 15:52:35 -[THYMELEAF] INITIALIZING TEMPLATE ENGINE
2019-02-13 15:52:35 -[THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
2019-02-13 15:52:35 -[THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
2019-02-13 15:52:35 -[THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
2019-02-13 15:52:35 -[THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
2019-02-13 15:52:35 -[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF]     * HTML5
[THYMELEAF]     * XML
[THYMELEAF]     * VALIDXHTML
[THYMELEAF]     * VALIDXML
[THYMELEAF]     * XHTML
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 3]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 3]: at.pollux.thymeleaf.shiro.dialect.ShiroDialect
[THYMELEAF]     * Prefix: "shiro"
[THYMELEAF] * Dialect [3 of 3]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2019-02-13 15:52:35 -[THYMELEAF] TEMPLATE ENGINE INITIALIZED
2019-02-13 15:52:36 -No task executor bean found for async processing: no bean of type TaskExecutor and no bean named 'taskExecutor' either
2019-02-13 15:52:36 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-02-13 15:52:36 -Request method 'GET' not supported
org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'GET' not supported
	at org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.handleNoMatch(RequestMappingInfoHandlerMapping.java:207)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.lookupHandlerMethod(AbstractHandlerMethodMapping.java:374)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.getHandlerInternal(AbstractHandlerMethodMapping.java:314)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.getHandlerInternal(AbstractHandlerMethodMapping.java:61)
	at org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:352)
	at org.springframework.web.servlet.DispatcherServlet.getHandler(DispatcherServlet.java:1160)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:940)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.zhenjiu.system.filter.CorsFilter.doFilter(CorsFilter.java:38)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.zhenjiu.system.filter.CorsFilter.doFilter(CorsFilter.java:38)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:208)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:347)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:263)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-02-13 15:52:36 -==> Parameters: null, null, error(String), null, http://localhost:8087/login;JSESSIONID=e40eea3e-a73d-4b77-b369-62f32e3ee580(String), org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'GET' not supported(String), null, 2019-02-13 15:52:36.891(Timestamp)
2019-02-13 15:52:36 -<==    Updates: 1
2019-02-13 16:51:31 -Starting BootdoApplication on DESKTOP-8PLG398 with PID 372 (D:\zhenjiu\dingshi-portal\target\classes started by EDZ in D:\zhenjiu\dingshi-portal)
2019-02-13 16:51:31 -Running with Spring Boot v1.5.9.RELEASE, Spring v4.3.13.RELEASE
2019-02-13 16:51:31 -The following profiles are active: dev
2019-02-13 16:51:31 -Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@31fa1761: startup date [Wed Feb 13 16:51:31 CST 2019]; root of context hierarchy
2019-02-13 16:51:31 -HV000001: Hibernate Validator 5.3.6.Final
2019-02-13 16:51:33 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-02-13 16:51:33 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$3dbe0e8c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-02-13 16:51:34 -Bean 'shiroConfig' of type [com.zhenjiu.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$fe094c1b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-02-13 16:51:34 -Bean 'userRealm' of type [com.zhenjiu.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-02-13 16:51:34 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-02-13 16:51:34 -Cache with name 'com.zhenjiu.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-02-13 16:51:34 -Added EhCache named [com.zhenjiu.system.shiro.UserRealm.authorizationCache]
2019-02-13 16:51:34 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-02-13 16:51:34 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-02-13 16:51:34 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-02-13 16:51:34 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-02-13 16:51:35 -Tomcat initialized with port(s): 8087 (http)
2019-02-13 16:51:35 -Starting service [Tomcat]
2019-02-13 16:51:35 -Starting Servlet Engine: Apache Tomcat/8.5.23
2019-02-13 16:51:35 -Initializing Spring embedded WebApplicationContext
2019-02-13 16:51:35 -Root WebApplicationContext: initialization completed in 3838 ms
2019-02-13 16:51:35 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-02-13 16:51:35 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-02-13 16:51:35 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-02-13 16:51:35 -Mapping filter: 'requestContextFilter' to: [/*]
2019-02-13 16:51:35 -Mapping filter: 'springSecurityFilterChain' to: [/*]
2019-02-13 16:51:35 -Filter xssFilter was not registered (disabled)
2019-02-13 16:51:35 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-02-13 16:51:35 -Mapping filter: 'com.zhenjiu.system.filter.CorsFilter' to: [/*]
2019-02-13 16:51:35 -Mapping filter: 'remoteIpFilter' to: [/*]
2019-02-13 16:51:35 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-02-13 16:51:35 -Mapping servlet: 'statViewServlet' to [/druid/*]
2019-02-13 16:51:35 -Mapping servlet: 'dispatcherServlet' to [/]
2019-02-13 16:51:36 -{dataSource-1} inited
2019-02-13 16:51:37 -ApplicationContext registed-->org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@31fa1761: startup date [Wed Feb 13 16:51:31 CST 2019]; root of context hierarchy
2019-02-13 16:51:37 -Using default implementation for ThreadExecutor
2019-02-13 16:51:37 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-02-13 16:51:37 -Quartz Scheduler v.2.2.1 created.
2019-02-13 16:51:37 -RAMJobStore initialized.
2019-02-13 16:51:37 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-02-13 16:51:37 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-02-13 16:51:37 -Quartz scheduler version: 2.2.1
2019-02-13 16:51:37 -JobFactory set to: com.zhenjiu.common.quartz.factory.JobFactory@230232b0
2019-02-13 16:51:38 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.zhenjiu.common.controller.DictController.add()
2019-02-13 16:51:38 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.zhenjiu.common.utils.R com.zhenjiu.common.controller.DictController.remove(java.lang.Long)
2019-02-13 16:51:38 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.zhenjiu.common.utils.R com.zhenjiu.common.controller.DictController.remove(java.lang.Long[])
2019-02-13 16:51:38 -Mapped "{[/common/dict/update]}" onto public com.zhenjiu.common.utils.R com.zhenjiu.common.controller.DictController.update(com.zhenjiu.common.domain.DictDO)
2019-02-13 16:51:38 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.zhenjiu.common.utils.PageUtils com.zhenjiu.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-02-13 16:51:38 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.zhenjiu.common.utils.R com.zhenjiu.common.controller.DictController.save(com.zhenjiu.common.domain.DictDO)
2019-02-13 16:51:38 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.zhenjiu.common.domain.DictDO> com.zhenjiu.common.controller.DictController.listType()
2019-02-13 16:51:38 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.zhenjiu.common.controller.DictController.dict()
2019-02-13 16:51:38 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.zhenjiu.common.domain.DictDO> com.zhenjiu.common.controller.DictController.listByType(java.lang.String)
2019-02-13 16:51:38 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.zhenjiu.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-02-13 16:51:38 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.zhenjiu.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-02-13 16:51:38 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.zhenjiu.common.controller.FileController.add()
2019-02-13 16:51:38 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.zhenjiu.common.utils.R com.zhenjiu.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-02-13 16:51:38 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.zhenjiu.common.utils.R com.zhenjiu.common.controller.FileController.remove(java.lang.Long[])
2019-02-13 16:51:38 -Mapped "{[/common/sysFile/update]}" onto public com.zhenjiu.common.utils.R com.zhenjiu.common.controller.FileController.update(com.zhenjiu.common.domain.FileDO)
2019-02-13 16:51:38 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.zhenjiu.common.utils.PageUtils com.zhenjiu.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-02-13 16:51:38 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.zhenjiu.common.utils.R com.zhenjiu.common.controller.FileController.save(com.zhenjiu.common.domain.FileDO)
2019-02-13 16:51:38 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.zhenjiu.common.utils.R com.zhenjiu.common.controller.FileController.info(java.lang.Long)
2019-02-13 16:51:38 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.zhenjiu.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-02-13 16:51:38 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.zhenjiu.common.utils.R com.zhenjiu.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-02-13 16:51:38 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.zhenjiu.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-02-13 16:51:38 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.zhenjiu.common.utils.R com.zhenjiu.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-02-13 16:51:38 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.zhenjiu.common.controller.GeneratorController.list()
2019-02-13 16:51:38 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.zhenjiu.common.controller.GeneratorController.generator()
2019-02-13 16:51:38 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.zhenjiu.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-02-13 16:51:38 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.zhenjiu.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-02-13 16:51:38 -Mapped "{[/common/generator/batchCode]}" onto public void com.zhenjiu.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-02-13 16:51:38 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.zhenjiu.common.controller.JobController.add()
2019-02-13 16:51:38 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.zhenjiu.common.utils.R com.zhenjiu.common.controller.JobController.remove(java.lang.Long)
2019-02-13 16:51:38 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.zhenjiu.common.utils.R com.zhenjiu.common.controller.JobController.remove(java.lang.Long[])
2019-02-13 16:51:38 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.zhenjiu.common.utils.R com.zhenjiu.common.controller.JobController.update(com.zhenjiu.common.domain.TaskDO)
2019-02-13 16:51:38 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.zhenjiu.common.utils.PageUtils com.zhenjiu.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-02-13 16:51:38 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.zhenjiu.common.utils.R com.zhenjiu.common.controller.JobController.save(com.zhenjiu.common.domain.TaskDO)
2019-02-13 16:51:38 -Mapped "{[/common/job/info/{id}]}" onto public com.zhenjiu.common.utils.R com.zhenjiu.common.controller.JobController.info(java.lang.Long)
2019-02-13 16:51:38 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.zhenjiu.common.utils.R com.zhenjiu.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-02-13 16:51:38 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.zhenjiu.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-02-13 16:51:38 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.zhenjiu.common.controller.JobController.taskScheduleJob()
2019-02-13 16:51:38 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.zhenjiu.common.utils.R com.zhenjiu.common.controller.LogController.remove(java.lang.Long)
2019-02-13 16:51:38 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.zhenjiu.common.controller.LogController.log()
2019-02-13 16:51:38 -Mapped "{[/common/log/list],methods=[GET]}" onto com.zhenjiu.common.domain.PageDO<com.zhenjiu.common.domain.LogDO> com.zhenjiu.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-02-13 16:51:38 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.zhenjiu.common.utils.R com.zhenjiu.common.controller.LogController.batchRemove(java.lang.Long[])
2019-02-13 16:51:38 -Mapped "{[/error]}" onto public com.zhenjiu.common.utils.R com.zhenjiu.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-02-13 16:51:38 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.zhenjiu.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-02-13 16:51:38 -Mapped "{[/information/complaint/save],methods=[POST]}" onto public com.zhenjiu.common.utils.R com.zhenjiu.information.controller.ComplaintController.save(com.zhenjiu.information.domain.ComplaintDO)
2019-02-13 16:51:38 -Mapped "{[/information/complaint],methods=[GET]}" onto java.lang.String com.zhenjiu.information.controller.ComplaintController.Complaint(org.springframework.ui.Model)
2019-02-13 16:51:38 -Mapped "{[/information/complaint/getPlotPhone],methods=[POST]}" onto public com.zhenjiu.common.utils.R com.zhenjiu.information.controller.ComplaintController.getPlotPhone(java.lang.Long)
2019-02-13 16:51:38 -Mapped "{[/information/consult/msgList],methods=[GET]}" onto java.util.Map<java.lang.String, java.lang.Object> com.zhenjiu.information.controller.ConsultController.msgList(java.util.Map<java.lang.String, java.lang.Object>)
2019-02-13 16:51:38 -Mapped "{[/information/consult/editMsg],methods=[POST]}" onto java.util.Map<java.lang.String, java.lang.Object> com.zhenjiu.information.controller.ConsultController.editMsg(java.lang.Integer)
2019-02-13 16:51:38 -Mapped "{[/information/msg],methods=[GET]}" onto java.lang.String com.zhenjiu.information.controller.MsgController.Msg(org.springframework.ui.Model)
2019-02-13 16:51:38 -Mapped "{[/information/msg/queryMsgDetails],methods=[GET]}" onto java.lang.String com.zhenjiu.information.controller.MsgController.queryMsgDetails(java.lang.Long,java.lang.Long,org.springframework.ui.Model)
2019-02-13 16:51:38 -Mapped "{[/information/notice/{id}],methods=[GET]}" onto java.lang.String com.zhenjiu.information.controller.NoticeController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-02-13 16:51:38 -Mapped "{[/order/list],methods=[GET]}" onto java.util.Map<java.lang.String, java.lang.Object> com.zhenjiu.information.controller.OrderController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-02-13 16:51:38 -Mapped "{[/order/listById],methods=[GET]}" onto java.util.Map<java.lang.String, java.lang.Object> com.zhenjiu.information.controller.OrderController.msgList(java.util.Map<java.lang.String, java.lang.Object>)
2019-02-13 16:51:38 -Mapped "{[/order/deatil],methods=[GET]}" onto java.util.Map<java.lang.String, java.lang.Object> com.zhenjiu.information.controller.OrderController.deatil(java.lang.Integer)
2019-02-13 16:51:38 -Mapped "{[/register],methods=[POST]}" onto java.util.Map<java.lang.String, java.lang.String> com.zhenjiu.owneruser.controller.LoginController.register(java.lang.String,java.lang.String)
2019-02-13 16:51:38 -Mapped "{[/login],methods=[POST]}" onto java.util.Map<java.lang.String, java.lang.Object> com.zhenjiu.owneruser.controller.LoginController.login(java.lang.String,java.lang.String,java.lang.String)
2019-02-13 16:51:38 -Mapped "{[/captcha],methods=[POST]}" onto java.util.Map<java.lang.String, java.lang.String> com.zhenjiu.owneruser.controller.LoginController.captcha(java.lang.String,java.lang.String)
2019-02-13 16:51:38 -Mapped "{[/logout],methods=[GET]}" onto java.util.Map<java.lang.String, java.lang.String> com.zhenjiu.owneruser.controller.LoginController.logout()
2019-02-13 16:51:38 -Mapped "{[/owner/userInfo],methods=[GET]}" onto java.util.Map<java.lang.String, java.lang.Object> com.zhenjiu.owneruser.controller.OwnerUserController.user()
2019-02-13 16:51:38 -Mapped "{[/owner/editInfo],methods=[POST]}" onto java.util.Map<java.lang.String, java.lang.Object> com.zhenjiu.owneruser.controller.OwnerUserController.editInfo(com.zhenjiu.owneruser.domain.OwnerUserDO)
2019-02-13 16:51:38 -Mapped "{[/owner/editHeadUrl],methods=[POST]}" onto java.util.Map<java.lang.String, java.lang.Object> com.zhenjiu.owneruser.controller.OwnerUserController.editHeadUrl(com.zhenjiu.owneruser.domain.OwnerUserDO)
2019-02-13 16:51:38 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.zhenjiu.system.domain.UserOnline> com.zhenjiu.system.controller.SessionController.list()
2019-02-13 16:51:38 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.zhenjiu.system.controller.SessionController.online()
2019-02-13 16:51:38 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.zhenjiu.system.controller.SessionController.sessionList()
2019-02-13 16:51:38 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.zhenjiu.common.utils.R com.zhenjiu.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-02-13 16:51:38 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-02-13 16:51:38 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-02-13 16:51:38 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-02-13 16:51:38 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-02-13 16:51:38 -Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@31fa1761: startup date [Wed Feb 13 16:51:31 CST 2019]; root of context hierarchy
2019-02-13 16:51:38 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-02-13 16:51:38 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-02-13 16:51:38 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-02-13 16:51:38 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-02-13 16:51:38 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-02-13 16:51:39 -

Using default security password: 7d07c355-4c62-45a0-832e-63bb26c838e1

2019-02-13 16:51:39 -Creating filter chain: OrRequestMatcher [requestMatchers=[Ant [pattern='/css/**'], Ant [pattern='/js/**'], Ant [pattern='/images/**'], Ant [pattern='/webjars/**'], Ant [pattern='/**/favicon.ico'], Ant [pattern='/error']]], []
2019-02-13 16:51:39 -Creating filter chain: org.springframework.boot.autoconfigure.security.SpringBootWebSecurityConfiguration$ApplicationNoWebSecurityConfigurerAdapter$1@252d8df6, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@36638b59, org.springframework.security.web.context.SecurityContextPersistenceFilter@5cb8580, org.springframework.security.web.header.HeaderWriterFilter@1e7cfd49, org.springframework.security.web.csrf.CsrfFilter@2419fe6f, org.springframework.security.web.authentication.logout.LogoutFilter@87220f1, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@56b751b1, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@4de158ca, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@2f8f40cc, org.springframework.security.web.session.SessionManagementFilter@30133a11, org.springframework.security.web.access.ExceptionTranslationFilter@539ee811]
2019-02-13 16:51:40 -Registering beans for JMX exposure on startup
2019-02-13 16:51:40 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-02-13 16:51:40 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-02-13 16:51:40 -Starting beans in phase 2147483647
2019-02-13 16:51:40 -Context refreshed
2019-02-13 16:51:40 -Found 1 custom documentation plugin(s)
2019-02-13 16:51:40 -Scanning for api listing references
2019-02-13 16:51:40 -Generating unique operation named: removeUsingPOST_1
2019-02-13 16:51:40 -Generating unique operation named: saveUsingPOST_1
2019-02-13 16:51:40 -Generating unique operation named: addUsingGET_1
2019-02-13 16:51:40 -Generating unique operation named: editUsingGET_1
2019-02-13 16:51:40 -Generating unique operation named: listUsingGET_1
2019-02-13 16:51:40 -Generating unique operation named: removeUsingPOST_2
2019-02-13 16:51:40 -Generating unique operation named: removeUsingPOST_3
2019-02-13 16:51:40 -Generating unique operation named: saveUsingPOST_2
2019-02-13 16:51:40 -Generating unique operation named: updateUsingGET_1
2019-02-13 16:51:40 -Generating unique operation named: updateUsingHEAD_1
2019-02-13 16:51:40 -Generating unique operation named: updateUsingPOST_1
2019-02-13 16:51:40 -Generating unique operation named: updateUsingPUT_1
2019-02-13 16:51:40 -Generating unique operation named: updateUsingPATCH_1
2019-02-13 16:51:40 -Generating unique operation named: updateUsingDELETE_1
2019-02-13 16:51:40 -Generating unique operation named: updateUsingOPTIONS_1
2019-02-13 16:51:40 -Generating unique operation named: updateUsingTRACE_1
2019-02-13 16:51:40 -Generating unique operation named: editUsingGET_2
2019-02-13 16:51:40 -Generating unique operation named: listUsingGET_2
2019-02-13 16:51:40 -Generating unique operation named: updateUsingPOST_2
2019-02-13 16:51:40 -Generating unique operation named: addUsingGET_2
2019-02-13 16:51:40 -Generating unique operation named: editUsingGET_3
2019-02-13 16:51:40 -Generating unique operation named: infoUsingGET_1
2019-02-13 16:51:40 -Generating unique operation named: infoUsingHEAD_1
2019-02-13 16:51:40 -Generating unique operation named: infoUsingPOST_1
2019-02-13 16:51:40 -Generating unique operation named: infoUsingPUT_1
2019-02-13 16:51:40 -Generating unique operation named: infoUsingPATCH_1
2019-02-13 16:51:40 -Generating unique operation named: infoUsingDELETE_1
2019-02-13 16:51:40 -Generating unique operation named: infoUsingOPTIONS_1
2019-02-13 16:51:40 -Generating unique operation named: infoUsingTRACE_1
2019-02-13 16:51:40 -Generating unique operation named: listUsingGET_3
2019-02-13 16:51:40 -Generating unique operation named: removeUsingPOST_4
2019-02-13 16:51:40 -Generating unique operation named: removeUsingPOST_5
2019-02-13 16:51:40 -Generating unique operation named: saveUsingPOST_3
2019-02-13 16:51:40 -Generating unique operation named: updateUsingPOST_3
2019-02-13 16:51:40 -Generating unique operation named: listUsingGET_4
2019-02-13 16:51:40 -Generating unique operation named: removeUsingPOST_6
2019-02-13 16:51:40 -Generating unique operation named: editUsingGET_4
2019-02-13 16:51:40 -Generating unique operation named: listUsingGET_5
2019-02-13 16:51:40 -Generating unique operation named: msgListUsingGET_1
2019-02-13 16:51:41 -Generating unique operation named: listUsingGET_6
2019-02-13 16:51:41 -Starting Quartz Scheduler now
2019-02-13 16:51:41 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-02-13 16:51:41 -Initializing ProtocolHandler ["http-nio-8087"]
2019-02-13 16:51:41 -Starting ProtocolHandler ["http-nio-8087"]
2019-02-13 16:51:41 -Using a shared selector for servlet write/read
2019-02-13 16:51:41 -Tomcat started on port(s): 8087 (http)
2019-02-13 16:51:41 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-02-13 16:51:41 -==> Parameters: 
2019-02-13 16:51:41 -<==      Total: 1
2019-02-13 16:51:41 -Started BootdoApplication in 10.464 seconds (JVM running for 10.977)
2019-02-13 19:46:37 -Starting BootdoApplication on DESKTOP-8PLG398 with PID 13556 (E:\ZHENJIU\zhenjiu-portal\target\classes started by EDZ in E:\ZHENJIU\zhenjiu-portal)
2019-02-13 19:46:37 -Running with Spring Boot v1.5.9.RELEASE, Spring v4.3.13.RELEASE
2019-02-13 19:46:37 -The following profiles are active: dev
2019-02-13 19:46:37 -Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@31fa1761: startup date [Wed Feb 13 19:46:37 CST 2019]; root of context hierarchy
2019-02-13 19:46:37 -HV000001: Hibernate Validator 5.3.6.Final
2019-02-13 19:46:38 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-02-13 19:46:39 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$1428e98e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-02-13 19:46:39 -Bean 'shiroConfig' of type [com.zhenjiu.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$d474271d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-02-13 19:46:42 -Bean 'userRealm' of type [com.zhenjiu.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-02-13 19:46:42 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-02-13 19:46:42 -Cache with name 'com.zhenjiu.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-02-13 19:46:42 -Added EhCache named [com.zhenjiu.system.shiro.UserRealm.authorizationCache]
2019-02-13 19:46:42 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-02-13 19:46:42 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-02-13 19:46:42 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-02-13 19:46:42 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-02-13 19:46:42 -Tomcat initialized with port(s): 8087 (http)
2019-02-13 19:46:42 -Starting service [Tomcat]
2019-02-13 19:46:42 -Starting Servlet Engine: Apache Tomcat/8.5.23
2019-02-13 19:46:42 -Initializing Spring embedded WebApplicationContext
2019-02-13 19:46:42 -Root WebApplicationContext: initialization completed in 5121 ms
2019-02-13 19:46:43 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-02-13 19:46:43 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-02-13 19:46:43 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-02-13 19:46:43 -Mapping filter: 'requestContextFilter' to: [/*]
2019-02-13 19:46:43 -Mapping filter: 'springSecurityFilterChain' to: [/*]
2019-02-13 19:46:43 -Filter xssFilter was not registered (disabled)
2019-02-13 19:46:43 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-02-13 19:46:43 -Mapping filter: 'com.zhenjiu.system.filter.CorsFilter' to: [/*]
2019-02-13 19:46:43 -Mapping filter: 'remoteIpFilter' to: [/*]
2019-02-13 19:46:43 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-02-13 19:46:43 -Mapping servlet: 'statViewServlet' to [/druid/*]
2019-02-13 19:46:43 -Mapping servlet: 'dispatcherServlet' to [/]
2019-02-13 19:46:43 -{dataSource-1} inited
2019-02-13 19:46:44 -ApplicationContext registed-->org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@31fa1761: startup date [Wed Feb 13 19:46:37 CST 2019]; root of context hierarchy
2019-02-13 19:46:44 -Using default implementation for ThreadExecutor
2019-02-13 19:46:44 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-02-13 19:46:44 -Quartz Scheduler v.2.2.1 created.
2019-02-13 19:46:44 -RAMJobStore initialized.
2019-02-13 19:46:44 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-02-13 19:46:44 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-02-13 19:46:44 -Quartz scheduler version: 2.2.1
2019-02-13 19:46:44 -JobFactory set to: com.zhenjiu.common.quartz.factory.JobFactory@5fe46d52
2019-02-13 19:46:45 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.zhenjiu.common.controller.DictController.add()
2019-02-13 19:46:45 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.zhenjiu.common.utils.R com.zhenjiu.common.controller.DictController.remove(java.lang.Long)
2019-02-13 19:46:45 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.zhenjiu.common.utils.R com.zhenjiu.common.controller.DictController.remove(java.lang.Long[])
2019-02-13 19:46:45 -Mapped "{[/common/dict/update]}" onto public com.zhenjiu.common.utils.R com.zhenjiu.common.controller.DictController.update(com.zhenjiu.common.domain.DictDO)
2019-02-13 19:46:45 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.zhenjiu.common.utils.PageUtils com.zhenjiu.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-02-13 19:46:45 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.zhenjiu.common.utils.R com.zhenjiu.common.controller.DictController.save(com.zhenjiu.common.domain.DictDO)
2019-02-13 19:46:45 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.zhenjiu.common.domain.DictDO> com.zhenjiu.common.controller.DictController.listType()
2019-02-13 19:46:45 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.zhenjiu.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-02-13 19:46:45 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.zhenjiu.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-02-13 19:46:45 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.zhenjiu.common.domain.DictDO> com.zhenjiu.common.controller.DictController.listByType(java.lang.String)
2019-02-13 19:46:45 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.zhenjiu.common.controller.DictController.dict()
2019-02-13 19:46:45 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.zhenjiu.common.controller.FileController.add()
2019-02-13 19:46:45 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.zhenjiu.common.utils.R com.zhenjiu.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-02-13 19:46:45 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.zhenjiu.common.utils.R com.zhenjiu.common.controller.FileController.remove(java.lang.Long[])
2019-02-13 19:46:45 -Mapped "{[/common/sysFile/update]}" onto public com.zhenjiu.common.utils.R com.zhenjiu.common.controller.FileController.update(com.zhenjiu.common.domain.FileDO)
2019-02-13 19:46:45 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.zhenjiu.common.utils.PageUtils com.zhenjiu.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-02-13 19:46:45 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.zhenjiu.common.utils.R com.zhenjiu.common.controller.FileController.save(com.zhenjiu.common.domain.FileDO)
2019-02-13 19:46:45 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.zhenjiu.common.utils.R com.zhenjiu.common.controller.FileController.info(java.lang.Long)
2019-02-13 19:46:45 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.zhenjiu.common.utils.R com.zhenjiu.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-02-13 19:46:45 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.zhenjiu.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-02-13 19:46:45 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.zhenjiu.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-02-13 19:46:45 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.zhenjiu.common.utils.R com.zhenjiu.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-02-13 19:46:45 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.zhenjiu.common.controller.GeneratorController.list()
2019-02-13 19:46:45 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.zhenjiu.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-02-13 19:46:45 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.zhenjiu.common.controller.GeneratorController.generator()
2019-02-13 19:46:45 -Mapped "{[/common/generator/batchCode]}" onto public void com.zhenjiu.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-02-13 19:46:45 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.zhenjiu.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-02-13 19:46:45 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.zhenjiu.common.controller.JobController.add()
2019-02-13 19:46:45 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.zhenjiu.common.utils.R com.zhenjiu.common.controller.JobController.remove(java.lang.Long)
2019-02-13 19:46:45 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.zhenjiu.common.utils.R com.zhenjiu.common.controller.JobController.remove(java.lang.Long[])
2019-02-13 19:46:45 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.zhenjiu.common.utils.R com.zhenjiu.common.controller.JobController.update(com.zhenjiu.common.domain.TaskDO)
2019-02-13 19:46:45 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.zhenjiu.common.utils.PageUtils com.zhenjiu.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-02-13 19:46:45 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.zhenjiu.common.utils.R com.zhenjiu.common.controller.JobController.save(com.zhenjiu.common.domain.TaskDO)
2019-02-13 19:46:45 -Mapped "{[/common/job/info/{id}]}" onto public com.zhenjiu.common.utils.R com.zhenjiu.common.controller.JobController.info(java.lang.Long)
2019-02-13 19:46:45 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.zhenjiu.common.utils.R com.zhenjiu.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-02-13 19:46:45 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.zhenjiu.common.controller.JobController.taskScheduleJob()
2019-02-13 19:46:45 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.zhenjiu.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-02-13 19:46:45 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.zhenjiu.common.utils.R com.zhenjiu.common.controller.LogController.remove(java.lang.Long)
2019-02-13 19:46:45 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.zhenjiu.common.controller.LogController.log()
2019-02-13 19:46:45 -Mapped "{[/common/log/list],methods=[GET]}" onto com.zhenjiu.common.domain.PageDO<com.zhenjiu.common.domain.LogDO> com.zhenjiu.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-02-13 19:46:45 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.zhenjiu.common.utils.R com.zhenjiu.common.controller.LogController.batchRemove(java.lang.Long[])
2019-02-13 19:46:45 -Mapped "{[/error]}" onto public com.zhenjiu.common.utils.R com.zhenjiu.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-02-13 19:46:45 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.zhenjiu.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-02-13 19:46:45 -Mapped "{[/information/complaint/save],methods=[POST]}" onto public com.zhenjiu.common.utils.R com.zhenjiu.information.controller.ComplaintController.save(com.zhenjiu.information.domain.ComplaintDO)
2019-02-13 19:46:45 -Mapped "{[/information/complaint],methods=[GET]}" onto java.lang.String com.zhenjiu.information.controller.ComplaintController.Complaint(org.springframework.ui.Model)
2019-02-13 19:46:45 -Mapped "{[/information/complaint/getPlotPhone],methods=[POST]}" onto public com.zhenjiu.common.utils.R com.zhenjiu.information.controller.ComplaintController.getPlotPhone(java.lang.Long)
2019-02-13 19:46:45 -Mapped "{[/information/consult/editMsg],methods=[POST]}" onto java.util.Map<java.lang.String, java.lang.Object> com.zhenjiu.information.controller.ConsultController.editMsg(java.lang.Integer)
2019-02-13 19:46:45 -Mapped "{[/information/consult/msgList],methods=[GET]}" onto java.util.Map<java.lang.String, java.lang.Object> com.zhenjiu.information.controller.ConsultController.msgList(java.util.Map<java.lang.String, java.lang.Object>)
2019-02-13 19:46:45 -Mapped "{[/information/msg],methods=[GET]}" onto java.lang.String com.zhenjiu.information.controller.MsgController.Msg(org.springframework.ui.Model)
2019-02-13 19:46:45 -Mapped "{[/information/msg/queryMsgDetails],methods=[GET]}" onto java.lang.String com.zhenjiu.information.controller.MsgController.queryMsgDetails(java.lang.Long,java.lang.Long,org.springframework.ui.Model)
2019-02-13 19:46:45 -Mapped "{[/information/notice/{id}],methods=[GET]}" onto java.lang.String com.zhenjiu.information.controller.NoticeController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-02-13 19:46:45 -Mapped "{[/order/list],methods=[GET]}" onto java.util.Map<java.lang.String, java.lang.Object> com.zhenjiu.information.controller.OrderController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-02-13 19:46:45 -Mapped "{[/order/deatil],methods=[GET]}" onto java.util.Map<java.lang.String, java.lang.Object> com.zhenjiu.information.controller.OrderController.deatil(java.lang.Integer)
2019-02-13 19:46:45 -Mapped "{[/order/listById],methods=[GET]}" onto java.util.Map<java.lang.String, java.lang.Object> com.zhenjiu.information.controller.OrderController.msgList(java.util.Map<java.lang.String, java.lang.Object>)
2019-02-13 19:46:45 -Mapped "{[/register],methods=[POST]}" onto java.util.Map<java.lang.String, java.lang.String> com.zhenjiu.owneruser.controller.LoginController.register(java.lang.String,java.lang.String)
2019-02-13 19:46:45 -Mapped "{[/login],methods=[POST]}" onto java.util.Map<java.lang.String, java.lang.Object> com.zhenjiu.owneruser.controller.LoginController.login(java.lang.String,java.lang.String,java.lang.String)
2019-02-13 19:46:45 -Mapped "{[/captcha],methods=[POST]}" onto java.util.Map<java.lang.String, java.lang.String> com.zhenjiu.owneruser.controller.LoginController.captcha(java.lang.String,java.lang.String)
2019-02-13 19:46:45 -Mapped "{[/logout],methods=[GET]}" onto java.util.Map<java.lang.String, java.lang.String> com.zhenjiu.owneruser.controller.LoginController.logout()
2019-02-13 19:46:45 -Mapped "{[/owner/editInfo],methods=[POST]}" onto java.util.Map<java.lang.String, java.lang.Object> com.zhenjiu.owneruser.controller.OwnerUserController.editInfo(com.zhenjiu.owneruser.domain.OwnerUserDO)
2019-02-13 19:46:45 -Mapped "{[/owner/editHeadUrl],methods=[POST]}" onto java.util.Map<java.lang.String, java.lang.Object> com.zhenjiu.owneruser.controller.OwnerUserController.editHeadUrl(com.zhenjiu.owneruser.domain.OwnerUserDO)
2019-02-13 19:46:45 -Mapped "{[/owner/userInfo],methods=[GET]}" onto java.util.Map<java.lang.String, java.lang.Object> com.zhenjiu.owneruser.controller.OwnerUserController.user()
2019-02-13 19:46:45 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.zhenjiu.system.domain.UserOnline> com.zhenjiu.system.controller.SessionController.list()
2019-02-13 19:46:45 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.zhenjiu.system.controller.SessionController.sessionList()
2019-02-13 19:46:45 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.zhenjiu.common.utils.R com.zhenjiu.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-02-13 19:46:45 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.zhenjiu.system.controller.SessionController.online()
2019-02-13 19:46:45 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-02-13 19:46:45 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-02-13 19:46:45 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-02-13 19:46:45 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-02-13 19:46:45 -Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@31fa1761: startup date [Wed Feb 13 19:46:37 CST 2019]; root of context hierarchy
2019-02-13 19:46:46 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-02-13 19:46:46 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-02-13 19:46:46 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-02-13 19:46:46 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-02-13 19:46:46 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-02-13 19:46:47 -

Using default security password: fdebf260-6359-4dfc-8d4b-c85a32452966

2019-02-13 19:46:47 -Creating filter chain: OrRequestMatcher [requestMatchers=[Ant [pattern='/css/**'], Ant [pattern='/js/**'], Ant [pattern='/images/**'], Ant [pattern='/webjars/**'], Ant [pattern='/**/favicon.ico'], Ant [pattern='/error']]], []
2019-02-13 19:46:47 -Creating filter chain: org.springframework.boot.autoconfigure.security.SpringBootWebSecurityConfiguration$ApplicationNoWebSecurityConfigurerAdapter$1@405603b6, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@3c3cd13a, org.springframework.security.web.context.SecurityContextPersistenceFilter@64544ee4, org.springframework.security.web.header.HeaderWriterFilter@398694a6, org.springframework.security.web.csrf.CsrfFilter@26d24d7a, org.springframework.security.web.authentication.logout.LogoutFilter@7fd2a67a, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@539ee811, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@30a62a5b, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@56b751b1, org.springframework.security.web.session.SessionManagementFilter@5c25daad, org.springframework.security.web.access.ExceptionTranslationFilter@2862271a]
2019-02-13 19:46:47 -Registering beans for JMX exposure on startup
2019-02-13 19:46:47 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-02-13 19:46:47 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-02-13 19:46:47 -Starting beans in phase 2147483647
2019-02-13 19:46:47 -Context refreshed
2019-02-13 19:46:47 -Found 1 custom documentation plugin(s)
2019-02-13 19:46:47 -Scanning for api listing references
2019-02-13 19:46:47 -Generating unique operation named: removeUsingPOST_1
2019-02-13 19:46:47 -Generating unique operation named: saveUsingPOST_1
2019-02-13 19:46:47 -Generating unique operation named: addUsingGET_1
2019-02-13 19:46:47 -Generating unique operation named: editUsingGET_1
2019-02-13 19:46:47 -Generating unique operation named: listUsingGET_1
2019-02-13 19:46:47 -Generating unique operation named: removeUsingPOST_2
2019-02-13 19:46:47 -Generating unique operation named: removeUsingPOST_3
2019-02-13 19:46:47 -Generating unique operation named: saveUsingPOST_2
2019-02-13 19:46:47 -Generating unique operation named: updateUsingGET_1
2019-02-13 19:46:47 -Generating unique operation named: updateUsingHEAD_1
2019-02-13 19:46:47 -Generating unique operation named: updateUsingPOST_1
2019-02-13 19:46:47 -Generating unique operation named: updateUsingPUT_1
2019-02-13 19:46:47 -Generating unique operation named: updateUsingPATCH_1
2019-02-13 19:46:47 -Generating unique operation named: updateUsingDELETE_1
2019-02-13 19:46:47 -Generating unique operation named: updateUsingOPTIONS_1
2019-02-13 19:46:48 -Generating unique operation named: updateUsingTRACE_1
2019-02-13 19:46:48 -Generating unique operation named: editUsingGET_2
2019-02-13 19:46:48 -Generating unique operation named: listUsingGET_2
2019-02-13 19:46:48 -Generating unique operation named: updateUsingPOST_2
2019-02-13 19:46:48 -Generating unique operation named: addUsingGET_2
2019-02-13 19:46:48 -Generating unique operation named: editUsingGET_3
2019-02-13 19:46:48 -Generating unique operation named: infoUsingGET_1
2019-02-13 19:46:48 -Generating unique operation named: infoUsingHEAD_1
2019-02-13 19:46:48 -Generating unique operation named: infoUsingPOST_1
2019-02-13 19:46:48 -Generating unique operation named: infoUsingPUT_1
2019-02-13 19:46:48 -Generating unique operation named: infoUsingPATCH_1
2019-02-13 19:46:48 -Generating unique operation named: infoUsingDELETE_1
2019-02-13 19:46:48 -Generating unique operation named: infoUsingOPTIONS_1
2019-02-13 19:46:48 -Generating unique operation named: infoUsingTRACE_1
2019-02-13 19:46:48 -Generating unique operation named: listUsingGET_3
2019-02-13 19:46:48 -Generating unique operation named: removeUsingPOST_4
2019-02-13 19:46:48 -Generating unique operation named: removeUsingPOST_5
2019-02-13 19:46:48 -Generating unique operation named: saveUsingPOST_3
2019-02-13 19:46:48 -Generating unique operation named: updateUsingPOST_3
2019-02-13 19:46:48 -Generating unique operation named: listUsingGET_4
2019-02-13 19:46:48 -Generating unique operation named: removeUsingPOST_6
2019-02-13 19:46:48 -Generating unique operation named: editUsingGET_4
2019-02-13 19:46:48 -Generating unique operation named: listUsingGET_5
2019-02-13 19:46:48 -Generating unique operation named: msgListUsingGET_1
2019-02-13 19:46:48 -Generating unique operation named: listUsingGET_6
2019-02-13 19:46:48 -Starting Quartz Scheduler now
2019-02-13 19:46:48 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-02-13 19:46:48 -Initializing ProtocolHandler ["http-nio-8087"]
2019-02-13 19:46:48 -Starting ProtocolHandler ["http-nio-8087"]
2019-02-13 19:46:48 -Using a shared selector for servlet write/read
2019-02-13 19:46:48 -Tomcat started on port(s): 8087 (http)
2019-02-13 19:46:48 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-02-13 19:46:48 -==> Parameters: 
2019-02-13 19:46:49 -<==      Total: 1
2019-02-13 19:46:49 -Started BootdoApplication in 12.265 seconds (JVM running for 12.696)
